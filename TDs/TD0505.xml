<?xml version="1.0" encoding="utf-8"?>
<technical-decisions  xmlns:h="http://www.w3.org/1999/xhtml" 
		      xmlns="https://niap-ccevs.org/cc/v1">
  <bunch>
    <applies-to max-inclusive="1.3" name="Protection Profile for Application Software"/>

    <decision id='0505'>
    	<notes>Clarification of revocation testing under RFC6066</notes>

        <change xpath=".//f-element[@id='fia_x509_ext.1.1']" mode="replace">
          <f-element id="fia_x509_ext.1.1">
            <title>
              The application shall 
              <selectables>
                <selectable>
                  invoked platform-provided functionality
                </selectable>
                <selectable>
                  implement functionality
                </selectable>
              </selectables>
              to validate certificates in accordance with the following rules:
              <h:ul>
                <h:li>
                  RFC 5280 certificate validation and certificate path validation.
                </h:li>
                <h:li>
                  The certificate path must terminate with a trusted CA certificate.
                </h:li>
                <h:li>
                  The application shall validate a certificate path by ensuring the presence of the 
                  basicConstraints extension and that the CA flag is set to TRUE for all CA 
                  certificates.
                </h:li>
                <h:li>
                  The application shall validate the revocation status of the certificate using 
                  <selectables>
                    <selectable>
                      the Online Certificate Status Protocol (OCSP) as specified in RFC 2560
                    </selectable>
                    <selectable>
                      a Certificate Revocation List (CRL) as specified in RFC 5280 Section 6.3
                    </selectable>
                    <selectable>
                      a Certificate Revocation List (CRL) as specified in RFC 5759
                    </selectable>
                    <selectable>
                     an OCSP TLS Status Request Extension (i.e., OCSP stapling) as specified in RFC 6066
                    </selectable>
                    <selectable>
                     OCSP TLS Multi-Certificate Status Request Extension (i.e.,OCSP Multi-stapling) as specified in RFC 6961
                    </selectable>
                  </selectables>
                  .
                </h:li>
                <h:li>
                  The application shall validate the extendedKeyUsage field according to the 
                  following rules:
                  <h:ul>
                    <h:li>
                      Certificates used for trusted updates and executable code integrity 
                      verification shall have the Code Signing purpose 
                      (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.
                    </h:li>
                    <h:li>
                      Server certificates presented for 
                      <h:abbr title="Transport Layer Security">TLS</h:abbr> shall have the Server 
                      Authentication purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the 
                      extendedKeyUsage field.
                    </h:li>
                    <h:li>
                      Client certificates presented for 
                      <h:abbr title="Transport Layer Security">TLS</h:abbr> shall have the Client 
                      Authentication purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the 
                      extendedKeyUsage field.
                    </h:li>
                    <h:li>
                      S/MIME certificates presented for email encryption and signature shall have 
                      the Email Protection purpose (id-kp 4 with OID 1.3.6.1.5.5.7.3.4) in the 
                      extendedKeyUsage field.
                    </h:li>
                    <h:li>
                      OCSP certificates presented for OCSP responses shall have the OCSP Signing 
                      purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the extendedKeyUsage field.
                    </h:li>
                    <h:li>
                      Server certificates presented for EST shall have the CMC Registration 
                      Authority (RA) purpose (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28) in the 
                      extendedKeyUsage field.
                    </h:li>
                  </h:ul>
                </h:li>
              </h:ul>
            </title>
            <note role="application">
	      <linkref linkend="FIA_X509_EXT.1.1"/> 
	      lists the rules for validating certificates.
	      The <abbr title="Security Target" linkend="ST">ST</abbr> author shall select whether revocation status is verified using OCSP or CRLs. 
	      <linkref linkend="FIA_X509_EXT.2"/> 
              requires that certificates are used for HTTPS, TLS and DTLS; this use requires that the 
              extendedKeyUsage rules are verified.
              <h:br />
              Regardless of the selection of <h:i>implement functionality</h:i> or <h:i>invoke platform-provided functionality</h:i>,
              the validation is expected to end in a trusted root CA certificate in a root 
              store managed by the platform.
            </note>
            <aactivity>
              <TSS/>The evaluator shall ensure the <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes where the check of 
              validity of the certificates takes place. The evaluator ensures the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> also provides a description of the certificate path validation 
              algorithm.
              <Guidance/> None.
              <Tests/>
              The tests described must be performed in conjunction with the other certificate 
              services evaluation activities, including the functions in <linkref linkend="FIA_X509_EXT.2.1"/>. The tests 
              for the extendedKeyUsage rules are performed in conjunction with the uses that require 
              those rules. If the application supports chains of length four or greater, 
	      the evaluator shall create a chain of at least four certificates: the 
              node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.
	      If the application supports a maximum trust depth of two, then a chain with
	      no Intermediate CA should instead be created.
	      
		    <testlist>
                <test>
                  The evaluator shall demonstrate that validating a certificate without a valid 
                  certification path results in the function failing. The evaluator shall then load 
                  a certificate or certificates as trusted CAs needed to validate the certificate to 
                  be used in the function, and demonstrate that the function succeeds. The evaluator 
                  shall then delete one of the certificates, and show that the function fails.
                </test>
                <test>
                  The evaluator shall demonstrate that validating an expired certificate results in 
                  the function failing.
                </test>
                <test>
                  The evaluator shall test that the <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> can properly handle 
                  revoked certificates-–conditional on whether CRL, OCSP, OCSP Stapling or OCSP Multi-stapling is selected;
                  if multiple methods are selected, then the following tests shall be performed 
		  for each method:
		  <h:ul>
		    <h:li>
		      The evaluator shall test revocation of the node certificate. 
		    </h:li>
		    <h:li>
		      The evaluator shall also test revocation of an intermediate CA certificate 
		      (i.e. the intermediate CA certificate should be revoked by the root CA), 
		      if intermediate CA certificates are supported. If OCSP stapling per RFC6066 is the only supported revocation method, this test is omitted.
		    </h:li>
		  </h:ul>
		  The evaluator shall ensure that a valid certificate is used, and that the 
                  validation function succeeds. The evaluator then attempts the test with a 
                  certificate that has been revoked (for each method chosen in the selection) to 
                  ensure when the certificate is no longer valid that the validation function fails.
                </test>
                <test>
                  If OCSP is selected, the evaluator shall configure the OCSP server or use a 
                  man-in-the-middle tool to present a certificate that does not have the OCSP 
                  signing purpose and verify that validation of the OCSP response fails. If CRL is 
                  selected, the evaluator shall configure the CA to sign a CRL with a certificate 
                  that does not have the cRLsign key usage bit set, and verify that validation of 
                  the CRL fails.
                </test>
                <test>
                  The evaluator shall modify any byte in the first eight bytes of the certificate 
                  and demonstrate that the certificate fails to validate. (The certificate will fail 
                  to parse correctly.)
                </test>
                <test>
                  The evaluator shall modify any byte in the last byte of the certificate and 
                  demonstrate that the certificate fails to validate. (The signature on the 
                  certificate will not validate.)
                </test>
                <test>
                  The evaluator shall modify any byte in the public key of the certificate and 
                  demonstrate that the certificate fails to validate. (The signature on the 
                  certificate will not validate.)
                </test>
              </testlist> 
            </aactivity>
          </f-element>
	</change>
    </decision>
  </bunch>
</technical-decisions>
