<?xml version="1.0" encoding="UTF-8"?>
<PP xmlns="http://secure.tuvit.de/schemata/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ProtectionProfile.xsd" name="Application Software" image="image1">
  <content>
    <PPReference title="PP Reference" label="ID003">
      <ReferenceTable>
        <PPTitle>Protection Profile for Application Software</PPTitle>
        <PPVersion>.1</PPVersion>
        <PPAuthor>National Information Assurance Partnership</PPAuthor>
        <PPPubDate>2013-02-28</PPPubDate>
        <PPCertificationID>NIAP-whoknows</PPCertificationID>
        <CCVersion>.01 Revision 0</CCVersion>
        <Keywords>application; software</Keywords>
        <entry>
          <name>Registration</name>
          <description>National Information Assurance Partnership</description>
        </entry>
      </ReferenceTable>
    </PPReference>
    <RevisionHistory>
      <entry>
        <version>v .5</version>
        <date>2013-01-13</date>
        <subject/>
      </entry>
    </RevisionHistory>
    <chapter title="Introduction" label="apeint">
      <section title="Overview" label="ppoverview">
				The scope of this Protection Profile is to describe the
functionality of application software in terms of <cite id="bibCC"/> and to
define functional and assurance requirements for such software.  

In recent years, software attacks have shifted from targeting operating systems to targeting applications. This has been the natural response to improvements in operating system security and development processes. As a result, it is paramount that the security of applications be improved to reduce the risk to client machines and enterprise networks. 
 The requirements in this Protection Profile are intended to improve the security of applications by ensuring that they take advantage of operating system security services, environmental mitigations, and underlying hardware.  Additionally, these requirements attempt to define acceptable behavior for applications regardless of the security features provided by the operating system.
            </section>
      <section title="Compliant Targets of Evaluation" label="TOEdescription">
The requirements in this document apply to all application software that runs on any operating system—regardless of the function of the application, identity of the operating system, or composition of the underlying platform. For purposes of this document, an application is defined as software that runs on an operating system and performs tasks on behalf of the user or owner of the platform. As distinguished from applications, operating system software manages platform resources and provides services for applications. 
Applications that come bundled with an operating system (such as web browsers, email clients and media players) fall within the scope of these requirements. Naturally, third-party software (such as word processors, PDF readers, and downloadable smart-phone apps) is also in scope. Systems software that is delivered and installed with an application (such as kernel drivers) is considered part of the application for purposes of this document.
BIOS and other firmware, the operating system kernel, and other systems software (and drivers) that are essential to the functioning of the system are outside the scope of this document. System services—even if they run with user-level privileges—are considered to be part of the operating system, and are thus also out of scope.
Some application types are covered by more specific protection profiles. Such applications are subject to both this Protection Profile (PP) and the PP that addresses their special functionality. For example, VPN Client Applications are subject to the requirements in both this PP and the VPN Client PP. 
             <subsection title="TOE configuration and TOE environment" label="TOEconfig">
                    Beside the fact that many biometric characteristics could be used to build a biometric verification system that conforms to this PP, a biometric system in general could be realized in two major configurations:
                    <list><item><b>A Stand-alone solution:</b> The stand-alone solution is not integrated into another network and works with one database</item><item><b>A Network-integrated solution:</b> The network-integrated solution is embedded into an existing network.</item></list>
                    This PP describes a biometric verification system as a stand alone solution but should be applicable to network integrated solutions as well.
                    The security related problems of those distributed systems should then be considered via:
                    <ol><li>Assumptions for the TOE environment: e.g. firewall, Virus and Trojan protection, trustworthy internal network environment, physical protection</li><li>Requirements for additional functionality: e.g. encrypted transmission, encrypted storage, clear memory, etc.</li></ol>
					The performance of biometric systems depends on physical
environmental conditions in its environment. Those environmental factors that
could influence a biometric system are dependent on the used biometric modality
and on the used capture device. Because the capture device is not necessarily
part of the TOE and assumed to work within acceptable ranges, those factors are
not mentioned here in more detail. However, the author of a ST of has to
describe the environment of the TOE in more detail. It has to be specified,
which capture devices are suitable to be used with the TOE and how the
environment has to be for these devices.  It is likely that the TOE is not able
to run stand-alone. In this cAPE the ST author shall specify the IT components
which are necessary to run the TOE (e.g. a PC with a specific operating
system).
                </subsection>
                <subsection title="TOE boundary" label="TOEboundary">
					A simplified model of the biometric verification system and
its boundaries is shown in Figure 1. Because the capture device is not
necessarily part of the TOE the biometric verification system as described in
this PP may be a pure software system. However, it should be noted that the ST
author has the option to decide that the capture device is part of the TOE.
This may be necessary in cases where the capture device contributes to the
Security Functionality of the TOE.  The functionality to perform an audit
review is not part of the TOE but of the environment. Nevertheless, the TOE of
course has to include functionality for auditing.  Furthermore, the database
where the biometric references and other information is stored in, is not part
of the TOE. The TOE has to provide an interface to this database that ensures a
correct and secure communication.
                    <figure entity="images/appdiagram.png" title="Applications on Operating System" label="generictoedesign"/>
                    Some security related components, functions and interfaces of the TOE environment should be considered here:
                        <list><item><b>Capture Device:</b> This component that is also called sensor is responsible for capturing the biometric characteristic from the user and forwards it into the biometric system. Depending on the used sensor technology also additional processes as a liveness detection or an image enhancement could be performed by this device.</item><item><b>Policy manager:</b> The result of the biometric verification process is passed on to the policy manager of the environment. This component is responsible for checking the user’s rights and opening the portal if the user has sufficient privileges and was successfully verified by the TOE and is therewith realizing an access control mechanism for the portal.</item><item><b>Storage:</b> The environment has to provide a database to be used by the TOE. This is used to store the biometric reference of a user but it can be used to store additional information too.</item><item><b>Portal:</b> The physical or logical point beyond which information or assets are protected by a biometric system is controlled by the TOE environment policy management, which gets the verification results (verification "failed" or "successful") related to the user identity from the TOE.</item><item><b>Auditing:</b> The environment may provide additional audit functionalities and has to provide a mechanism for audit review of the TOE audit logs.</item><item><b>Transmission / Storage:</b> The environment cares for a secure communication and storing where security relevant data is transferred to or from the TOE.</item></list>
                    
                </subsection>
            </section>
      <section title="Use Cases" label="usecases"><p/>Mobile Application
            </section>
    </chapter>
    <chapter title="Conformance Claims" label="cclaims">
      <ConformanceStatement>
        <strict/>
      </ConformanceStatement>
      <CCConformanceClaim title="CC Conformance Claims" label="ccclaims">
        <list>
          <item>This PP has been developed using Version 3.1 R2 of Common Criteria <cite id="bibCC"/></item>
          <item>This PP is conform to part II and III of <cite id="bibCC"/>.</item>
        </list>
      </CCConformanceClaim>
      <section title="PP Claim" label="ppclaim">
        <list>
          <item>This PP does not claim conformance to any other Protection Profile.</item>
        </list>
      </section>
      <section title="Package Claim" label="packclaim">
        <list>
          <item>Maybe this is somewhere to talk about the use of this Protection Profile in an extended package, instead of something about EALs. Or just delete this section.</item>
        </list>
      </section>
    </chapter>
    <chapter title="Security Problem Definition" label="SPD">
Annex A presents the Security Problem Description (SPD) in a more “traditional”
form. The following sections detail the problems that compliant TOEs will
address; references to the “traditional” statements in Annex A are included.
            <section title="Threats" label="Threats"><ThreatsPlacement>
                </ThreatsPlacement></section>
            <section title="Assumptions" label="Assumptions"><AssumptionsPlacement/></section>
            <OSPsSec title="Operational Security Policies" label="OSPs"><OSPsPlacement>
                </OSPsPlacement></OSPsSec>
        </chapter>
    <chapter title="Security Objectives" label="SecurityObjectives">
      <section title="Security Objectives for the TOE" label="SecurityObjectivesTOE">
        <SOsPlacement>
                </SOsPlacement>
      </section>
      <section title="Security objectives for the TOE or its operational environment" label="SecurityObjectivesTOEorEnvironment">
                Due to the broad spectrum of biometric technology it is not possible to specify on the level of this PP whether some aspects of threats are countered by the TOE itself or the environment or a combination of both. Parts of the threat T.RESIDUAL (exploiting residual data at the capture device) and the threat T.REPRODUCE can optionally be countered in the environment of the TOE.
                Therefore, the following objectives (that serve to counter those threats) have neither been assigned to the TOE nor its environment. The ST author is in charge of describing whether the TOE or the environment is responsible for these objectives. For cases where the TOE is able to fulfil theses objectives it is of course preferable to fulfil theses objectives with requirements for the TOE. In this case the ST author is in charge of defining those objectives in form of appropriate SFRs. The PP author provides a recommendation for SFRs used to model those objectives in chapter<ref ref="chapAppendix"/>.
                Please note that it should be specifically considered to assign those objectives to the TOE in cAPEs where the capture device is part of the TOE.
                <SOEsPlacement>
                </SOEsPlacement>
            </section>
      <SORationale title="Rationale" label="OSR">
        <subsection title="Overview" label="OSRoverview">
                    The following table gives an overview, how the assumptions, threats, and organisational security policies are addressed by the security objectives. The text of the following subchapters justifies this more detailed.
                </subsection>
        <SORationalePlacement/>
      </SORationale>
    </chapter>
    <chapter title="Security Requirements" label="SecurityRequirements">
            This chapter describes the security functional and the assurance requirements which have to be fulfilled by the TOE. Those requirements comprise functional components from part 2 of [CC] and the assurance components as defined for the Evaluation Assurance Level 2 part 3 of [CC].
            The following notations are used:
            <list><item><b>Refinement</b> operation (denoted by <b>bold text</b>): is used to add details to a requirement, and thus further restricts a requirement.</item><item><b>Selection</b> (denoted by <u>underlined text</u>): is used to select one or more options provided by the [CC] in stating a requirement.</item><item><b>Assignment</b> operation (denoted by <i>italicised text</i>): is used to assign a specific value to an unspecified parameter, such as the length of a password. Showing the value in square brackets indicates assignment.</item><item><b>Iteration</b> operation: are identified with a number inside parentheses (e.g. “(1)”)</item></list>

            <section title="Security Functional Requirements for the TOE" label="SFRfTOE">
				The Security Functional Requirements included in this section
				are derived from Part 2 of the Common Criteria for Information Technology
				Security Evaluation, Version 3.1, Revision 4, with additional extended
				functional components.

		        <subsection title="Security Audit (FAU)" label="fau"><component id="fau_gen.1" name="Audit Data Generation"><f-element id="fau_gen.1.1">
The TSF shall be able to generate an audit record of the following auditable events:
<ol><li>Start-up and shutdown of the audit functions;</li><li>All administrative actions;</li><li>User authentication attempts and success/failure of the attempt;</li><li>Start-up and shutdown of the OS and kernel</li><li>Failures of security functions;</li><li>Integrity verification failures;</li><li>Software updates;</li><li>Insertion or removal of removable media;</li><li>Establishment of a synchronizing connection;</li><li>Establishment of a trusted channel;</li><li>[selection: Audit records reaching an administrator-configurable percentage of audit capacity, [assignment: other auditable events derived from this profile]].</li></ol>
</f-element><f-element id="fau_gen.1.2">
The TSF shall record within each audit record at least the following information:

Date and time of the event, type of event, subject identity, and the outcome (success or failure) of the event.


</f-element></component></subsection>

        <subsection title="User Data Protection (FDP)" label="fdp"><component id="fdp_rip.2" name="Full residual information protection"><f-element id="fdp_rip.2.1">
                    The TSF shall ensure that any previous information content of a 
resource is made unavailable upon the 
<selection><list><item>allocation of the resource to</item><item> deallocation of the resource from</item></list></selection> the following objects: 
<assignment>list of objects</assignment>.
                </f-element></component><component id="fdp_rip_ext.1" name="Does What It Wants With Residual Data"><f-element id="fdp_rip_ext.1.N">
                    The application shall do 
					<selection><selectionitem>something</selectionitem><selectionitem>nothing</selectionitem><selectionitem>meh</selectionitem></selection>
					with residual data.
                </f-element></component></subsection>


        <subsection title="Security Management (FMT)" label="fmt"><component name="Management of security functions behaviour" id="fmt_mof.1"><f-element id="fmt_mof.1.1">
          The TSF shall restrict the ability to modify the behavior of the functions
          <assignment>
              list of functions
          </assignment>
          to the administrator.
        </f-element></component><component id="fmt_smr.1" name="Security management roles"><f-element id="fmt_smr.1.1">
          The TSF shall maintain the roles 
<selection><selectionitem>turtle</selectionitem><selectionitem>hare</selectionitem></selection>.
        </f-element></component></subsection>
        
        <subsection title="Protection of the TSF (FPT)" id="fpt"><component id="fpt_aex_ext"><f-element>The TSF shall totally protect itself, with like cryptography and stuffs.
				</f-element></component></subsection>

	</section>

            <section title="Security Assurance Requirements" label="secSAR">
                There are no EALs.
                The following table lists the assurance components which are therefore applicable to this PP.
                <SAR_overviewPlacement/>
                Due to the special character of biometric technology, the following chapters provide the evaluators with some additional giudance for specific aspects of assurance classes. By the time this Protection Profile has been developed, no comprehensive methodology for evaluations of biometric technology has been available in the scheme of Common Criteria. Once such a methodology is available it may supersede the recommendations of the following chapters.
                <subsection title="Additional guidance for Guidance documents" label="agfgd">
                    The following aspects of biometric technology may require special consideration during the development and the evaluation of the guidance documentation:
                    
                    
                </subsection>
                <subsection title="Additional guidance for tests" label="agft">
                    The tests of the developer and the evaluators shall include statistic performance testing of the security relevant error rates. Such a test comprises three important steps ... yadda yadda yadda
                    
                    
                    The evaluator shall seek guidance on those tests in relevant documentation. Specifically the evaluator shall consider the information given in <cite id="bibISO19792"/> and <cite id="bibISO19795"/>.
                    Those error rates that have been identified to be relevant for the TOE and their maximum values (the tests have to show that the TOE does not exceed those values) shall be reported in the ST.
                </subsection>
                <subsection title="Additional guidance for Vulnerabillty Assessment" label="agfva">
                    While biometric verification systems solve some of the problems that classical authentication mechanisms that are based on knowledge (e.g. a PIN) are facing, the nature of biometric technology leads to some specific vulnerabilities that are inherent for this kind of technology.
                    As such each evaluation of a biometric system will have to consider those vulnerabilities like the use of fakes or the imitation of biometric characteristics. Some of those vulnerabilities are addressed by the description of the threats in this PP.
                    In the context of this PP the evaluator should seek their primary guidance for vulnerability assessment in public sources listing typical vulnerabilities of biometric technology. Those sources should include (but not be limited to) <cite id="bibISO19792"/> and <cite id="bibBEM"/> or their successor versions.
                    Each of the identified vulnerabilities will have to be considered during the analysis. While it may be easy for some of the potential vulnerabilities to argue that they are not relevant on a theoretical level the assessment of other vulnerabilities may require penetration testing or deeper information about the system architecture.
                </subsection>
            </section>

            <RationaleSec title="Security Requirements Rationale" label="secSRR">
                This chapter proves that the set of security requirements (TOE) is suited to fulfil the security objectives described in chapter<ref ref="SecurityObjectives"/> and that each SFR can be traced back to the security objectives. At least one security objective exists for each security requirement.
                The following paragraphs contain more details on this mapping.
                <SFRRationalePlacement/>
                The following table summarises all TOE functional requirements dependencies of this PP and demonstrates that they are fulfilled.        
(WAS REMOVED.)
                <subsection title="Security Assurance Requirements rationale" label="sarr">
                    Additional guidance has been provided for some of the assurance components.
                    There are no EALs.  
                </subsection>                
            </RationaleSec>
        </chapter>
    <chapter title="Appendix" label="chapAppendix">
      <section title="Glossary" label="glossary">
				The following terms are used in this Protection Profile:
				<InsertGlossary/>
			</section>
    </chapter>
    <glossary>
      <entry>
        <term>Application</term>
        <description>Software that runs on an operating system and performs tasks on behalf of the user or owner of the platform.</description>
      </entry>
      <entry>
        <term>Developer</term>
        <description>
An entity that writes application software.  For the purposes of this document, vendors and developers are the same.</description>
      </entry>
      <entry>
        <term>Device Owner/Machine Owner</term>
        <description>
Entity that purchased and maintains ownership of a mobile device or computer.
</description>
      </entry>
      <entry>
        <term>Information Owner</term>
        <description>
Entity whose information is stored and/or processed on a device or computer; can be an application-specific provider, a digital provider, or an enterprise that allows access to resources from mobile devices or remote computers.</description>
      </entry>
      <entry>
        <term>OS</term>
        <description>
Operating System - Software that manages platform resources and provides services for applications.
</description>
      </entry>
      <entry>
        <term>Platform</term>
        <description>
The physical or virtual environment in which software runs. From an operating system’s perspective, the platform is the physical or virtual hardware. From an application’s perspective, the platform is the operating system and the operating system’s platform.
</description>
      </entry>
      <entry>
        <term>Vendor</term>
        <description>
An entity that sells application software. For purposes of this document, vendors and developers are the same. Vendors are responsible for maintaining and updating application software.
</description>
      </entry>
      <entry>
        <term>CC</term>
        <description>Common Criteria - Common Criteria for Information Technology Security Evaluation</description>
      </entry>
      <entry>
        <term>PP</term>
        <description>Protection Profile - An implementation-independent set of security requirements for a category of TOEs that meet specific consumer needs.</description>
      </entry>
      <entry>
        <term>ST</term>
        <description>Security Target - A set of implementation-dependent security requirements for a specific TOE.</description>
      </entry>
      <entry>
        <term>TOE</term>
        <description>Target of Evaluation</description>
      </entry>
      <entry>
        <term>TSF</term>
        <description>TOE Security Functionality.</description>
      </entry>
    </glossary>
    <bibliography>
      <entry id="bibISO19795">
        <tag>19795</tag>
        <description>ISO/IEC 19795, Biometric performance testing and reporting- Part 1:Principles and framework</description>
      </entry>
      <entry id="bibISO19792">
        <tag>19792</tag>
        <description>ISO/IEC 19792, Security Evaluation of Biometrics, 3rd Committee Draft</description>
      </entry>
      <entry id="bibBEM">
        <tag>BEM</tag>
        <description>Biometrics Evaluation Methodology Supplement, Version 1.0, August 2002</description>
      </entry>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation -
                    <list><item>Part 1: Introduction and general model, dated September 2006, version 3.1 R1</item><item>Part 2: Security functional requirements, dated September 2007, version 3.1, R2</item><item>Part 3: Security assurance requirements, dated September 2007, version 3.1, R2</item></list>                    
                </description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>Common Evaluation Methodology for Information Technology Security - Evaluation Methodology, dated September 2007, version 3.1 R2</description>
      </entry>
    </bibliography>
  </content>
  <OSPs>
    <OSP id="P.ERROR">
      <description>The TOE shall meet recognised national and/or international criteria for its security relevant error rates (e.g. False Accept Rate (FAR) and False Rejection Rate (FRR)).</description>
      <objective-refer ref="O.BIO_VERIFICATION">
        <rationale>
                   The organisational security policy OSP.ERROR (the TOE must meet criteria for security relevant error rates) is directly met by O.BIO_VERIFICATION as this objective describes that the biometric verification mechanism has to reach the security relevant error rates as required by OSP.ERROR.
               </rationale>
      </objective-refer>
    </OSP>
    <OSP id="P.USERLIMIT">
      <description>
               Impostors must be prevented from gaining access to the portal by making repeated verification attempts using one or more claimed user IDs.
                   Therefore the TOE shall be able to limit the maximum number of unsuccessful verification attempts.</description>
      <objective-refer ref="O.AUDIT_REACTION">
        <rationale/>
      </objective-refer>
      <appnote>
               Reasonable requirements on error rates are highly dependent on other characteristics of the biometric authentication mechanism. Characteristics that shall be considered to decide on the acceptable values include (but are not limited to):
               <list><item>The number of allowed unsuccessful authentication attempts,</item><item>The time that is needed to process one authentication attempt,</item><item>The concrete environment of the TOE</item></list>
               The ST author should consider <cite id="bibISO19795"/> in order to identify the security relevant error rates and provide a justification for the choice of security relevant error rates.
           </appnote>
    </OSP>
  </OSPs>
  <threats>
    <threat id="T.BRUTEFORCE">
      <description>
              An attacker may perform a brute force attack in order to get verified by the TOE using the identity of another user.
              In this way the attacker is trying to get access to the assets residing in the environment that should be protected with the support of the TOE.
              This threat considers two different threat agents and corresponding adverse actions:
              <list><item>A not really hostile user who just tries to get verified with a wrong claimed identity a few times. The motivation of such a user is usually just curiosity. He does not need specific knowledge about the TOE to perform this attack.</item><item>A not really hostile user who just tries to get verified with a wrong claimed identity a few times. The motivation of such a user is usually just curiosity. He does not need specific knowledge about the TOE to perform this attack.</item></list>
          </description>
      <objective-refer ref="O.AUDIT_REACTION">
        <rationale>
                  O.AUDIT_REACTION records an unusual high amount of verification attempts to one claimed ID or an unusual high amount of unsuccessful verification attempts against different IDs and reacts via blocking the verification function system for a specific time or informing an administrator.
              </rationale>
      </objective-refer>
      <objective-refer ref="O.BIO_VERIFICATION">
        <rationale>
                    O.BIO_VERIFICATION ensures that the verification process itself is done with an appropriate reliability and that the chance of impostor brute force attempts is less then the specified limit for the assurance claim of the TOE.
                </rationale>
      </objective-refer>
    </threat>
    <threat id="T.MODIFY_ASSETS">
      <description>
                An attacker may try to modify secondary assets like biometric references or other security-relevant system configuration data.
                Such attacks could compromise the integrity of the user security attributes resulting in an incorrect result that might give unauthorized access to the portal.
                This threat covers a number of distinct types of attacks:
                <list><item>An attacker may attempt to modify the threshold level used by the biometric system to authenticate users. If the attacker is able to change the threshold (for one or more authorised users), the ability to verify the user(s) will be compromised and he may succeed in gaining access to the portal or an authorised user may be denied entry to the portal.</item><item>An attacker may attempt to modify the biometric authentication data (the Biometric Reference Record) of an authorised user with the aim of enabling an attacker to masquerade as the authorised user and gain access to the portal. Alternatively, an authorised user may be denied access to the portal. The attacker may be able to insert a new biometric reference, containing biometric data belonging to an attacker, with the aim of enabling the impostor to gain access to the portal.</item></list>
                This kind of attack presupposes that the attacker has further knowledge about the TOE and maybe special equipment.
            </description>
      <objective-refer ref="O.ROLES">
        <rationale>
                    O.ROLES is responsible to limit the access to security relevant objects of the TOE to authorized administrators
                </rationale>
      </objective-refer>
      <objective-refer ref="O.AUTH_ADMIN">
        <rationale>
                    O.AUTH_ADMIN is responsible to authenticate the administrator.
                </rationale>
      </objective-refer>
      <objective-refer ref="O.AUDIT_REACTION">
        <rationale>
                    O.AUDIT_REACTION is logging an impostor attempt.
                </rationale>
      </objective-refer>
      <objective-refer ref="OE.ENVIRONMENT">
        <rationale>
                    OE.ENVIRONMENT prevents tampering with the database containing the BRRs.
                </rationale>
      </objective-refer>
    </threat>
    <threat id="T.REPRODUCE">
      <description>
                An attacker may try to record and replay, imitate, or generate the biometric characteristic of an authorised user.
                In this way the attacker is trying to get access to the assets residing in the environment that should be protected with the support of the TOE.
                The attacker will need further knowledge on biometric verification systems and the used biometric modality. He may use technical equipment for analysing and generation of the biometric characteristics.  Fingerprint and hand geometry systems are known to be vulnerable to artefacts. The setup costs are often low making the production of artefacts worthwhile for impostors for common use biometric technologies.
                The attacker may also be supported by an authorized user of the TOE (e.g. to imitate his biometric characteristic).
            </description>
      <objective-refer ref="OE.NO_REPRODUCE">
        <rationale>
                    The threat T.REPRODUCE is fully countered by a security objective combination of OE.NO_REPRODUCE (as directly follows from the security objective definition) and O.AUDIT_REACTION because the impostor attempt is logged.
                </rationale>
      </objective-refer>
      <objective-refer ref="O.AUDIT_REACTION">
        <rationale>
                    The threat T.REPRODUCE is fully countered by a security objective combination of OE.NO_REPRODUCE (as directly follows from the security objective definition) and O.AUDIT_REACTION because the impostor attempt is logged.
                </rationale>
      </objective-refer>
    </threat>
    <threat id="T.RESIDUAL">
      <description>
                An attacker may try to take advantage of unprotected residual security relevant data (e.g. biometric data and settings) during a user's session or from a previous, already authenticated user.
                In this way the attacker tries to get access to the security relevant settings of the TOE.
                This threat covers several scenarios including:
                <list><item>An attacker takes advantage of the verification memory content (e.g. by reading the memory content, cache or relevant temporary data) using a flaw in a user visible interface of the TOE.A physical access to the components of the TOE is not possible for an attacker due to the Assumption A.PHYSICAL.</item><item>An attacker may take advantage of residual images at the capture device. These are likely to be limited to cases where physical contact with the biometric capture device is necessary for the biometric modality (e.g. fingerprints)The author of this PP is aware of the fact that the capture device is primarily part of the environment. But in an unguarded environment it is impossible to prevent an attacker from exploiting a residual characteristic that remains on the sensor. In the scope of this PP, this threat is therefore included. If the capture device of a TOE is not vulnerable to this kind of attack, this part of the threat may be countered implicitly be the use of a certain sensor technology.</item></list>
                The attacker needs further knowledge about the TOE to find and exploit a vulnerability regarding residual data in memory.
            </description>
      <objective-refer ref="O.RESIDUAL">
        <rationale>
                    O.RESIDUAL directly protects against memory attacks as described in T.RESIDUAL
                </rationale>
      </objective-refer>
      <objective-refer ref="OE.RESIDUAL_CAPTURE">
        <rationale>
                    OE.RESIDUAL_CAPTURE counters the possibility to use residual data from the capture device
                </rationale>
      </objective-refer>
      <objective-refer ref="O.AUDIT_REACTION">
        <rationale>
                    O.AUDIT_REACTION audits a potential impostor attempt.
                </rationale>
      </objective-refer>
    </threat>
    <threat id="T.ROLES">
      <description>
              An already enrolled and authenticated user may try to exceed their privileges. Two types of this threat are possible within the scope of this PP:
              <ol><li>If more than one portal is secured by the TOE, an authorized user may try to get access to a portal where he has no rights for.</li><li>An authorized user may try to get administrator privileges in order to modify the threshold settings of the system or other secondary assets.</li></ol>
              No special knowledge is needed by the attacker to identify the general possibility because each authorized user of the system knows (after his own enrolment process) that an administrator account with higher privileges exists.
          </description>
      <objective-refer ref="O.AUDIT_REACTION">
        <rationale>
                  O.AUDIT_REACTION logs every impostor attempt.
              </rationale>
      </objective-refer>
      <objective-refer ref="O.ROLES">
        <rationale>
                  O.ROLES ensures that only authorized administrators are allowed to perform the administration of the TOE via limiting access to security relevant data of the TOE to administrators
              </rationale>
      </objective-refer>
      <objective-refer ref="O.AUTH_ADMIN">
        <rationale>
                    O.AUTH_ADMIN ensures a secure authentication of administrators.
                </rationale>
      </objective-refer>
      <objective-refer ref="OE.ENVIRONMENT">
        <rationale>
                  Regarding the part of the threat that a user may try to gain access to another portal as he has rights for, this threat is covered by the environment via OE.ENVIRONMENT because the decision whether a user gets access to a portal is done by the policy management of the environment.
              </rationale>
      </objective-refer>
    </threat>
  </threats>
  <assumptions>
    <assumption id="A.ADMINISTRATION">
      <description>
                The TOE administrator is well trained and non hostile. He reads the guidance documentation carefully, completely understands and applies it.
                The TOE administrator is responsible to accompany the TOE installation and oversees the biometric system requirements regarding the TOE as well as the TOE settings and requirements.
            </description>
      <objective-refer ref="OE.ADMINISTRATION">
        <rationale>
                    The assumption A.ADMINISTRATION is covered by security objective OE.ADMINISTRATION as directly follows.
                </rationale>
      </objective-refer>
    </assumption>
    <assumption id="A.CAPTURE">
      <description>
                The capture device as user visible interface operates inside its regular range and is suitable to be used with the TOE. It is assumed that all environmental factors (e.g. lightning) are appropriate with respect to the used capture device and biometric modality.
                Furthermore, it is assumed that bypassing the capture device in a technical manner is not possible. This assumption does not prevent an attacker from presenting an imitated or recorded biometric characteristic to the capture device because even in a guarded environment (and the TOE is primarily unguarded) such a misuse of the system would be possible. Because the capture device has to be accessible for each user a moderate physical robustness is presupposed.
            </description>
      <objective-refer ref="OE.CAPTURE">
        <rationale>
                    The assumption A.CAPTURE is covered by security objective OE.CAPTURE as directly follows
                </rationale>
      </objective-refer>
      <appnote>
                The author of a ST has to specify one or more capture devices which are allowed to be used with the TOE and has to clearly define the range of operation. Furthermore, he has to provide evidences that the captures devices will work with the TOE. The TOE will have to be used with one of the specified capture devices in order to be in its certified configuration.
            </appnote>
    </assumption>
    <assumption id="A.ENROLMENT">
      <description>
                The enrolment is assumed to be already performed and therefore, the biometric reference for each authorized user is assumed to be given. The generated reference is of sufficient quality and is linked to the correct user.
                Additionally, it is assumed that all biometric references are stored in a way that ensures the authenticity and integrity of this data.
            </description>
      <objective-refer ref="OE.ENROLMENT">
        <rationale>
                    The assumption A.ENROLMENT is covered by security objective OE.ENROLMENT as directly follows.
                </rationale>
      </objective-refer>
    </assumption>
    <assumption id="A.ENVIRONMENT">
      <description>
                It is assumed, that necessary TOE operating equipment and adequate infrastructure is available (e.g.: operating system, database, LAN, public telephone, and guardian).
                Specifically the following things are assumed:
                <list><item>It is assumed that the direct environment of the TOE supports the functionality of the biometric system (e.g.: integration of a GINA replacement, audit functionality). Regarding the request of the claimed identity, which is necessary for the biometric authentication, the environment offers the possibility to integrate a claimed identity into the biometric verification process.</item><item>The TOE environment provides a database for the biometric reference of enrolled users, whereby integrity and authenticity are ensured. Also in case of user controlled references (e.g. stored on SmartCard or token), measures exist to protect the authenticity and integrity of the biometric reference.</item><item>The environment ensures a secure communication of security relevant data from and to the TOE.</item><item>It is assumed that the environment provides a functionality to review the audit information of the TOE and to ensures that only authorized administrators have access to the audit logs.</item><item>It is assumed that the TOE environment is free of viruses, trojans, and malicious software.</item></list>
            </description>
      <objective-refer ref="OE.ENVIRONMENT">
        <rationale>
                    The assumption A.ENVIRONMENT is covered by security objectives OE.ENVIRONMENT as directly follows.
                </rationale>
      </objective-refer>
    </assumption>
    <assumption id="A.PHYSICAL">
      <description>
                It is assumed that the TOE and its components are physically protected against unauthorized access or destruction. Physical access to the hardware that is used by the TOE is only allowed for authorized administrators. This does not cover the capture device that has to be accessible for every user.
            </description>
      <objective-refer ref="OE.PHYSICAL">
        <rationale>The assumption A.PHYSICAL is covered by security objective OE.PHYSICAL as directly follows.</rationale>
      </objective-refer>
    </assumption>
    <assumption id="A.FALLBACK">
      <description>
                It is assumed that a fall-back mechanism for the biometric verification system is available that reaches at least the same level of security as the biometric verification system does. This fall-back system is used in cases where an authorized user is rejected by the biometric verification system (False Rejection).
            </description>
      <objective-refer ref="OE.FALLBACK">
        <rationale>The assumption A.FALLBACK is covered by objective OE.FALLBACK as directly follows</rationale>
      </objective-refer>
    </assumption>
  </assumptions>
  <SOs>
    <SO id="O.ENVIRONMENTAL_MITIGATIONS">
      <description>
Exploitation of vulnerabilities in application software is currently one of the chief paths by which attackers gain control of target computers. In recent years, processor manufacturers, compiler developers, and operating system vendors have developed execution environment-based mitigations that increase the cost to the adversary by adding complexity to the task of gaining execution. 
Often, developers can easily take advantage of these mechanisms by using an API provided by the operating system, or by enabling the mechanism through compiler or linker options. 
The following are examples of execution environment mitigations: 
<ul><li>Address-space layout randomization provides a mechanism that randomizes the addresses at which binary images as well as any runtime storage (such as heaps and stacks), are loaded in memory. Varying the locations of all memory mappings adds complexity to the job of an attacker by reducing the predictability of memory layout. The effectiveness of address-space randomization is significantly reduced by the existence of any constant mappings.</li><li>Memory execution protection (a.k.a. Data Execution Prevention (DEP)) provides a mechanism for terminating an application when code is executed from writable memory—that is, memory intended for data only. This can severely limit the places where an attacker can load arbitrary code into memory and attempt to run it.</li><li>Stack buffer overflow protection provides a mechanism that terminates an application when a stack overflow is detected. The benefit of this mechanism is that the target application terminates before malicious code is able to execute.</li><li>Heap corruption protection provides a mechanism that terminates an application when heap structures or metadata corruption is detected.</li></ul>
Other execution environment mitigations might include numeric overflow protections, automatic runtime bounds checking, supervisor mode execution protection, and strict type-checking for numeric comparisons.
            </description>
      <component-refer ref="fau_gen.1"/>
      <component-refer ref="fau_gen.2"/>
      <component-refer ref="fia_afl.1a"/>
      <component-refer ref="fia_afl.1b"/>
    </SO>
    <SO id="O.UPDATES">
      <description>
History has shown that software products are seldom (if ever) shipped without latent errors and vulnerabilities. The ability to deploy patches and updates to fielded software is critical to enterprise network security.
            </description>
      <component-refer ref="fia_atd.1"/>
      <component-refer ref="fmt_mof.1"/>
      <component-refer ref="fmt_mtd.1"/>
      <component-refer ref="fmt_smr.1"/>
    </SO>
    <SO id="O.QUALITY">
      <description>
If possible, applications should take advantage of services and APIs provided by the operating system rather than implement their own versions of these services and APIs. This is especially important for cryptographic services and other complex operations such as file and media parsing. 
If encrypting or hashing sensitive data, use certified secure cryptographic libraries that have been extensively tested. 
            </description>
      <component-refer ref="fia_atd.1"/>
      <component-refer ref="fmt_mof.1"/>
      <component-refer ref="fmt_mtd.1"/>
      <component-refer ref="fmt_smr.1"/>
    </SO>
    <SO id="O.MANAGEMENT">
      <description>
An unmanageable network is much more difficult to secure than a manageable network. Identifying the software on a network is a major challenge to network management. This challenge can be addressed using software identification (SWID) tags. 
SWID tags are XML files embedded within software that provide a standard method for IT departments to track and manage software. The presence of SWIDs can greatly simplify the software management process and improve security by enhancing the ability of IT departments to manage updates. 
            </description>
      <component-refer ref="fia_atd.1"/>
      <component-refer ref="fmt_mof.1"/>
      <component-refer ref="fmt_mtd.1"/>
      <component-refer ref="fmt_smr.1"/>
    </SO>
    <SO id="O.PROTECTED_STORAGE">
      <description>
Applications must properly protect sensitive data. Sensitive data includes cryptographic keys, passwords, and any other data specific to the application that should not be exposed outside of the application.
            </description>
      <component-refer ref="fia_atd.1"/>
      <component-refer ref="fia_uau.2a"/>
      <component-refer ref="fia_uau.5"/>
      <component-refer ref="fia_uau.7"/>
      <component-refer ref="fia_uid.2a"/>
      <component-refer ref="fpt_rpl.1a"/>
      <component-refer ref="fmt_mtd.1"/>
    </SO>
    <SO id="O.PROTECTED_COMMS">
      <description>
Applications must properly protect sensitive data. Sensitive data includes cryptographic keys, passwords, and any other data specific to the application that should not be exposed outside of the application.
            </description>
      <component-refer ref="fia_atd.1"/>
      <component-refer ref="fia_uau.2b"/>
      <component-refer ref="fia_uau.5"/>
      <component-refer ref="fia_uid.2b"/>
    </SO>
    <SO id="O.PROPER_BEHAVIOR">
      <description>
Modification of executable files is a common technique used by malware to gain persistence on a system. This risk can be mitigated by requiring that application data be written only to directories that prohibit file execution, while executable files are confined to directories that can be written only with administrator privilege. Application whitelisting is a technique for enforcing such policies through enumerating the individual applications that may be executed on a system, or by specifying the directories from which applications may be executed.
Applications can support this model by writing data only to locations permitted by security policy. Applications should never write to their own installation directories, or to the installation directories of other applications.
Even though these controls are implemented by the operating system, it is critical that applications conform to the policies these controls implement. If a business-critical application does not conform, then there will be pressure to create a policy exception for the application. This should never happen.
            </description>
      <component-refer ref="fdp_rip.2"/>
    </SO>
    <SO id="O.PRIVACY">
      <description>
Modification of executable files is a common technique used by malware to gain persistence on a system. This risk can be mitigated by requiring that application data be written only to directories that prohibit file execution, while executable files are confined to directories that can be written only with administrator privilege. Application whitelisting is a technique for enforcing such policies through enumerating the individual applications that may be executed on a system, or by specifying the directories from which applications may be executed.
Applications can support this model by writing data only to locations permitted by security policy. Applications should never write to their own installation directories, or to the installation directories of other applications.
Even though these controls are implemented by the operating system, it is critical that applications conform to the policies these controls implement. If a business-critical application does not conform, then there will be pressure to create a policy exception for the application. This should never happen.
            </description>
      <component-refer ref="fdp_rip.2"/>
    </SO>
  </SOs>
  <SOEs>
    <SOE id="OE.NO_REPRODUCE">
      <description>
                Recorded and replayed, imitated or generated biometric data must not be accepted as legitimate by the biometric system. This includes forgery of complete biometric samples.
            </description>
    </SOE>
    <SOE id="OE.RESIDUAL_CAPTURE">
      <description>
                It has to be assured that residual data that may remain at a capture device after use cannot be used to gain access.
            </description>
      <appnote>
                In some biometric technologies the capture device is responsible to perform a check against recorded and replayed, imitated or generated biometric data. Because the capture device is not part of the TOE as specified in this PP it is here not possible to determine whether the TOE or its environment have to counter these kinds of attacks. If possible with the specific technology, the ST author is in charge of defining this objective as an objective for the TOE.
            </appnote>
      <appnote>
                In general the capture device that is outside the TOE is responsible to ensure that no residual data remains after it has been used. But in some biometric technologies it is also possible that residual data remains at the capture device but the TOE is able to detect and prohibit the use of this data.
            </appnote>
    </SOE>
    <SOE id="OE.ADMINISTRATION">
      <description>
                It has to be ensured that the TOE administrator is well trained and non-hostile. He has to read the guidance documentation carefully, completely understand and apply it.
                 The TOE administrator shall be responsible to accompany the TOE installation and oversees the biometric system requirements regarding the TOE as well as the TOE settings and requirements.
            </description>
    </SOE>
    <SOE id="OE.CAPTURE">
      <description>
                It shall be ensured that the capture device as user visible interface operates inside its regular range and is suitable for to be used with the TOE<b>Application Note (ST):</b> The author of a ST has to specify one or more capture devices which are allowed to be used with the TOE and has to clearly define the range of operation. Furthermore, he has to provide evidences that the captures devices will adequately work with the TOE. The TOE will only be in its certified configuration when one of the specified capture devices is used.. This includes that all environmental factors (e.g. lightning) are appropriate with respect to the used capture device and biometric modality.
                Furthermore, it has to be ensured that bypassing the capture device in a technical manner is not possible. Because the capture device has to be accessible for each user a moderate physical robustness has to be ensured.
            </description>
    </SOE>
    <SOE id="OE.ENROLMENT">
      <description>
                The enrolment shall be already performed and therefore, the biometric reference for each authorized user is given. The generated references shall be of sufficient quality and linked to the correct user.
                     Additionally, all biometric references shall be stored in a way that ensure the authenticity and integrity of this data.
            </description>
    </SOE>
    <SOE id="OE.ENVIRONMENT">
      <description>
                The TOE operating equipment and adequate infrastructure shall be available (e.g.: operating system, database, LAN, public telephone, and guardian).
                Specifically the following things have to be ensured:
                <list><item>The direct environment of the TOE has to support the functionality of the biometric system (e.g.: integration of a GINA replacement, audit functionality). Regarding the request of the claimed identity, which is necessary for the biometric authentication, the environment shall offer the possibility to integrate a claimed identity into the biometric verification process.</item><item>The TOE environment shall provide a database for the biometric references of enrolled users, whereby integrity and authenticity have to be ensured. Also, in case of user controlled biometric references (e.g. stored on SmartCard or token), measures shall exist to protect the authenticity and integrity of the biometric reference.</item><item>The environment has to implement the access control functionality for the protected portal. Specifically, if the environment has more than one portal that is secured using the services of the TOE the environment has to ensure that after authentication of a user (by the TOE) a portal is only opened if the user has the necessary permission.</item><item>The environment shall ensure a secure communication of security relevant data from and to the TOE.</item><item>The environment shall provide a functionality to review the audit information of the TOE and to ensure that only authorized administrators have access to the audit logs.</item><item>The TOE environment has to be free of viruses, trojan horses, and other malicious software.</item><item>The TOE environment shall provide reliable time stamps.</item></list>
            </description>
    </SOE>
    <SOE id="OE.PHYSICAL">
      <description>
                The TOE and its components shall be physically protected against unauthorized access or destruction. Physical access to the hardware that is used by the TOE may only be allowed for authorized administrators. This may not cover the capture device that has to be accessible for every user.
            </description>
    </SOE>
    <SOE id="OE.FALLBACK">
      <description>A fall-back mechanism for the biometric verification system shall available that reaches at least the same level of security as the biometric verification system does. This fall-back system is used in cases where an authorized user is rejected by the biometric verification system (False Rejection).</description>
    </SOE>
  </SOEs>
  <SARs>
    <class id="adv">
      <component id="adv_arc.1"/>
      <component id="adv_fsp.2"/>
      <component id="adv_tds.1"/>
    </class>
    <class id="agd">
      <component id="agd_ope.1"/>
      <component id="agd_pre.1"/>
    </class>
    <class id="alc">
      <component id="alc_cmc.1"/>
      <component id="alc_cms.2"/>
      <component id="alc_del.1"/>
    </class>
    <class id="ase">
      <component id="ase_ccl.1"/>
      <component id="ase_ecd.1"/>
      <component id="ase_int.1"/>
      <component id="ase_obj.2"/>
      <component id="ase_req.2"/>
      <component id="ase_spd.1"/>
      <component id="ase_tss.1"/>
    </class>
    <class id="ate">
      <component id="ate_cov.1"/>
      <component id="ate_fun.1"/>
      <component id="ate_ind.2"/>
    </class>
    <class id="ava">
      <component id="ava_van.2"/>
    </class>
  </SARs>
</PP>
