<?xml version="1.0" encoding="utf-8"?>
<PP xmlns="http://secure.tuvit.de/schemata/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ProtectionProfile.xsd" name="Application Software">
  <PPReference title="PP Reference" id="ID003">
    <ReferenceTable>
      <PPTitle>Protection Profile for Application Software</PPTitle>
      <PPVersion>.6</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2014-03-31</PPPubDate>
      <PPCertificationID>NIAP-whoknows</PPCertificationID>
      <CCVersion>.01 Revision 0</CCVersion>
      <Keywords>application; software</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership
				</description>
      </entry>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>v .1</version>
      <date>2013-01-08</date>
      <subject>Initial draft commit</subject>
    </entry>
    <entry>
      <version>v .6</version>
      <date>2013-03-14</date>
      <subject>Attractive presentation achieved</subject>
    </entry>
  </RevisionHistory>
  <chapter title="Introduction" id="int">
    <!-- TO DO: Distinguish citations from cross-references. Mark up each appropriately. 
			Pick an attribute other than id to refer to the linked element. Transform 
			them more intelligently. Better yet, use standard markup with tool support. -->
    <section title="Overview" id="ppoverview">
			The scope of this Protection Profile (PP) is to describe the
			functionality of application software in terms of
			<cite linkend="bibCC" />
			and to define functional and assurance requirements for such
			software. In recent years, software attacks have shifted from
			targeting operating systems to targeting applications. This has been
			the natural response to improvements in operating system security
			and
			development processes. As a result, it is paramount that the
			security
			of applications be improved to reduce the risk to client
			systems and
			enterprise networks.
		</section>
    <section title="Terms" id="glossary">
			The following sections provide both Common Criteria and technology
			terms
			used in this Protection Profile.
			<subsection title="Common Criteria Terms" id="ccterms"><glossary><entry><term>Common Criteria (CC)</term><description>Common Criteria for Information
							Technology Security Evaluation
						</description></entry><entry><term>Protection Profile (PP)</term><description>An implementation-independent
							set of security requirements for a category of TOEs that meet
							specific customer needs.
						</description></entry><entry><term>Security Target (ST)</term><description>A set of implementation-dependent
							security requirements for a specific TOE.
						</description></entry><entry><term>Target of Evaluation (TOE)</term><description>The product under evaluation.  In this case, application
							software.
						</description></entry><entry><term>TOE Security Functionality (TSF)</term><description>The security functionality of the product under evaluation.</description></entry></glossary></subsection><subsection title="Technology Terms" id="techterms"><glossary><entry><term>Address Space Layout Randomization (ASLR)</term><description>An anti-exploitation feature which loads memory
							mappings into unpredictable locations. ASLR makes it more
							difficult for an attacker to redirect control to code that they
							have introduced into the address space of an application process.
						</description></entry><entry><term>Application (app)</term><description>Software that runs on an operating system and
							performs tasks on behalf of the user or owner of the platform.
						</description></entry><entry><term>Application Programming Interface (API)</term><description>A specification of routines, data structures, object
							classes, and variables that allows an application to make use of
							services provided by another software component, such as a
							library. APIs are often provided for a set of libraries included
							with the operating system.
						</description></entry><entry><term>Data Execution Prevention (DEP)</term><description>An anti-exploitation feature of modern operating
							systems executing on modern computer hardware, which enforces a
							non-execute permission on pages of memory. DEP prevents pages of
							memory from containing both data and instructions, which makes it
							more difficult for an attacker to introduce and execute code.
						</description></entry><entry><term>Developer</term><description> An entity that writes application software. For the
							purposes of this document, vendors and developers are the same.
						</description></entry><entry><term>Device Owner/Machine Owner</term><description> Entity that purchased and maintains ownership of a
							mobile device or computer.
						</description></entry><entry><term>Information Owner</term><description> Entity whose information is stored and/or processed
							on a device or computer; can be an application-specific provider,
							a digital provider, or an enterprise that allows access to
							resources from mobile devices or remote computers.
						</description></entry><entry><term>Operating System (OS)</term><description>Software that manages platform
							resources and provides
							services for applications.
						</description></entry><entry><term>Platform</term><description> The physical or virtual environment in which
							software runs. From an operating system's perspective, the
							platform is the physical or virtual hardware. From an
							application's perspective, the platform is the operating system
							and the operating system's platform.
						</description></entry><entry><term>Vendor</term><description> An entity that sells application software. For
							purposes of this document, vendors and developers are the same.
							Vendors are responsible for maintaining and updating application
							software.
						</description></entry></glossary></subsection></section>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">
			The requirements in this document apply to all application software
			that runs on any operating system regardless of the function of the
			application, identity of the operating system, or composition of the
			underlying hardware platform. This includes mobile applications
			("apps") as well as application software on desktop or server
			platforms. Some application types are covered by more specific PPs
			which may be expressed as Extended Packages of this PP. Such
			applications are subject to the requirements of both this PP and the
			PP that addresses their special functionality. For example, web
			browsers are subject to the requirements in this PP and the
			Protection Profile for Web Browsers.

			<subsection title="TOE Boundary" id="TOEboundary">
				An application is defined as software that runs on an operating
				system and performs tasks on behalf of the user or owner of the
				system. As distinguished from applications, operating system
				software manages hardware resources and provides a runtime
				environment for applications. Applications that come bundled with
				an
				operating system (such as web browsers, email clients and media
				players) fall within the scope of these requirements. Naturally,
				third-party software such as PDF readers and downloadable
				smartphone
				apps is also in scope. Systems software that is delivered and
				installed with an application (such as kernel
				drivers) is considered
				part of the application for purposes of this
				document. BIOS and other
				firmware, the operating system kernel, and
				other systems software
				(and drivers) that are included with the
				computing platform are
				outside the scope of this document.
				<figure entity="images/appdiagram.png" title="Applications on an Operating System" id="generictoedesign" /></subsection></section>
    <section title="Use Cases" id="usecases">
			Requirements in this Protection Profile are designed to address the
			security
			problem in the following use cases. These use cases are
			intentionally very broad, as many specific use cases exist for
			application software. Many applications may be used in combinations
			of these broad use cases as well.
			<usecases><usecase title="Content Creation" id="contentcreation"><description>
						The application allows a user to create or edits
						documents or other content, saving them to either local
						or remote
						storage.
					</description></usecase><usecase title="Content Consumption" id="contentconsumption"><description>
						The application allows a user to consume content,
						retrieving it from either local or remote storage.
					</description></usecase><usecase title="Communication" id="interactivecomms"><description>
						The application allows a user to communicate
						interactively or non-interactively with other users over a
						communications channel.
					</description></usecase></usecases></section>
  </chapter>
  <chapter title="Conformance Claims" id="ccl">
    <cclaims>
      <cclaim id="Conformance Statement">
        <description>
					The PP requires strict conformance of any PPs/STs to
					this PP.
				</description>
      </cclaim>
      <cclaim id="CC Conformance Claims">
        <description>
					This PP is conformant to Parts 2 and 3 of Common Criteria Version
					3.1, Revision 4
					<cite linkend="bibCC" />
					.
				</description>
      </cclaim>
      <cclaim id="PP Claim">
        <description>
					This PP does not claim
					conformance to any other
					Protection Profile.
				</description>
      </cclaim>
      <cclaim id="Package Claim">
        <description>
					This PP does not claim
					conformance to any packages.
				</description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Definition" id="spd">
		The security problem is described in terms of the
		threats that the TOE
		is expected to address, assumptions
		about the operational environment,
		and any
		organizational security policies that the TOE is expected to
		enforce.
		<section title="Threats" id="threats"><threats><threat id="T.NETWORK_ATTACK"><description>
						An attacker is positioned on a communications channel
						or
						elsewhere on the
						network infrastructure. Attackers may engage in
						communications with the
						application software or alter
						communications
						between the application software
						and other endpoints
						in order to
						compromise it.
					</description><objective-refer ref="O.PROTECTED_COMMS"><rationale> The threat T.NETWORK_EAVESDROP is countered by
							O.PROTECTED_COMMS as this provides for integrity of
							transmitted
							data.
						</rationale></objective-refer><objective-refer ref="O.INTEGRITY"><rationale> The threat T.NETWORK_EAVESDROP is countered by
							O.INTEGRITY as this provides for integrity of
							software that is installed onto the system from the network.
						</rationale></objective-refer></threat><threat id="T.NETWORK_EAVESDROP"><description>
						An attacker is positioned on a communications channel
						or
						elsewhere on the
						network infrastructure. Attackers may monitor
						and
						gain access to data exchanged
						between the application and other
						endpoints.
					</description><objective-refer ref="O.PROTECTED_COMMS"><rationale> The threat T.NETWORK_EAVESDROP is countered by
							O.PROTECTED_COMMS as this provides for confidentiality of
							transmitted data.
						</rationale></objective-refer><objective-refer ref="O.QUALITY"><rationale>The objective O.QUALITY ensures use of mechanisms
							that
							provide strong protection against network-based attack.
						</rationale></objective-refer></threat><threat id="T.LOCAL_ATTACK"><description>
						An attacker can act through unprivileged software on
						the
						same
						computing platform on which the application executes.
						Attackers
						may
						provide
						maliciously formatted input to the application
						in the form
						of files or other
						local communications.
					</description><objective-refer ref="O.QUALITY"><rationale>The objective O.QUALITY protects against the use of
							mechanisms
							that leave the TOE open to attacks.
						</rationale></objective-refer></threat><threat id="T.PHYSICAL_ACCESS"><description>
						An attacker may try to access sensitive data at rest.
					</description><objective-refer ref="O.PROTECTED_STORAGE"><rationale>The objective O.PROTECTED_STORAGE protects against
							attempts to
							access physical storage used by the TOE.
						</rationale></objective-refer></threat></threats></section><section title="Assumptions" id="assumptions"><assumptions><assumption id="A.PLATFORM"><description>
						The TOE relies upon a trustworthy computing platform
						for
						its execution. This includes
						the underlying operating system and
						the
						runtime environment it provides to the TOE.
					</description><objective-refer ref="OE.PLATFORM"><rationale> The assumption A.PLATFORM is covered by security
							objectives OE.PLATFORM as directly follows.
						</rationale></objective-refer></assumption><assumption id="A.PROPER_USER"><description>The user of the application software is not willfully
						negligent or hostile, and uses the software within compliance of a
						reasonable
						enterprise security policy.
					</description><objective-refer ref="OE.PROPER_USER"><rationale>The assumption A.PROPER_USER is covered by objective
							OE.PROPER_USER as directly follows
						</rationale></objective-refer></assumption><assumption id="A.PROPER_ADMIN"><description>The administrator of the application software is not
						careless, willfully
						negligent or hostile, and administers the
						software within compliance of a
						reasonable
						enterprise security
						policy.
					</description><objective-refer ref="OE.PROPER_ADMIN"><rationale>The assumption A.PROPER_ADMIN is covered by objective
							OE.PROPER_ADMIN as directly follows
						</rationale></objective-refer></assumption></assumptions></section><section title="Organizational Security Policies" id="OSPs"><OSPs><OSP id="P.ENTERPRISE"><description>
						The configuration of the application software must
						adhere to
						the enterprise security policy.
					</description><objective-refer ref="O.MANAGEMENT"><rationale>The organizational security policy P.ENTERPRISE is
							enforced through the the objective O.MANAGEMENT
							as this objective
							represents how the enterprise asserts management
							over the TOE.
						</rationale></objective-refer></OSP></OSPs></section></chapter>
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO id="O.INTEGRITY">
          <description>To maintain their own integrity, conformant TOEs
						ensure the integrity of their installation and update packages,
						and also leverage execution environment-based mitigations.
						Software is seldom if ever shipped without errors, and the
						ability
						to deploy patches and updates to fielded software with
						integrity is
						critical to enterprise network security. Processor
						manufacturers,
						compiler developers, and operating system vendors
						have developed
						execution environment-based mitigations that
						increase the cost to
						attackers by adding complexity to the task
						of compromising systems.
						Application software can often take
						advantage of these mechanisms
						by using APIs provided by the
						operating system or by enabling the
						mechanism through compiler or
						linker options.
					</description>
          <component-refer ref="fdp_dec_ext.1" />
          <component-refer ref="fpt_aex_ext.1" />
          <component-refer ref="fpt_tud_ext.1" />
        </SO>
        <SO id="O.QUALITY">
          <description>To ensure quality of implementation, conformant TOEs
						leverage services and APIs provided by the operating system
						rather
						than implementing their own versions of these services and
						APIs.
						This is especially important for cryptographic services and
						other
						complex operations such as file and media parsing. Quality
						of
						implementation includes maintaining compatibility with future
						operating system versions and updates by using only documented
						and
						supported APIs.
					</description>
          <component-refer ref="fmt_mec_ext.1" />
          <component-refer ref="fpt_api_ext.1" />
        </SO>
        <SO id="O.MANAGEMENT">
          <description>To facilitate management by users and the enterprise,
						conformant TOEs provide consistent and supported interfaces for
						their security-relevant configuration and maintenance. This
						includes the deployment of applications and application updates
						through the use of platform-supported deployment mechanisms and
						formats, as well as the use of platform-supported mechanisms for
						storing and setting configuration options.
					</description>
          <component-refer ref="fmt_cfg_ext.1" />
          <component-refer ref="fmt_smf.1" />
          <component-refer ref="fpt_idv_ext.1" />
        </SO>
        <SO id="O.PROTECTED_STORAGE">
          <description> To address the issue of loss of confidentiality of
						user data in the event of loss of physical control of the storage
						medium, conformant TOEs provide data-at-rest protection. This
						involves encrypting data and keys stored by the TOE in order to
						prevent unauthorized access to this encrypted data.
					</description>
          <component-refer ref="fdp_dar_ext.1" />
          <component-refer ref="fcs_rbg_ext.1" />
        </SO>
        <SO id="O.PROTECTED_COMMS">
          <description> To address network eavesdropping and network attack
						threats, conformant TOEs will provide a trusted communication
						path
						for sensitive data. Sensitive data includes cryptographic
						keys,
						passwords, and any other data specific to the application
						that
						should not be exposed outside of the application.
					</description>
          <component-refer ref="fcs_rbg_ext.1" />
          <component-refer ref="fcs_tls_ext.1" />
          <component-refer ref="fpr_ano_ext.1" />
          <!-- this may call for a separate protected_identity objective -->
          <component-refer ref="ftp_dit_ext.1" />
        </SO>
      </SOs>
    </section>
    <section title="Security Objectives for the Operational Environment" id="SecurityObjectivesTOEorEnvironment">
			The following security objectives for the operational environment
			assist the TOE in correctly
			providing its security functionality.
			These track with the assumptions about the environment.
			<SOEs><SOE id="OE.PLATFORM"><description>
						The TOE relies upon a trustworthy computing platform
						for
						its execution. This includes
						the underlying operating system and
						the
						runtime environment it provides to the TOE.
					</description></SOE><SOE id="OE.PROPER_USER"><description>The user of the application software is not willfully
						negligent or hostile, and uses the software within compliance of a
						reasonable
						enterprise security policy.
					</description></SOE><SOE id="OE.PROPER_ADMIN"><description>The administrator of the application software is not
						careless, willfully
						negligent or hostile, and administers the
						software within compliance of a
						reasonable
						enterprise security
						policy.
					</description></SOE></SOEs></section>
    <section title="Security Objectives Rationale" id="SOR">
			This section describes
			how the assumptions, threats, and
			organizational
			security policies map to the security objectives.
			<InsertSPDCorrespondence /></section>
  </chapter>
  <chapter title="Security Requirements" id="req">
		This chapter describes the security requirements which have to be
		fulfilled by the TOE. Those requirements comprise functional
		components from Part 2 and assurance components from Part 3 of
		<cite linkend="bibCC" />
		. The following notations are used:
		<ul><li><b>Refinement</b>
				operation (denoted by
				<b>bold text</b>
				): is used to add details to a requirement, and thus further
				restricts a requirement.
			</li><li><b>Selection</b>
				(denoted by
				<u>underlined text</u>
				): is used to select one or more options provided by the [CC] in
				stating a requirement.
			</li><li><b>Assignment</b>
				operation (denoted by
				<i>italicised text</i>
				): is used to assign a specific value to an unspecified parameter,
				such as the length of a password. Showing the value in square
				brackets indicates assignment.
			</li><li><b>Iteration</b>
				operation: are identified with a number inside parentheses (e.g.
				"(1)")
			</li></ul><section title="Security Functional Requirements" id="SFRs">
			The Security Functional Requirements included in this section are
			derived from Part 2 of the Common Criteria for Information
			Technology
			Security Evaluation, Version 3.1, Revision 4, with
			additional extended
			functional components.

			<subsection title="User Data Protection (FDP)" id="fdp"><component id="fdp_dec_ext.1" name="Access to Platform Resources"><f-element id="fdp_dec_ext.1.1">
						The application must provide user awareness of any access to
						hardware resources that could provide access to sensitive
						information,
						such as camera, WiFi, GPS, NFC, or Bluetooth.
						<note role="application">
							Explicitly seeking user permission for such
							access
							is one means of providing user awareness.
						</note><aactivity>
							The evaluator shall install the application and inspect its user
							documentation,
							and determine that the user is informed of any
							need
							to access hardware resources
							which provide access to
							sensitive
							information.
							The method of doing so varies per
							platform.
							<subaactivity platform="blackberry">The evaluator shall install
								the application
								and run it for the first time. The evaluator
								shall verify that the
								application
								displays all platform resources
								it would like to access.

								Note: If the user goes to: App
								permissions – Settings →
								Security and
								Privacy → Application
								Permissions → Select
								application in
								question, it will list which
								platform resource
								are
								approved/denied and can be changed.
							</subaactivity><subaactivity platform="android">The evaluator shall install
								the application
								and verify that the application displays the
								platform resources it
								would like
								to access. Note: Users must
								accept all requested permissions upon
								installation and cannot
								choose individual permissions to allow
								or deny.
							</subaactivity><subaactivity platform="windows">
								For Windows Store Apps the
								evaluator shall check the AppManifest.xml
								file for a list of
								required
								capabilities. The evaluator shall run the application
								and verify
								that the application only uses
								the capabilities
								listed in the
								AppManifest.xml file. For Win32
								Desktop
								Application the evaluator
								shall inspect the documentation
								provided with the application
								and
								ensure that it includes a list
								of the hardware resources needed.
							</subaactivity><subaactivity platform="ios">The evaluator shall install
								and run the application. The evaluator shall
								attempt to exercise
								Location Services functionality and verify that
								the application
								prompts the user for permission.
							</subaactivity></aactivity></f-element><f-element id="fdp_dec_ext.1.2">
						The application must provide user awareness of any access
						to
						sensitive information repositories, such as address book,
						calendar, or caller lists.
						<note role="application">
							While the application is responsible for
							requesting access to a
							device, it is the operating system's
							responsibility to enforce
							whether or not the application can
							actually use the device.
						</note><aactivity>
							The evaluator shall install the application and inspect its user
							documentation,
							and determine that the user is informed of any
							need
							to access sensitive information
							which provide access to
							sensitive
							information repositories.
							The method
							of doing so varies
							per
							platform.
							<subaactivity platform="blackberry">The evaluator shall install
								the application
								and run it for the first time. The evaluator
								shall verify that the
								application
								displays all platform resources
								it would like to access.
							</subaactivity><subaactivity platform="android">
								The evaluator shall install
								the application
								and verify that the application displays the
								permissions used to access sensitive information
								repositories.
							</subaactivity><subaactivity platform="windows">
								For Windows Store Apps the
								evaluator shall check the AppManifest.xml
								file for a list of
								required
								capabilities. The evaluator shall
								run the application
								and verify
								that the application only uses
								the capabilities
								listed in the
								AppManifest.xml file. For Win32
								Desktop
								Application the evaluator
								shall inspect the documentation
								provided with the application
								and
								ensure that it includes a list
								of the hardware resources needed.
							</subaactivity><subaactivity platform="ios">The evaluator shall install
								and run the application. The evaluator shall
								attempt to exercise
								functionality in the application that would cause
								it to access
								sensitive information
								repositories. The evaluator shall verify
								that the application prompts the
								user for permission.
							</subaactivity></aactivity></f-element><f-element id="fdp_dec_ext.1.3">
						The application must not seek permission from the user
						to access
						resources which it does not require.
						<note role="application">
							While the application is responsible for
							requesting access to a
							device, it is the operating system's
							responsibility to enforce whether or
							not the application can
							actually use the device.
						</note><aactivity>
							The evaluator must compare the list of resources required by the
							application with the list of resources indicated by the
							application itself.
							The method of doing so varies per platform.

							<subaactivity platform="blackberry">
								The first time the
								application is started it displays all platform
								resources it
								would like to access. They can individually be approved or
								denied.
								Also if the
								user goes to: App permissions – Settings →
								Security and Privacy →
								Application
								Permissions → Select
								application in question, it will list which platform
								resource
								are
								approved/denied and can be changed.
							</subaactivity><subaactivity platform="android">
								Android apps are required to
								declare permissions in their AndroidManifest.xml
								file. Users
								must accept all
								requested permissions upon installation and cannot
								choose
								individual permissions to allow or deny.
							</subaactivity><subaactivity platform="windows">
								For Windows Store Apps the
								evaluator shall check the AppManifest.xml
								file for a
								list of required
								capabilities. The evaluator shall run the
								application and
								verify
								that the application only uses the capabilities listed in
								the
								AppManifest.xml file. For Win32 Desktop Application the
								developer must provide
								a written list of capabilities needed by
								the application. The
								evaluator shall
								run the desktop application
								and verify that the application only
								uses
								capabilities
								decalred by the developer.
							</subaactivity><subaactivity platform="ios">
								The evaluator shall do
								something.
							</subaactivity></aactivity></f-element></component><component id="fdp_dar_ext.1" name="Storage Of Sensitive Application Data"><f-element id="fdp_dar_ext.1.1">
						The application must leverage platform-provided functionality for
						the encryption of sensitive data when it is stored in
						non-volatile
						memory.
						<!-- this language is intentionally different from the MDPP's FDP_DAR --><aactivity>
							The evaluator shall run the application and store potentially
							sensitive data.
							The evaluator shall then inspect
							the filesystem to
							determine where data has been written, and note whether it is
							encrypted. The evaluator shall also use static analysis to
							determine whether
							the platform-provided functionality for
							protecting sensitive data
							is leveraged.
							The method of doing so
							varies per platform.
							<subaactivity platform="blackberry">
								The evaluator shall
								determine
								whether the application properly uses
								the Content
								Protection API.
								(Need to fact-check this.)
							</subaactivity><subaactivity platform="android">
								The evaluator shall verify that the application uses the Android
								<code>KeyStore</code>, <code>SecretKeyFactory</code> and <code>Cipher</code>
								classes to encrypt sensitive data.
							</subaactivity><subaactivity platform="windows">
								The evaluator shall determine and verify that Windows Applications use the Data Protection API (DPAPI) to store and retrieve senstive information. Windows Store Apps for desktop or mobile shall utiliize the DPAPI via the ProtectedData class.</subaactivity><subaactivity platform="ios">
								The evaluator shall
								determine
								whether the application leverages the
								Data Protection
								API.
							</subaactivity></aactivity></f-element><!-- <f-element id="fdp_dar_ext.1.2"> Applications must 
						not leave sensitive data unprotected in memory or on media beyond the data's 
						period of use. Such data must be erased using a cryptographic wipe or a single 
						pass overwrite with arbitrary values. This includes sensitive data stored 
						in temporary files and audit logs. <note role="application"> "Period of use" 
						is the period of time that the application actively processes the data. At 
						the very latest, the period of use ends when the application is closed, but 
						usually it would end prior to that. Requirements 2 and 3 are not intended 
						to make the application responsible for how the operating system handles 
						data with respect to paging or swap files. They are intended, however, to 
						ameliorate the problems inherent in paging or swapping by reducing the likelihood 
						that plaintext sensitive data is left in unused memory pages - which are 
						more likely to be swapped to disk. Of course, the requirements also cover 
						explicit writes to memory or media. In this sense "media" refers to traditional 
						media as well as other non-volatile or persistent locations. So, the requirement 
						applies anytime sensitive data is written anywhere to be stored. </note> 
						</f-element> --></component></subsection><subsection title="Security Management (FMT)" id="fmt"><component id="fmt_mec_ext.1" name="Supported Configuration Mechanism"><f-element id="fmt_mec_ext.1.1">
						The application must
						use the mechanisms
						recommended by the
						operating
						system vendor for storing and
						setting configuration
						options.

						<aactivity>
							The evaluator must identify the application's configuration data
							(e.g. settings)
							and determine whether it is stored and set using
							the mechanisms supported by the platform.
							The method of doing so
							varies per platform.
							<subaactivity platform="blackberry">
								Tester should verify that
								when the application is installed that all
								files included in the
								BAR are stored in the app folder of the
								Application working
								directory.
							</subaactivity><subaactivity platform="android">
								The evaluator shall determine and verify that the application stores all settings on internal storage.
								The application should make use of the <code>SharedPreferences</code> and/or <code>PreferenceActivity</code> classes for storing configuration data.
							</subaactivity><subaactivity platform="windows">
								The evaluator shall determine and verify that Windows Store App applications use either the Windows.UI.ApplicationSettings namespace or the IsolatedStorageSettings namespace for storing application specific settings. Classic Desktop application shall use the Windows Registry or a structured file in the users profile. Locations used to store application settings must not be used for storing executable content.
							</subaactivity><subaactivity platform="ios">
								Something about the
								<code>defaults</code>
								system.
							</subaactivity></aactivity></f-element><f-element id="fmt_mec_ext.1.2">
						The application must use the mechanisms
						recommended by the
						operating system vendor for storing
						application data.
						<aactivity>
							The evaluator must identify the application's source of data input and output
							and ensure it is stored in a location supported by the platform.
							The method of doing so varies per platform.
							<subaactivity platform="blackberry">
								Tester should verify that
								when the application is installed that all
								files included in the
								BAR are stored in the app folder of the
								Application working
								directory.
							</subaactivity><subaactivity platform="android">
								The evaluator shall verify the follow:
								<ul><li>The application stores all sensitive data on internal storage using either <code>Context.MODE_PRIVATE</code> or <code>SharedPreferences</code></li><li>All keys shall be stored within a keystore using Android's <code>KeyStore</code> class</li><li>Files that are to be accessible by the user or other applications should be stored in an appropriate folder on external storage.  The application should also be requesting the <code>WRITE_EXTERNAL_STORAGE</code> permission within the <code>AndroidManifest.xml</code> file.</li></ul></subaactivity><subaactivity platform="windows">The evaluator shall determine and verify that Windows Store App applications use the IsolatedStorage namespace for storing application data. The evaluator shall determine and verify that classic Desktop application use a structed file in the users profile or the ProgramData directory, but not the applications executable directory. Locations used to store application data must not be used for storing executable content.</subaactivity><subaactivity platform="ios">
								Probably something about the
								<code>defaults</code>
								system.
							</subaactivity></aactivity></f-element></component><component id="fmt_cfg_ext.1" name="Secure by Default Configuration"><f-element id="fmt_cfg_ext.1.1">
						The application must be configured by default to not use any
						default credentials.
						<aactivity>The evaluator must install and run the application and
							inspect its documentation.
							If the application uses any
							credentials
							such as passwords or
							private keys, these must not be
							pre-programmed and the user
							must instead be prompted to provide
							the credential.
						</aactivity></f-element><f-element id="fmt_cfg_ext.1.2">
						The application must be configured by default to not transmit any
						credentials in the clear.
						<aactivity>The evaluator must install and run the application and
							inspect its documentation.
							The evaluator must determine if the
							application uses any
							credentials such as passwords
							or private
							keys.
							The evaluator must sniff network traffic between
							the
							platform and
							any remote
							systems, and determine that these
							credentials are not
							transmitted in the
							clear.
						</aactivity></f-element><f-element id="fmt_cfg_ext.1.3">
						The application must be configured by default to have file
						permissions which protect it from unprivileged processes.
						<aactivity>
							The evaluator must install and run the application. The
							evaluator
							must inspect the filesystem of the platform for any
							files created
							by
							the application
							and ensure that their permissions
							are adequate to
							protect them from
							unprivileged
							processes. The
							method of doing so
							varies per platform.
							<subaactivity platform="blackberry">
								Some
								<code>find</code>
								command, TBD.
							</subaactivity><subaactivity platform="android">
								The evaluator shall verify using <code>ls -l</code> that files writen to disk during installation have the correct file permissions.
							</subaactivity><subaactivity platform="windows">
								The evaluator shall run the SysInternals tools, Process Monitor and Access Check, for Classis Desktop applications to verify that files writen to disk during an applications installation have the correct file permissions. Windows Store Apps will pass this by default because of the AppContainer sandbox.				</subaactivity><subaactivity platform="ios">
								Some
								<code>find</code>
								command -- or the platform may simply pass if the Sandbox
								prevents other processes from reading where one application is
								permitted to write.
							</subaactivity></aactivity></f-element><f-element id="fmt_cfg_ext.1.4">
						The application must be configured by default to not transmit any
						personally-identifiable information (PII).
						<note role="application">PII is concerned with user identity and does not
							include crashdumps or other information about system state.
						</note><aactivity>The evaluator must install and run the application and
							inspect its documentation.
							The evaluator must survey the list of
							settings for the application.
							If any setting controls
							the
							transmission of PII, it must be disabled by default.
						</aactivity></f-element></component><component id="fmt_smf.1" name="Specification of Management Functions"><f-element id="fmt_smf.1.1">
						The TSF shall be capable of performing the following
						management
						functions:
						<ol><li>enable/disable transmission of any system identity
								information
							</li><li>enable/disable transmission of any user identity information
							</li><li>enable/disable transmission of any application state (e.g.
								crashdump) information
							</li><li>enable/disable automatic software update functionality</li></ol></f-element></component><!-- <component id="fmt_not.1" name="Notification of Update"> 
					<f-element id="fmt_not.1.1">If the update process is initiated by an application, 
					then the application should report to the user the last time it checked for 
					available updates. </f-element> </component> --></subsection><subsection title="Cryptographic Support (FCS)" id="fcs"><component id="fcs_rbg_ext.1" name="Random Bit Generation"><f-element id="fcs_rbg_ext.1.1">
						The application must use random bit generation services provided
						by the platform.
						<aactivity>
							The evaluator shall inspect the application and its developer
							documentation to determine if the
							application needs random bit
							generation services. If so, the evaluator
							shall determine how the
							application
							acquires random bits and ensure that these are
							acquired properly from
							the platform. This varies on a
							per-platform
							basis:
							<subaactivity platform="blackberry">
								Static analysis to determine
								if /dev/random and /dev/urandom are
								used?
							</subaactivity><subaactivity platform="android">
								Static analysis to determine
								if /dev/random and /dev/urandom are used.
							</subaactivity><subaactivity platform="windows">The evaluator shall use static analysis to verify that the CryptGenRandom API is used for classic desktop applications. The evaluator shall use static analysis to verify that the System.Random API is used for Windows Store Applications.
							</subaactivity><subaactivity platform="ios">
								Static analysis to determine
								if /dev/random is used?
							</subaactivity></aactivity></f-element></component></subsection><subsection title="Privacy (FPR)" id="fpr"><component id="fpr_ano_ext.1" name="Anonymous Network Behavior"><f-element id="fpr_ano_ext.1.1">
						The application must be capable of not transmitting any user
						identity information.
						<note role="application">
							In-app ad-ware is subject to the same requirements as its host
							app regarding collection of information, and its behavior is
							evaluated
							as part of this requirement.
							<!-- this is a problem since mobile adware is often provided via OS 
								services --></note><aactivity>
							The evaluator shall prepare a test environment which
							makes it
							possible to sniff
							network traffic between
							the
							platform and
							any remote
							systems. The evaluator
							shall install and run the
							application, and ensure that no PII is
							transmitted from the
							system.
							TBD: how/practical to MITM app traffic?
						</aactivity></f-element></component></subsection><subsection title="Trusted Path/Channel (FTP)" id="ftp"><component id="ftp_dit_ext.1" name="Protection of Data in Transit"><f-element id="ftp_dit_ext.1.1">
						The TSF must use
						<selectables atleastone="yes"><selectable>TLS</selectable><selectable>DTLS</selectable><selectable>HTTPS</selectable></selectables>
						to provide a communication channel to protect
						<selectables><selectable>all data</selectable><selectable>all sensitive data</selectable></selectables>
						transmitted between itself and another trusted IT product.
						<aactivity>
							The evaluator shall prepare a test environment which
							makes it
							possible to sniff
							network traffic between
							the
							platform and
							any remote
							systems. The evaluator
							shall install and run the
							application, and exercise its
							functionality.
							The evaluator shall
							ensure that transmitted data is protected as
							indicated in the
							selections.
						</aactivity></f-element></component></subsection><subsection title="Protection of the TSF (FPT)" id="fpt_api_ext"><component id="fpt_api_ext.1" name="Use of Supported Services and APIs"><f-element id="fpt_api_ext.1.1">
						The application must use platform-provided
						cryptographic
						libraries,
						unless
						providing cryptographic services is the purpose
						of the
						application.
						<!-- subtly different AA here; search for non-platform crypto --><aactivity>The developer must report the name and version of the
							cryptographic libraries used by the application. If a
							developer-designed cryptographic library is implemented, the
							tester must verify that the library is FIPS certified.
						</aactivity></f-element><!-- TO DO: Hyperlink URLs. --><f-element id="fpt_api_ext.1.2">
						The application must use platform-provided libraries for parsing
						any structured files whose
						format is included in the IANA MIME
						media types as listed at
						http://www.iana.org/assignments/media-types, unless parsing
						services is the purpose of
						the application.
						<note role="application">
							This includes many image, audio,
							video, and
							content
							file formats.
						</note><aactivity>The evaluator shall ensure that the developer
							documentation
							specifies which structured file
							formats are parsed
							by
							the application, and
							which libraries are
							used to parse them.
							The
							tester must verify
							that the libraries
							documented are provided
							by the
							platform.
						</aactivity></f-element><f-element id="fpt_api_ext.1.3">
						The application must not use any unsupported platform APIs.
						<aactivity>The developer must provide a list of operating system
							API functions used by the application. (Ideally, this list
							should
							be generated by the linker for the current build.)
							Evaluator shall
							then compare the developer-supplied list with the
							operating system
							documentation.
						</aactivity></f-element></component><component id="fpt_aex_ext.1" name="Anti-Exploitation Capabilities"><f-element id="fpt_aex_ext.1.1">
						The application must not subvert address space layout
						randomization by requesting any memory mapping at an explicit
						address.
						<aactivity>
							The evaluator must perform either a static or dynamic analysis
							to
							determine that no memory mappings are placed at an explicit
							and
							consistent
							address. The method of doing so varies per
							platform.
							<subaactivity platform="blackberry">
								Lauren, help please?
							</subaactivity><subaactivity platform="android">
								Run the same program on two
								different systems. Connect via ADB and
								inspect /proc/PID/maps.
								Ensure these share no mapping
								locations.
							</subaactivity><subaactivity platform="windows">
								The evaluator shall run the same application on two
								different systems and run the Sysinternals tool VMMap on
								each system and verify the application is mapped into memory at different addresses for classis desktop application. TODO: Store Apps?
							</subaactivity><subaactivity platform="ios">
								Perform a static analysis to
								search for any mmap calls (or API calls
								which in turn call
								mmap),
								and ensure that no arguments
								are provided that request
								mapping at
								a set address?
							</subaactivity></aactivity></f-element><f-element id="fpt_aex_ext.1.2">
						The application must not subvert data execution prevention (DEP)
						by simultaneously allowing both write and execute permissions on
						any memory region.
						<aactivity>The evaluator shall examine executable file headers to verify
							that platform supported DEP protections are enabled for the
							application.
						</aactivity></f-element><f-element id="fpt_aex_ext.1.3">
						The application must not subvert
						platform-provided heap corruption detection
						by implementing its
						own
						dynamic memory allocation functionality,
						unless that
						functionality
						also includes corruption detection.
					</f-element><f-element id="fpt_aex_ext.1.4">
						The application must be compatible with security features
						provided by the operating system vendor.
						<note role="application">
							This requirement is designed to ensure that
							operating system
							features, or security enhancements provided by the operating system vendor,
							do not need to be disabled in order for the application to run.
						</note><aactivity>
							The evaluator will carry out one of the following tests, depending
							on the platform.
							<subaactivity platform="blackberry">
								Is there anything?
							</subaactivity><subaactivity platform="android">
								Ensure that the application can run with SE for Android
								enabled and in enforcing mode.
							</subaactivity><subaactivity platform="windows">
The evaluator shall ensure that classis desktop applications and Windows Store applications are compatible with EMET.
							</subaactivity><subaactivity platform="ios">
								Is there anything?
							</subaactivity></aactivity></f-element><f-element id="fpt_aex_ext.1.5">
						The application must not write to directories that contain
						executable files.
						<note role="application">
							If the application is specifically designed to
							produce executable files (such as a compiler), those files may
							be
							written to a specified directory from which execution is
							permitted.
						</note><aactivity>
							The evaluator shall run the application and determine where all
							files are written. The evaluator shall determine whether the
							platform needs to execute files from that directory. This
							varies
							per platform:
							<subaactivity platform="blackberry">
								The platform forces
								applications to write all data within the
								application working
								directory (sandbox), and so applications on
								this platform pass.
							</subaactivity><subaactivity platform="android">
								The evaluator shall run the program and note where all files
								are written. The evaluator shall ensure that there are no executable files stored
								within the applications data directory.
							</subaactivity><subaactivity platform="windows">
								The evaluator shall run the
								program and note where all files are
								written.
								The evaluator shall
								ensure that it is not possible to also execute
								files
								from these
								locations.
							</subaactivity><subaactivity platform="ios">
								The platform forces
								applications to write all data within the
								application working
								directory (sandbox), and so applications on
								this platform pass.
							</subaactivity></aactivity></f-element><f-element p7:id="fpt_aex_ext.1.6" xmlns:p7="http://secure.tuvit.de/schemata/">The application must not subvert stack cookie protections by disabling default compiler options.<aactivity>The evaluator shall ensure that the application was compiled with the stack cookie security feature not disabled.</aactivity></f-element></component><component id="fpt_tud_ext.1" name="Integrity for Installation and Update"><!-- TO DO: Cite references. --><f-element id="fpt_tud_ext.1.1">
						The application installation and update packages must be signed
						by
						the vendor in conformance with NIST SP 800-89, Recommendation
						for
						Obtaining Assurances for Digital Signature Applications, using
						an
						approved digital signature algorithm as specified in NIST FIPS
						186-3, Digital Signature Standard, that provides at least 112
						bits
						of security strength, in accordance with NIST SP 800-131A,
						Transitions: Recommendation for Transitioning the Use of
						Cryptographic Algorithms and Key Lengths.							<!-- TO DO: Convert these 
							to <appnote>s that are converted by the stylesheet. --><note role="application">
							Signatures of signed installation and update
							packages should be
							verified by the operating system's application
							installation
							mechanism. Since the existence of such a mechanism
							is
							a
							requirement on the operating system (and not the
							application), it
							is not specified here.
						</note><aactivity>Developers must document their process for
							cryptographically signing updates and installation packages.
							The evaluator shall verify that the documentation conforms with the
							above requirement.
						</aactivity></f-element><f-element id="fpt_tud_ext.1.2">
						The application update and installation packages must be
						distributed using
						the format of the operating system-supported
						package manager.
						<aactivity>The evaluator shall verify that application updates are
							distributed in a format supported by a standard mechanism.
							Examples of standard mechanisms include: The BlackBerry World
							storefront, BlackBerry World for Work storefront, BlackBerry
							Administration Service, Standard Windows Installer (.msi)
							format,
							Windows App Store package (.appx), Google Play Store (.apk) or
							OEM App
							Store, Enterprise-run Android App store, The Apple App
							Store,
							Enterprise-run iOS App repositorie.
						</aactivity></f-element><f-element id="fpt_tud_ext.1.3">
						The application must be packaged such that its removal results in
						the removal of all traces of the
						application, except for
						configuration and preference settings,
						and audit or log events.							<!-- 
							TO DO: This is a component-level application note. Figure out how to customize 
							markup above element level. --><aactivity>The evaluator shall uninstall the application and search
							for evidence of the uninstalled application on the platform.
						</aactivity></f-element></component><component id="fpt_idv_ext.1" name="Software Identification and Versions"><f-element id="fpt_idv_ext.1.1">
						The application must include software identification (SWID) tags
						that comply with the ISO/IEC 19770-2:2009 standard.
						<aactivity>The evaluator shall install the application, then check for
							the existence of SWID tags that comply with the ISO/IEC
							19770-2:2009 standard.
						</aactivity></f-element><f-element id="fpt_idv_ext.1.2">
						The applications must present correct product version
						information.
						<aactivity>The evaluator shall totally look over the TSS, and
							also
							look
							over the SWID tag standard, and see if these things
							look
							legit.
						</aactivity></f-element></component></subsection></section><section title="Security Assurance Requirements" id="SARs">
			The Security Objectives for the TOE in
			<secref linkend="req" />
			were constructed to
			address threats identified in
			<secref linkend="threats" />
			. The Security Functional Requirements (SFRs) in
			<secref linkend="SFRs" />
			are a formal instantiation of the Security Objectives.
			The PP draws
			from EAL1 the Security Assurance Requirements (SARs) to
			frame the
			extent to which the evaluator assesses the documentation
			applicable
			for the evaluation and performs independent testing.
			<br />
			While this section contains the complete set of SARs from the CC,
			the
			Assurance Activities to be performed by an evaluator are
			detailed in
			<secref linkend="SFRs" />
			as well as in this section. The general model
			for evaluation of TOEs
			against STs written to conform to this PP is
			as follows:
			<br />
			After the ST has been approved for evaluation, the ITSEF will obtain
			the TOE, supporting environmental IT, and the administrative guides
			for the TOE. The Assurance Activities listed in the ST (which will
			be
			refined by the ITSEF to be TOE-specific, either within the ST or
			in a
			separate document) will then be performed by the ITSEF. The
			ITSEF is
			also expected to perform all of the actions mandated by the
			Common
			Evaluation Methodology (CEM) for EAL1. The results of these
			activities will be documented and presented (along with the
			administrative guidance used) for validation.
			<br />
			For each family, "Developer Notes" are provided on the developer
			action elements to clarify what, if any, additional
			documentation/activity needs to be provided by the developer. For
			the
			content/presentation and evaluator activity elements, additional
			assurance activities (to those already contained in
			<secref linkend="SFRs" />
			and
			the CEM for EAL1) are described as a whole for the family rather
			than for each element. Additionally, the assurance activities
			described in this section are complementary to those specified in
			<secref linkend="SFRs" />
			.
			<br />
			The TOE security assurance requirements, summarized in the table
			below, identify the management and evaluative activities required to
			meet the objectives identified in
			<secref linkend="obj" />
			of this PP.
			<!-- Generate a table here, based on the next sections --><subsection title="Class ASE: Security Target" id="ase">
				As per
				ASE activities defined in
				<cite linkend="bibCEM" />
				.
			</subsection><subsection title="Class ADV: Development" id="adv">
				The information about the TOE is contained in the guidance
				documentation available to the end user as well as the TOE Summary
				Specification (TSS) portion of the ST. The TOE developer must
				concur
				with the description of the product that is contained in the
				TSS as
				it relates to the functional requirements. The Assurance
				Activities
				contained in
				<secref linkend="SFRs" />
				should provide the ST authors
				with sufficient information to
				determine the appropriate content
				for the TSS section.
				<component id="adv_upd_ext" name="Support for Updates"><f-element id="fdu_upd_ext.1.1">Application developers must support update
						of their products for purposes of fixing security
						vulnerabilities.
					</f-element><f-element id="fdu_upd_ext.1.2">Application update must not change the
						security properties or configuration of the product without
						notifying the user of the specific changes.
					</f-element><f-element id="fdu_sup_ext.1.3"> Application developers must commit to
						supporting their applications with updates for a publicly
						documented period of time.
					</f-element></component><component id="adv_fsp" name="Basic Functional Specification (ADV_FSP)">
					The functional specification describes the Target Security
					Functions Interfaces (TSFIs). It is not necessary to have a formal
					or complete specification of these interfaces. Additionally,
					because TOEs conforming to this PP will necessarily have
					interfaces
					to the Operational Environment that are not directly
					invokable by
					TOE users, there is little point specifying that such
					interfaces be
					described in and of themselves since only indirect
					testing of such
					interfaces may be possible. For this PP, the
					activities for this
					family should focus on understanding the
					interfaces presented in the
					TSS in response to the functional
					requirements and the interfaces
					presented in the AGD
					documentation. No additional “functional
					specification”
					documentation is necessary to satisfy the assurance
					activities
					specified. The interfaces that need to be evaluated are
					characterized through the information needed to perform the
					assurance activities listed, rather than as an independent,
					abstract list.
					<h4>Developer action elements:</h4><f-element id="ADV_FSP.1.1D"> The developer shall provide a functional
						specification.
					</f-element><f-element id="ADV_FSP.1.2D">
						The developer shall provide a tracing from the functional
						specification to the SFRs.
						<note role="application"> As indicated in the introduction to this
							section,
							the functional specification is comprised of the
							information
							contained in the AGD_OPE and AGD_PRE documentation.
							The developer
							may reference a website accessible to application
							developers and
							the evaluator. The assurance activities in the
							functional
							requirements point to evidence that should exist in
							the
							documentation and TSS section; since these are directly
							associated with the SFRs, the tracing in element ADV_FSP.1.2D is
							implicitly already done and no additional documentation is
							necessary.
						</note></f-element><h4>Content and presentation elements:</h4><f-element id="ADV_FSP.1.1C"> The functional specification shall
						describe the purpose and method of use for each SFR-enforcing and
						SFR-supporting TSFI.
					</f-element><f-element id="ADV_FSP.1.2C"> The functional specification shall
						identify all parameters associated with each SFR-enforcing and
						SFR-supporting TSFI.
					</f-element><f-element id="ADV_FSP.1.3C"> The functional specification shall
						provide
						rationale for the implicit categorization of interfaces
						as
						SFR-non-interfering.
					</f-element><f-element id="ADV_FSP.1.4C"> The tracing shall demonstrate that the
						SFRs trace to TSFIs in the functional specification.
					</f-element><h4>Evaluator action elements:</h4><f-element id="ADV_FSP.1.1E"> The evaluator shall confirm that the
						information provided meets all requirements for content and
						presentation of evidence.
					</f-element><f-element id="ADV_FSP.1.2E"> The evaluator shall determine that the
						functional specification is an accurate and complete
						instantiation
						of the SFRs.
					</f-element><aactivity>
						There are no specific assurance activities associated
						with these
						SARs, except ensuring the information is provided. The
						functional
						specification documentation is provided to support the
						evaluation
						activities described in
						<secref linkend="SFRs" />
						, and other
						activities described for AGD, ATE, and AVA SARs. The
						requirements
						on the content of the functional specification
						information is
						implicitly assessed by virtue of the other assurance
						activities
						being performed; if the evaluator is unable to perform
						an
						activity because the there is insufficient interface
						information,
						then an adequate functional specification has not been
						provided.
					</aactivity></component></subsection><subsection id="agd" title="Class AGD: Guidance Documentation">
				The guidance documents will be provided with the ST. Guidance must
				include a description of how the IT personnel verifies that the
				Operational Environment can fulfill its role for the security
				functionality. The documentation should be in an informal style and
				readable by the IT personnel. Guidance must be provided for every
				operational environment that the product supports as claimed in the
				ST. This guidance includes Instructions to successfully install the
				TSF in that environment; and Instructions to manage the security of
				the TSF as a product and as a component of the larger operational
				environment. Guidance pertaining to particular security
				functionality is also provided; requirements on such guidance are
				contained in the assurance activities specified with each
				requirement.
				<component id="agd_ope" name="Operational User Guidance (AGD_OPE)"><h4>Developer action elements:</h4><f-element id="AGD_OPE.1.1D">
						The developer shall provide operational user guidance.
						<note role="application"> The operation user guidance does not have to be
							contained in a single document. Guidance to users,
							administrators
							and application developers can be spread among
							documents or web
							pages. Where appropriate, the guidance
							documentation is expressed
							in the eXtensible Configuration
							Checklist Description Format
							(XCCDF) to support security
							automation. Rather than repeat
							information here, the developer
							should review the assurance
							activities for this component to
							ascertain the specifics of the
							guidance that the evaluator will
							be checking for. This will
							provide the necessary information for
							the preparation of
							acceptable guidance.
						</note></f-element><h4>Content and presentation elements:</h4><f-element id="AGD_OPE.1.1C">
						The operational user guidance shall describe, for each user role,
						the user-accessible functions and privileges that should be
						controlled in a secure processing environment, including
						appropriate warnings.
						<note role="application"> User and administrator are to be considered in
							the definition of user role.
						</note></f-element><f-element id="AGD_OPE.1.2C"> The operational user guidance shall
						describe, for each user role, how to use the available interfaces
						provided by the TOE in a secure manner.
					</f-element><f-element id="AGD_OPE.1.3C"> The operational user guidance shall
						describe, for each user role, the available functions and
						interfaces, in particular all security parameters under the
						control of the user, indicating secure values as appropriate.
					</f-element><f-element id="ADV_OPE.1.4C"> The operational user guidance shall, for
						each user role, clearly present each type of security-relevant
						event relative to the user-accessible functions that need to be
						performed, including changing the security characteristics of
						entities under the control of the TSF.
					</f-element><f-element id="AGD_OPE.1.5C"> The operational user guidance shall
						identify all possible modes of operation of the TOE (including
						operation following failure or operational error), their
						consequences, and implications for maintaining secure operation.
					</f-element><f-element id="AGD_OPE.1.6C"> The operational user guidance shall, for
						each user role, describe the security measures to be followed in
						order to fulfill the security objectives for the operational
						environment as described in the ST.
					</f-element><f-element id="AGD_OPE.1.7C"> The operational user guidance shall be
						clear and reasonable.
					</f-element><h4>Evaluator action elements:</h4><f-element id="AGD_OPE.1.1E"> The evaluator shall confirm that the
						information provided meets all requirements for content and
						presentation of evidence.
					</f-element><aactivity>
						Some of the contents of the operational guidance will
						be verified
						by the assurance activities in
						<secref linkend="SFRs" />
						and
						evaluation of the TOE according to the CEM. The following
						additional information is also required. If cryptographic
						functions are provided by the TOE, the operational guidance shall
						contain instructions for configuring the cryptographic engine
						associated with the evaluated configuration of the TOE. It shall
						provide a warning to the administrator that use of other
						cryptographic engines was not evaluated nor tested during the CC
						evaluation of the TOE. The documentation must describe the
						process
						for verifying updates to the TOE by verifying a digital
						signature –
						this may be done by the TOE or the underlying
						platform. The
						evaluator shall verify that this process includes
						the following
						steps: Instructions for obtaining the update
						itself. This should
						include instructions for making the update
						accessible to the TOE
						(e.g., placement in a specific directory).
						Instructions for
						initiating the update process, as well as
						discerning whether the
						process was successful or unsuccessful.
						This includes generation of
						the hash/digital signature. The TOE
						will likely contain security
						functionality that does not fall in
						the scope of evaluation under
						this PP. The operational guidance
						shall make it clear to an
						administrator which security
						functionality is covered by the
						evaluation activities.
					</aactivity></component><component id="agd_pre" name="Preparative Procedures (AGD_PRE)"><h4>Developer action elements:</h4><f-element id="AGD_PRE.1.1D">
						The developer shall provide the TOE, including its preparative
						procedures.
						<note role="application"> As with the operational guidance, the developer
							should look to the assurance activities to determine the
							required
							content with respect to preparative procedures.
						</note></f-element><h4>Content and presentation elements:</h4><f-element id="AGD_PRE.1.1C"> The preparative procedures shall describe
						all the steps necessary for secure acceptance of the delivered
						TOE
						in accordance with the developer's delivery procedures.
					</f-element><f-element id="AGD_PRE.1.2C"> The preparative procedures shall describe
						all the steps necessary for secure installation of the TOE and
						for
						the secure preparation of the operational environment in
						accordance with the security objectives for the operational
						environment as described in the ST.
					</f-element><h4>Evaluator action elements:</h4><f-element id="AGD_PRE.1.1E"> The evaluator shall confirm that the
						information provided meets all requirements for content and
						presentation of evidence.
					</f-element><f-element id="AGD_PRE.1.2E"> The evaluator shall apply the preparative
						procedures to confirm that the TOE can be prepared securely for
						operation.
					</f-element><aactivity> As indicated in the introduction above, there are
						significant expectations with respect to the
						documentation—especially when configuring the operational
						environment to support TOE functional requirements. The evaluator
						shall check to ensure that the guidance provided for the TOE
						adequately addresses all platforms claimed for the TOE in the ST.
					</aactivity></component></subsection><subsection id="alc" title="Class ALC: Life-cycle Support"><component id="alc_cmc" name="Labeling of the TOE">
					This component is targeted at identifying the TOE such that it can
					be distinguished from other products or versions from the same
					vendor and can be easily specified when being procured by an end
					user.
					<h4>Developer action elements:</h4><f-element id="alc_cmc.1.1d"> The developer shall provide the TOE and a
						reference for the TOE.
					</f-element><h4>Content and presentation elements:</h4><f-element id="alc_cmc.1.1c"> The TOE shall be labeled with a unique
						reference.
					</f-element><h4>Evaluator action elements:</h4><f-element id="alc_cmc.2.1.e">
						The evaluator
						<i>shall confirm</i>
						that the information provided meets all requirements for content
						and presentation of evidence.
					</f-element><aactivity> The evaluator shall check the ST to ensure that it
						contains an identifier (such as a product name/version number)
						that specifically identifies the version that meets the
						requirements of the ST. Further, the evaluator shall check the
						AGD
						guidance and TOE samples received for testing to ensure that
						the
						version number is consistent with that in the ST. If the
						vendor
						maintains a web site advertising the TOE, the evaluator
						shall
						examine the information on the web site to ensure that the
						information in the ST is sufficient to distinguish the product.
					</aactivity></component><component id="alc_cms" name="TOE CM Coverage">
					Given the scope of the TOE and its associated evaluation evidence
					requirements, this component’s assurance activities are covered by
					the assurance activities listed for ALC_CMC.1.
					<h4>Developer action elements:</h4><f-element id="alc_cms.2.1d"> The developer shall provide a
						configuration list for the TOE.
					</f-element><h4>Content and presentation elements:</h4><f-element id="alc_cms.2.1.c"> The configuration list shall include the
						following: the TOE itself; and the evaluation evidence required
						by
						the SARs.
					</f-element><f-element id="alc_cms.2.2.c"> The configuration list shall uniquely
						identify the configuration items.
					</f-element><h4>Evaluator action elements:</h4><f-element id="alc_cmc.2.1.e">
						The evaluator
						<i>shall confirm</i>
						that the information provided meets all requirements for content
						and presentation of evidence.
					</f-element><aactivity>
						The "evaluation evidence required by the SARs" in this
						PP is
						limited to the information in the ST coupled with the
						guidance
						provided to administrators and users under the AGD
						requirements.
						By
						ensuring that the TOE is specifically identified
						and that this
						identification is consistent in the ST and in the
						AGD guidance (as
						done in the assurance activity for ALC_CMC.1),
						the evaluator
						implicitly confirms the information required by
						this component.
						Life-cycle support is targeted aspects of the
						developer’s
						life-cycle and instructions to providers of
						applications for the
						developer’s devices, rather than an in-depth
						examination of the
						TSF
						manufacturer’s development and
						configuration management
						process.
						This is not meant to diminish
						the critical role that a
						developer’s
						practices play in
						contributing to the overall
						trustworthiness of a
						product; rather,
						it’s a reflection on the
						information to be made
						available for
						evaluation.
						<br />
						The evaluator shall ensure that the developer has
						identified (in
						public-facing development documentation for their
						platform) one or
						more development environments appropriate for
						use in developing
						applications for the developer’s platform. For
						each of these
						development environments, the developer shall
						provide information
						on how to configure the environment to ensure
						that buffer overflow
						protection mechanisms in the environment(s)
						are invoked (e.g.,
						compiler flags). The evaluator shall ensure
						that this
						documentation
						also includes an indication of whether
						such
						protections are on by
						default, or have to be specifically
						enabled. The evaluator shall
						ensure that the TSF is uniquely
						identified (with respect to other
						products from the TSF vendor),
						and that documentation provided by
						the developer in association
						with the requirements in the ST is
						associated with the TSF using
						this unique identification.
					</aactivity></component></subsection><subsection id="ate" title="Class ATE: Tests">
				Testing is specified for functional aspects of the system as well
				as
				aspects that take advantage of design or implementation
				weaknesses.
				The former is done through the ATE_IND family, while
				the latter is
				through the AVA_VAN family. At the assurance level
				specified in this
				PP, testing is based on advertised functionality
				and interfaces with
				dependency on the availability of design
				information. One of the
				primary outputs of the evaluation process
				is the test report as
				specified in the following requirements.
				<component id="ate_ind" name="Independent Testing – Conformance (ATE_IND)">
					Testing is performed to confirm the functionality described in the
					TSS as well as the administrative (including configuration and
					operational) documentation provided. The focus of the testing is
					to
					confirm that the requirements specified in
					<secref linkend="SFRs" />
					being met,
					although some additional testing is specified for SARs in
					<secref linkend="SARs" />
					. The Assurance Activities identify the additional testing
					activities associated with these components. The evaluator
					produces
					a test report documenting the plan for and results of
					testing, as
					well as coverage arguments focused on the platform/TOE
					combinations
					that are claiming conformance to this PP. Given the
					scope of the TOE
					and its associated evaluation evidence
					requirements, this
					component’s assurance activities are covered by
					the assurance
					activities listed for ALC_CMC.1.
					<h4>Developer action elements:</h4><f-element id="ate_ind.1.1d"> The developer shall provide the TOE for
						testing.
					</f-element><h4>Content and presentation elements:</h4><f-element id="ate_ind.1.1c"> The configuration list shall include the
						following: the TOE itself; and the evaluation evidence required
						by
						the SARs.
					</f-element><h4>Evaluator action elements:</h4><f-element id="ate_ind.1.1e">
						The evaluator
						<i>shall confirm</i>
						that the information provided meets all requirements for content
						and presentation of evidence.
					</f-element><f-element id="ate_ind.1.2e">
						The evaluator
						<i>shall test</i>
						a subset of the TSF to confirm that the TSF operates as
						specified.
					</f-element><aactivity> The evaluator shall prepare a test plan and report
						documenting the testing aspects of the system. The test plan
						covers all of the testing actions contained in the CEM and the
						body of this PP’s Assurance Activities. While it is not necessary
						to have one test case per test listed in an Assurance Activity,
						the evaluator must document in the test plan that each applicable
						testing requirement in the ST is covered. The test plan
						identifies
						the platforms to be tested, and for those platforms
						not included in
						the test plan but included in the ST, the test
						plan provides a
						justification for not testing the platforms. This
						justification
						must address the differences between the tested
						platforms and the
						untested platforms, and make an argument that
						the differences do
						not affect the testing to be performed. It is
						not sufficient to
						merely assert that the differences have no
						affect; rationale must
						be provided. If all platforms claimed in
						the ST are tested, then no
						rationale is necessary. The test plan
						describes the composition of
						each platform to be tested, and any
						setup that is necessary beyond
						what is contained in the AGD
						documentation. It should be noted that
						the evaluator is expected
						to follow the AGD documentation for
						installation and setup of
						each platform either as part of a test or
						as a standard pre-test
						condition. This may include special test
						drivers or tools. For
						each driver or tool, an argument (not just an
						assertion) should
						be provided that the driver or tool will not
						adversely affect the
						performance of the functionality by the TOE
						and its platform.
						This also includes the configuration of the
						cryptographic engine
						to be used. The cryptographic algorithms
						implemented by this
						engine are those specified by this PP and used
						by the
						cryptographic protocols being evaluated (IPsec, TLS/HTTPS,
						SSH).
						The test plan identifies high-level test objectives as well
						as
						the test procedures to be followed to achieve those objectives.
						These procedures include expected results. The test report (which
						could just be an annotated version of the test plan) details the
						activities that took place when the test procedures were
						executed,
						and includes the actual results of the tests. This
						shall be a
						cumulative account, so if there was a test run that
						resulted in a
						failure; a fix installed; and then a successful
						re-run of the test,
						the report would show a “fail” and “pass”
						result (and the
						supporting details), and not just the “pass”
						result.

					</aactivity></component></subsection><subsection id="ava" title="Class AVA: Vulnerability Assessment">
				For the first generation of this protection profile, the evaluation
				lab is expected to survey open sources to discover what
				vulnerabilities have been discovered in these types of products. In
				most cases, these vulnerabilities will require sophistication
				beyond
				that of a basic attacker. Until penetration tools are
				created and
				uniformly distributed to the evaluation labs, the
				evaluator will not
				be expected to test for these vulnerabilities in
				the TOE. The labs
				will be expected to comment on the likelihood of
				these
				vulnerabilities given the documentation provided by the
				vendor. This
				information will be used in the development of
				penetration testing
				tools and for the development of future
				protection profiles.
				<component id="ava_van" name="Vulnerability Survey (AVA_VAN)"><h4>Developer action elements:</h4><f-element id="AVA_VAN.1.1D"> The developer shall provide the TOE for
						testing.
					</f-element><h4>Content and presentation elements:</h4><f-element id="AVA_VAN.1.1C"> The TOE shall be suitable for testing.
					</f-element><h4>Evaluator action elements:</h4><f-element id="AVA_VAN.1.1E"> The evaluator shall confirm that the
						information provided meets all requirements for content and
						presentation of evidence.
					</f-element><f-element id="AVA_VAN.1.2E"> The evaluator shall perform a search of
						public domain sources to identify potential vulnerabilities in
						the
						TOE.
					</f-element><f-element id="AVA_VAN.1.3E"> The evaluator shall conduct penetration
						testing, based on the identified potential vulnerabilities, to
						determine that the TOE is resistant to attacks performed by an
						attacker possessing Basic attack potential.
					</f-element><aactivity> As with ATE_IND, the evaluator shall generate a report
						to document their findings with respect to this requirement. This
						report could physically be part of the overall test report
						mentioned in ATE_IND, or a separate document. The evaluator
						performs a search of public information to determine the
						vulnerabilities that have been found in network infrastructure
						devices and the implemented communication protocols in general,
						as
						well as those that pertain to the particular TOE. The
						evaluator
						documents the sources consulted and the vulnerabilities
						found in
						the report. For each vulnerability found, the evaluator
						either
						provides a rationale with respect to its
						non-applicability, or the
						evaluator formulates a test (using the
						guidelines provided in
						ATE_IND) to confirm the vulnerability, if
						suitable. Suitability is
						determined by assessing the attack
						vector needed to take advantage
						of the vulnerability. If
						exploiting the vulnerability requires
						expert skills and an
						electron microscope, for instance, then a test
						would not be
						suitable and an appropriate justification would be
						formulated.
					</aactivity></component></subsection></section></chapter>
  <appendix title="Selection-Based Requirements" id="selreqs">
		As indicated in the introduction to this PP, the baseline requirements
		(those that must be performed by the TOE or its underlying platform)
		are contained in the body of this PP. There are additional
		requirements based on selections in the body of the PP: if certain
		selections are made, then additional requirements below will need to
		be included.
		<section title="Selection-Based Security Functional Requirements" id="selectionbasedSFRs">
			The
			selection-based reqs go here.
			We will likely need to place TLS, DTLS,
			and HTTPS here.
			<subsection title="Cryptographic Support (FCS)" id="fcs-selectionbased"><component id="fcs_tls_ext.1" name="TLS Implementation"><f-element id="fcs_tls_ext.1.1">
						The application shall implement one or more of the following
						protocols
						<selectables linebreak="yes"><selectable>TLS 1.0 (RFC 2246)</selectable><selectable>TLS 1.1 (RFC 4346)</selectable><selectable>TLS 1.2 (RFC 5246)</selectable></selectables>
						supporting the following ciphersuites:
						<p />
						Mandatory Ciphersuites: TLS_RSA_WITH_AES_128_CBC_SHA and
						<p />
						Optional Ciphersuites:
						<selectables linebreak="yes"><selectable>None</selectable><selectable>TLS_RSA_WITH_AES_256_CBC_SHA</selectable><selectable>TLS_RSA_WITH_AES_128_CBC_SHA256</selectable><selectable>TLS_RSA_WITH_AES_256_CBC_SHA256</selectable><selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256</selectable><selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256</selectable><selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</selectable><selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</selectable><selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</selectable><selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</selectable><selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA</selectable><selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</selectable></selectables>
						.
						<note role="application"> The ciphersuites to be tested in the evaluated
							configuration are limited by
							this requirement. The ST author
							should select the optional
							ciphersuites that are supported; if
							there are no ciphersuites supported other than the mandatory
							suites,
							then None should be
							selected. It is necessary to limit the
							ciphersuites that can be used in
							an evaluated
							configuration
							administratively on the server in the test environment. The
							Suite
							B algorithms
							listed above (RFC 6460) are the preferred
							algorithms
							for
							implementation.
						</note></f-element><f-element id="fc_tls_ext.1.2">
						The application shall not establish a trusted
						channel if the
						distinguished name (DN) contained in a certificate does
						not match
						the expected DN for
						the peer.
						<note role="application">
							The ciphersuites to be used in the evaluated configuration are
							limited by this requirement; however other
							ciphersuites may be
							implemented. The ST author should select the optional
							ciphersuites that are
							supported; if there are no ciphersuites
							supported other than the mandatory
							suites, then “None” should
							be
							selected. If administrative steps need to be taken so that the
							suites negotiated by the implementation
							are limited to those in
							this requirement, the appropriate
							instructions need to be
							contained in the
							guidance called for by AGD_OPE.
							<p />
							The Suite B algorithms (RFC 6460) listed above are the preferred
							algorithms for implementation. TLS 1.2
							is the preferred protocol
							and may be required in the future. In
							addition, future
							publications of this PP will
							require that the TOE offer a means
							to
							deny all connection attempts
							using specified older versions of
							the
							SSL/TLS protocol.
						</note></f-element><aactivity>
						The evaluator shall check the description of the implementation
						of
						this protocol in the TSS to ensure that the ciphersuites
						supported
						are specified. The evaluator shall check the TSS to
						ensure that the
						ciphersuites specified include those listed for
						this component. The
						evaluator shall also check the operational
						guidance to ensure that
						it contains instructions on configuring
						the TOE so that TLS
						conforms to the description in the TSS. The
						evaluator shall verify
						that the TSS describes how the DN in the
						certificate is compared to
						the expected DN. If the DN is not
						compared automatically to the
						Domain Name or IP address, the
						evaluator shall ensure that the AGD
						guidance includes
						configuration of the expected DN for the
						connection. Additional
						tests may be added in the future to test
						compliance with RFC
						5246. The evaluator shall also perform the
						following tests:
						<testlist><test>The evaluator shall establish a TLS connection using each
								of the ciphersuites specified by the requirement. This
								connection may be established as part of the establishment of a
								higher-level protocol, e.g., as part of an EAP session. It is
								sufficient to observe the successful negotiation of a
								ciphersuite to satisfy the intent of the test; it is not
								necessary to examine the characteristics of the encrypted
								traffic in an attempt to discern the ciphersuite being used
								(for
								example, that the cryptographic algorithm is 128-bit AES
								and not
								256-bit AES).
							</test><test>The following test is repeated for each supported
								certificate signing algorithm supported. The evaluator shall
								attempt to establish the connection using a server with a
								server
								certificate that contains the Server Authentication
								purpose in
								the extendedKeyUsage field and verify that a
								connection is
								established. The evaluator will then verify that
								the client
								rejects an otherwise valid server certificate that
								lacks the
								Server Authentication purpose in the extendedKeyUsage
								field and a
								connection is not established. Ideally, the two
								certificates
								should be identical except for the
								extendedKeyUsage field.
							</test><test>The evaluator shall attempt a connection with a
								certificate
								where the DN matches either the configured expected
								DN or the
								Domain Name/IP address of the peer. The evaluator
								shall verify
								that the TSF is able to successfully connect. The
								evaluator shall
								attempt a connection with a certificate where
								the DN does not
								match either the configured expected DN or the
								Domain Name/IP
								address of the peer. The evaluator shall verify
								that the TSF is
								not able to successfully connect.
							</test><test>The evaluator shall configure the server to send a
								certificate in the TLS connection that the does not match the
								server-selected ciphersuite (for example, send a ECDSA
								certificate while using the TLS_RSA_WITH_AES_128_CBC_SHA
								ciphersuite or send a RSA certificate while using one of the
								ECDSA ciphersuites.) The evaluator shall verify that the TOE
								disconnects after receiving the server‘s Certificate handshake
								message.
							</test><test>
								The evaluator shall setup a man-in-the-middle tool between the
								TOE and the server and shall perform the following
								modifications
								to the traffic:
								<ul><li>Modify at least one byte in the server‘s nonce in the
										Server Hello handshake message, and verify that the server
										denies the client‘s Finished handshake message.
									</li><li>Modify the server‘s selected ciphersuite in the Server
										Hello handshake message to be a ciphersuite not presented in
										the Client Hello handshake ￼message. The evaluator shall
										verify that the client rejects the connection after receiving
										the Server Hello.
									</li><li>(conditional) If a DHE or ECDHE ciphersuite is supported,
										modify the signature block in the Server‘s KeyExchange
										handshake message, and verify that the client rejects the
										connection after receiving the Server KeyExchange.
									</li><li>Modify a byte in a CA field in the Server‘s Certificate
										Request handshake message. The modified CA field must not be
										the CA used to sign the client‘s certificate. The evaluator
										shall verify that the server rejects the connection after
										receiving the Client Finished handshake message.
									</li><li>Modify a byte in the Server Finished handshake message,
										and
										verify that the client sends a fatal alert upon receipt
										and
										does not send any application data.
									</li></ul></test></testlist></aactivity></component></subsection></section></appendix>
  <appendix title="Optional Requirements" id="optreqs">
		No optional
		requirements have yet been defined for this PP.
	</appendix>
  <appendix title="Objective Requirements" id="objreqs">
		No optional
		requirements have yet been defined for this PP.
	</appendix>
  <appendix title="NIST SP 800-53/CNSS 1253 Mapping" id="nistmapping">
		If such
		a table is necessary, here's where it'd go.
	</appendix>
  <appendix title="References" id="biblio">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>
					Common Criteria for Information Technology Security Evaluation -
					<ul><li>Part 1: Introduction and general model, dated September 2006,
							version 3.1 R1
						</li><li>Part 2: Security functional requirements, dated September
							2007, version 3.1, R2
						</li><li>Part 3: Security assurance requirements, dated September 2007,
							version 3.1, R2
						</li></ul></description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>Common Evaluation Methodology for Information
					Technology Security - Evaluation Methodology, dated September 2007,
					version 3.1 R2
				</description>
      </entry>
      <entry>
        <tag>CESG</tag>
        <description>
			CESG - <a href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End User Devices Security and Configuration Guidance</a></description>
      </entry>
    </bibliography>
  </appendix>
</PP>