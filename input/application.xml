<?xml version="1.0" encoding="utf-8"?>
<PP xmlns="http://common-criteria.rhcloud.com/ns/cc" name="Application Software">
  <PPReference title="PP Reference" id="ID003">
    <ReferenceTable>
      <PPTitle>Protection Profile for Application Software</PPTitle>
      <PPVersion>.6</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2014-07-17</PPPubDate>
      <PPCertificationID>NIAP-whoknows</PPCertificationID>
      <CCVersion>.01 Revision 0</CCVersion>
      <Keywords>application; software</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership</description>
      </entry>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>v .1</version>
      <date>2014-01-08</date>
      <subject>Initial draft commit</subject>
    </entry>
    <entry>
      <version>v .6</version>
      <date>2014-03-14</date>
      <subject>Attractive presentation achieved</subject>
    </entry>
    <entry>
      <version>v .7</version>
      <date>2014-08-08</date>
      <subject>First round of Technical Community feedback incorporated</subject>
    </entry>
  </RevisionHistory>
  <chapter title="Introduction" id="int">
    <!-- TO DO: Distinguish citations from cross-references. Mark up each appropriately. 
                        Pick an attribute other than id to refer to the linked element. Transform 
                        them more intelligently. Better yet, use standard markup with tool support. -->
    <section title="Overview" id="ppoverview">The scope of this Protection Profile (PP) is to
      describe the security functionality of application software in terms of <cite linkend="bibCC"
      /> and to define functional and assurance requirements for such software. In recent years,
      software attacks have shifted from targeting operating systems to targeting applications. This
      has been the natural response to improvements in operating system security and development
      processes. As a result, it is paramount that the security of applications be improved to
      reduce the risk to client systems and enterprise networks.</section>
    <section title="Terms" id="glossary">The following sections provide both Common Criteria and
      technology terms used in this Protection Profile. <subsection title="Common Criteria Terms"
        id="ccterms">
        <glossary>
          <entry>
            <term><abbr title="Common Criteria">CC</abbr></term>
            <description>Common Criteria for Information Technology Security
              Evaluation</description>
          </entry>
          <entry>
            <term><abbr title="Common Evaluation Methodology">CEM</abbr></term>
            <description>Common Evaluation Methodology for Information Technology Security
              Evaluation</description>
          </entry>
          <entry>
            <term><abbr title="Protection Profile">PP</abbr></term>
            <description>An implementation-independent set of security requirements for a category
              of products.</description>
          </entry>
          <entry>
            <term><abbr title="Security Target">ST</abbr></term>
            <description>A set of implementation-dependent security requirements for a specific
              product.</description>
          </entry>
          <entry>
            <term><abbr title="Target of Evaluation">TOE</abbr></term>
            <description>The product under evaluation. In this case, application
              software.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Security Functionality">TSF</abbr></term>
            <description>The security functionality of the product under evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Summary Specification">TSS</abbr></term>
            <description>A description of how a TOE satisfies the SFRs in a ST.</description>
          </entry>
          <entry>
            <term><abbr title="Security Functional Requirement">SFR</abbr></term>
            <description>A requirement for security enforcement by the TOE.</description>
          </entry>
          <entry>
            <term><abbr title="Security Assurance Requirement">SAR</abbr></term>
            <description>A requirement to assure the security of the TOE.</description>
          </entry>
        </glossary>
      </subsection>
      <subsection title="Technology Terms" id="techterms">
        <glossary>
          <entry>
            <term><abbr title="Address Space Layout Randomization">ASLR</abbr></term>
            <description>An anti-exploitation feature which loads memory mappings into unpredictable
              locations. ASLR makes it more difficult for an attacker to redirect control to code
              that they have introduced into the address space of an application
              process.</description>
          </entry>
          <entry>
            <term><abbr title="Application">app</abbr></term>
            <description>Software that runs on an operating system and performs tasks on behalf of
              the user or owner of the platform.</description>
          </entry>
          <entry>
            <term><abbr title="Application Programming Interface">API</abbr></term>
            <description>A specification of routines, data structures, object classes, and variables
              that allows an application to make use of services provided by another software
              component, such as a library. APIs are often provided for a set of libraries included
              with the operating system.</description>
          </entry>
          <entry>
            <term>Credential</term>
            <description>Data that establishes the identity of a user, e.g. a cryptographic key or
              password</description>
          </entry>
          <entry>
            <term><abbr title="Data Execution Prevention">DEP</abbr></term>
            <description>An anti-exploitation feature of modern operating systems executing on
              modern computer hardware, which enforces a non-execute permission on pages of memory.
              DEP prevents pages of memory from containing both data and instructions, which makes
              it more difficult for an attacker to introduce and execute code.</description>
          </entry>
          <entry>
            <term>Developer</term>
            <description>An entity that writes application software. For the purposes of this
              document, vendors and developers are the same.</description>
          </entry>
          <entry>
            <term>System Owner/Machine Owner</term>
            <description>Entity that purchased and maintains ownership of a mobile device or
              computer.</description>
          </entry>
          <entry>
            <term>Information Owner</term>
            <description>Entity whose information is stored and/or processed on a device or
              computer; can be an application-specific provider, a digital provider, or an
              enterprise that allows access to resources from mobile devices or remote
              computers.</description>
          </entry>
          <entry>
            <term><abbr title="Operating System">OS</abbr></term>
            <description>Software that manages platform resources and provides services for
              applications.</description>
          </entry>
          <entry>
            <term><abbr title="Personally Identifiable Information">PII</abbr></term>
            <description>Any information about an individual maintained by an agency, including, but
              not limited to, education, financial transactions, medical history, and criminal or
              employment history and information which can be used to distinguish or trace an
              individual's identity, such as their name, social security number, date and place of
              birth, mother’s maiden name, biometric records, etc., including any other personal
              information which is linked or linkable to an individual. <cite linkend="bibOMB"
              /></description>
          </entry>
          <entry>
            <term>Platform</term>
            <description>The physical or virtual environment in which software runs. From an
              operating system's perspective, the platform is the physical or virtual hardware. From
              an application's perspective, the platform is the operating system and the operating
              system's platform.</description>
          </entry>
          <entry>
            <term>Robustness</term>
            <description>The ability of a program to continue operating gracefully despite
              abnormalities in input. </description>
          </entry>
          <entry>
            <term>Sensitive Data</term>
            <description> Any information, the loss, misuse, or unauthorized access to or
              modification of which could adversely affect the privacy of the application user <cite
                linkend="bibCSA"/>. The data can be stored, processed, or transmitted by the
              application. It may include all user or enterprise data, credentials, <abbr
                linkend="PII"/> or may be specific application data such as e-mails, messaging,
              documents, calendar items, and contacts. </description>
          </entry>
          <entry>
            <term>Stack Cookie</term>
            <description>An anti-exploitation feature that places a value on the stack at the start
              of a function call, and checks that the value is the same at the end of the function
              call. This is also refered to as Stack Guard, or Stack Canaries.</description>
          </entry>
          <entry>
            <term>Vendor</term>
            <description>An entity that sells application software. For purposes of this document,
              vendors and developers are the same. Vendors are responsible for maintaining and
              updating application software.</description>
          </entry>
        </glossary>
      </subsection></section>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">The requirements in this
      document apply to all application software that runs on any operating system regardless of the
      function of the application, identity of the operating system, or composition of the
      underlying hardware platform. This includes mobile applications as well as application
      software on desktop or server platforms. Some application types are covered by more specific
      PPs which may be expressed as Extended Packages of this PP. Such applications are subject to
      the requirements of both this PP and the Extended Package that addresses their special
      functionality. For example, web browsers are subject to the requirements in this PP and the
      Extended Package for Web Browsers. Although the requirements in this document apply to all
      application software that runs on any operating system, some assurance activities are specific
      to particular operating systems in order to provide precision and repeatability. Additional
      test activities are sought from operating system vendors so that coverage across platforms is
      as complete as possible. <subsection title="TOE Boundary" id="TOEboundary"> An application is
        defined as software that runs on an operating system and performs tasks on behalf of the
        user or owner of the system. As distinguished from applications, operating system software
        manages hardware resources and provides the runtime environment for applications. The
        designator of application obviously includes all software that one installs onto operating
        systems such as office suites, <abbr title="Portable Document Format">PDF</abbr> readers and
        downloadable smartphone apps. This includes any software in the application package, even
        those pieces that alter the functionality of the underlying operating system, such as kernel
        drivers. It also includes any software packages that the application explicitly depends on
        and are not part of the operating system (or operating system optional add-ons). It should
        be noted that many operating systems come bundled with applications (such as web browsers,
        email clients and media players) and these too are also subject to the requirements defined
        in this document. <abbr title="Basic Input/Output System">BIOS</abbr> and other firmware,
        the operating system kernel, and other systems software (and drivers) provided as part of
        the platform are outside the scope of this document. <figure entity="images/appdiagram.png"
          title="Figure 1: Protection Profile Overview" id="generictoedesign"
      /></subsection></section>
    <section title="Use Cases" id="usecases">Requirements in this Protection Profile are designed to
      address the security problem in the following use cases. These use cases are intentionally
      very broad, as many specific use cases exist for application software. Many applications may
      be used in combinations of these broad use cases as well. <usecases>
        <usecase title="Content Creation" id="contentcreation">
          <description>The application allows a user to create content, saving it to either local or
            remote storage (e.g. Saving a text document). </description>
        </usecase>
        <usecase title="Content Consumption" id="contentconsumption">
          <description>The application allows a user to consume content, retrieving it from either
            local or remote storage (e.g. Opening a text document).</description>
        </usecase>
        <usecase title="Communication" id="interactivecomms">
          <description>The application allows for communication interactively or
            non-interactively with other users or applications over a communications channel.</description>
        </usecase>
      </usecases></section>
  </chapter>
  <chapter title="Conformance Claims" id="ccl">
    <cclaims>
      <cclaim id="Conformance Statement">
        <description>The PP requires strict conformance of any PPs/STs to this PP.</description>
      </cclaim>
      <cclaim id="CC Conformance Claims">
        <description>This PP is conformant to Parts 2 (extended) and 3 (extended) of Common Criteria
          Version 3.1, Revision 4. <cite linkend="bibCC"/>.</description>
      </cclaim>
      <cclaim id="PP Claim">
        <description>This PP does not claim conformance to any other Protection
          Profile.</description>
      </cclaim>
      <cclaim id="Package Claim">
        <description>This PP does not claim conformance to any packages.</description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Definition" id="spd">The security problem is described in terms
    of the threats that the <abbr linkend="TOE"/> is expected to address, assumptions about the
    operational environment, and any organizational security policies that the TOE is expected to
    enforce. <section title="Threats" id="threats">
      <threats>
        <threat id="T.NETWORK_ATTACK">
          <description>An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may engage in communications with the application
            software or alter communications between the application software and other endpoints in
            order to compromise it.</description>
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.PROTECTED_COMMS as this
              provides for integrity of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.INTEGRITY">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.INTEGRITY as this provides
              for integrity of software that is installed onto the system from the
              network.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.NETWORK_EAVESDROP">
          <description>An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may monitor and gain access to data exchanged between
            the application and other endpoints.</description>
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.PROTECTED_COMMS as this
              provides for confidentiality of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.QUALITY">
            <rationale>The objective O.QUALITY ensures use of mechanisms that provide strong
              protection against network-based attack.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.LOCAL_ATTACK">
          <description>An attacker can act through unprivileged software on the same computing
            platform on which the application executes. Attackers may provide maliciously formatted
            input to the application in the form of files or other local
            communications.</description>
          <objective-refer ref="O.QUALITY">
            <rationale>The objective O.QUALITY protects against the use of mechanisms that leave the
                <abbr linkend="TOE"/> open to attacks.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.PHYSICAL_ACCESS">
          <description>An attacker may try to access sensitive data at rest.</description>
          <objective-refer ref="O.PROTECTED_STORAGE">
            <rationale>The objective O.PROTECTED_STORAGE protects against attempts to access
              physical storage used by the <abbr linkend="TOE"/>.</rationale>
          </objective-refer>
        </threat>
      </threats>
    </section>
    <section title="Assumptions" id="assumptions">
      <assumptions>
        <assumption id="A.PLATFORM">
          <description>The <abbr linkend="TOE"/> relies upon a trustworthy computing platform for
            its execution. This includes the underlying operating system and the runtime environment
            it provides to the TOE.</description>
          <objective-refer ref="OE.PLATFORM">
            <rationale>The assumption A.PLATFORM is covered by security objectives OE.PLATFORM as
              directly follows.</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PROPER_USER">
          <description>The user of the application software is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security
            policy.</description>
          <objective-refer ref="OE.PROPER_USER">
            <rationale>The assumption A.PROPER_USER is covered by objective OE.PROPER_USER as
              directly follows</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PROPER_ADMIN">
          <description>The administrator of the application software is not careless, willfully
            negligent or hostile, and administers the software within compliance of the applied
            enterprise security policy.</description>
          <objective-refer ref="OE.PROPER_ADMIN">
            <rationale>The assumption A.PROPER_ADMIN is covered by objective OE.PROPER_ADMIN as
              directly follows</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </section>
    <section title="Organizational Security Policies" id="OSPs">
      <OSPs>
        <OSP id="P.ENTERPRISE">
          <description>The configuration of the application software must adhere to the enterprise
            security policy.</description>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The organizational security policy P.ENTERPRISE is enforced through the the
              objective O.MANAGEMENT as this objective represents how the enterprise asserts
              management over the <abbr linkend="TOE"/>.</rationale>
          </objective-refer>
        </OSP>
      </OSPs>
    </section></chapter>
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO id="O.INTEGRITY">
          <description>Conformant <abbr linkend="TOE"/>s ensure the integrity of their installation
            and update packages, and also leverage execution environment-based mitigations. Software
            is seldom if ever shipped without errors, and the ability to deploy patches and updates
            to fielded software with integrity is critical to enterprise network security. Processor
            manufacturers, compiler developers, and operating system vendors have developed
            execution environment-based mitigations that increase the cost to attackers by adding
            complexity to the task of compromising systems. Application software can often take
            advantage of these mechanisms by using <abbr linkend="API"/>s provided by the operating
            system or by enabling the mechanism through compiler or linker options.</description>
          <component-refer ref="fdp_dec_ext.1"/>
          <component-refer ref="fpt_aex_ext.1"/>
          <component-refer ref="fpt_tud_ext.1"/>
        </SO>
        <SO id="O.QUALITY">
          <description>To ensure quality of implementation, conformant <abbr linkend="TOE"/>s
            leverage services and <abbr linkend="API"/>s provided by the operating system rather
            than implementing their own versions of these services and APIs. This is especially
            important for cryptographic services and other complex operations such as file and media
            parsing. Quality of implementation includes maintaining compatibility with future
            operating system versions and updates by using only documented and supported
            APIs.</description>
          <component-refer ref="fmt_mec_ext.1"/>
          <component-refer ref="fmt_cfg_ext.1"/>
          <component-refer ref="fpt_api_ext.1"/>
        </SO>
        <SO id="O.MANAGEMENT">
          <description>To facilitate management by users and the enterprise, conformant <abbr
              linkend="TOE"/>s provide consistent and supported interfaces for their
            security-relevant configuration and maintenance. This includes the deployment of
            applications and application updates through the use of platform-supported deployment
            mechanisms and formats, as well as providing mechanisms for configuration.</description>
          <component-refer ref="fmt_smf.1"/>
          <component-refer ref="fpt_idv_ext.1"/>
        </SO>
        <SO id="O.PROTECTED_STORAGE">
          <description>To address the issue of loss of confidentiality of user data in the event of
            loss of physical control of the storage medium, conformant <abbr linkend="TOE"/>s will
            use data-at-rest protection. This involves encrypting data and keys stored by the TOE in
            order to prevent unauthorized access to this encrypted data.</description>
          <component-refer ref="fdp_dar_ext.1"/>
          <component-refer ref="fcs_rbg_ext.1"/>
        </SO>
        <SO id="O.PROTECTED_COMMS">
          <description> To address both passive (eavesdropping) and active (packet modification)
            network attack threats, conformant <abbr linkend="TOE"/>s will use a trusted channel for
            sensitive data. Sensitive data includes cryptographic keys, passwords, and any other
            data specific to the application that should not be exposed outside of the application. </description>
          <component-refer ref="fcs_rbg_ext.1"/>
          <component-refer ref="fcs_tls_ext.1"/>
          <!-- <component-refer ref="fpr_ano_ext.1" /> -->
          <!-- this may call for a separate protected_identity objective -->
          <component-refer ref="ftp_dit_ext.1"/>
        </SO>
      </SOs>
    </section>
    <section title="Security Objectives for the Operational Environment"
      id="SecurityObjectivesTOEorEnvironment">The following security objectives for the operational
      environment assist the <abbr linkend="TOE"/> in correctly providing its security
      functionality. These track with the assumptions about the environment. <SOEs>
        <SOE id="OE.PLATFORM">
          <description>The <abbr linkend="TOE"/> relies upon a trustworthy computing platform for
            its execution. This includes the underlying operating system and the runtime environment
            it provides to the TOE.</description>
        </SOE>
        <SOE id="OE.PROPER_USER">
          <description>The user of the application software is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security
            policy.</description>
        </SOE>
        <SOE id="OE.PROPER_ADMIN">
          <description>The administrator of the application software is not careless, willfully
            negligent or hostile, and administers the software within compliance of the applied
            enterprise security policy.</description>
        </SOE>
      </SOEs></section>
    <section title="Security Objectives Rationale" id="SOR">This section describes how the
      assumptions, threats, and organizational security policies map to the security objectives.
      <InsertSPDCorrespondence/></section>
  </chapter>
  <chapter title="Security Requirements" id="req">This chapter describes the security requirements
    which have to be fulfilled by the <abbr linkend="TOE"/>. Those requirements comprise functional
    components from Part 2 and assurance components from Part 3 of <cite linkend="bibCC"/>. The
    following notations are used: <ul>
      <li>
        <b>Refinement</b> operation (denoted by <b>bold text</b>): is used to add details to a
        requirement, and thus further restricts a requirement.</li>
      <li>
        <b>Selection</b> (denoted by <u>underlined text</u>): is used to select one or more options
        provided by the [CC] in stating a requirement.</li>
      <li>
        <b>Assignment</b> operation (denoted by <i>italicised text</i>): is used to assign a
        specific value to an unspecified parameter, such as the length of a password. Showing the
        value in square brackets indicates assignment.</li>
      <li>
        <b>Iteration</b> operation: are identified with a number inside parentheses (e.g.
        "(1)")</li>
    </ul>
    <section title="Security Functional Requirements" id="SFRs">The Security Functional Requirements
      included in this section are derived from Part 2 of the Common Criteria for Information
      Technology Security Evaluation, Version 3.1, Revision 4, with additional extended functional
      components. <subsection title="User Data Protection (FDP)" id="fdp">
        <f-component id="fdp_dec_ext.1" name="Access to Platform Resources">
          <f-element id="fdp_dec_ext.1.1">
            <title> The application shall provide user awareness of its intention to access
                <selectables linebreak="yes">
                <selectable>network connectivity</selectable>
                <selectable>camera</selectable>
                <selectable>microphone</selectable>
                <selectable><abbr title="Global Positioning System">GPS</abbr></selectable>
                <selectable><abbr title="Near-Field Communication">NFC</abbr></selectable>
                <selectable><abbr title="Universal Serial Bus">USB</abbr></selectable>
                <selectable>Bluetooth</selectable>
                <selectable>[assignment: list of additional hardware resources that provide access
                  to sensitive information]</selectable>
              </selectables> . </title>
            <note role="application"> The evaluator should ensure that the selection captures all
              platform hardware resources which the application is intended to access. The
              requirement is worded in this way due to the diversity of methods by which user
              awareness can be achieved, which varies per platform. An application can use a file or
              directory selection dialog to provide user awareness that data can be saved to a
              removable or remote drive. </note>
            <aactivity>The evaluator shall install the application and inspect its user
              documentation, and determine that the user is informed of any need to access hardware
              resources which provide access to sensitive information. The method of doing so varies
              per platform. <subaactivity platform="blackberry">The evaluator shall install the
                application and run it for the first time. The evaluator shall verify that the
                application displays all platform resources it would like to access. Note: If the
                user goes to: App permissions – Settings → Security and Privacy → Application
                Permissions → Select application in question, it will list which platform resource
                are approved/denied and can be changed.</subaactivity>
              <subaactivity platform="android">The evaluator shall install the application and
                verify that the application displays the platform resources it would like to access.
                This includes permissions such as ACCESS_COURSE_LOCATION, ACCESS_FINE_LOCATION,
                BLUETOOTH, CAMERA, INTERNET, NFC, READ_EXTERNAL_STORAGE, RECORD_AUDIO. Note: Users
                must accept all requested permissions upon installation and cannot choose individual
                permissions to allow or deny. A complete list of Android permissions can be found
                at: <ul><li><a
                      href="http://developer.android.com/reference/android/Manifest.permission.html"
                      >http://developer.android.com/reference/android/Manifest.permission.html</a></li>
                  <li><a
                      href="http://developer.android.com/reference/android/Manifest.permission_group.html"
                      >http://developer.android.com/reference/android/Manifest.permission_group.html</a></li>
                </ul>
              </subaactivity>
              <subaactivity platform="windows">For Windows Store Apps the evaluator shall check the
                WMAppManifest.xml file for a list of required hardware capabilities. The evaluator
                shall verify that the user is made aware of the required hardware capabilities when
                the application is first installed. This includes permissions such as
                ID_CAP_ISV_CAMERA,ID_CAP_LOCATION,ID_CAP_NETWORKING,ID_CAP_MICROPHONE,
                ID_CAP_PROXIMITY and so on. A complete list of Windows App permissions can be found
                at: <ul><li><a
                      href="http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx">
                      http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx</a></li>
                </ul> For Windows Desktop Applications the evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                hardware resources.</subaactivity>
              <subaactivity platform="ios">The evaluator shall install and run the application. The
                evaluator shall attempt to exercise functionality within the app that should result
                in user awareness. This includes Location Services, Bluetooth, and camera. The
                evaluator shall verify that the application prompts the user for
                permission.</subaactivity>
              <subaactivity platform="selinux"> The evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                hardware resources. </subaactivity>
              <subaactivity platform="z/OS"> The evaluator shall verify that either the application
                or the documentation provide the user with a list of the required hardware
                resources. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                hardware resources. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall verify that either the application
                or the documentation provide the user with a list of the required hardware
                resources. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.2">
            <title>The application shall provide user awareness of its intention to access
                <selectables linebreak="yes">
                <selectable>address book</selectable>
                <selectable>calendar</selectable>
                <selectable>call lists</selectable>
                <selectable>system logs</selectable>
                <selectable>world-readable storage</selectable>
                <selectable>[assignment: list of additional sensitive data]</selectable>
              </selectables>
            </title>
            <note role="application"> The evaluator should ensure that the selection captures all
              sensitive information repositories which the application is intended to access. The
              requirement is worded in this way due to the diversity of methods by which user
              awareness can be achieved, which varies per platform. An application can use a file or
              directory selection dialog to provide user awareness that data can be saved to
              world-readable-storage. </note>
            <aactivity>The evaluator shall install the application and inspect its user
              documentation, and determine that the user is informed of any need to access sensitive
              information which provide access to sensitive information repositories. The method of
              doing so varies per platform. <subaactivity platform="blackberry">The evaluator shall
                install the application and run it for the first time. The evaluator shall verify
                that the application displays all platform resources it would like to
                access.</subaactivity>
              <subaactivity platform="android">The evaluator shall install the application and
                verify that the application displays the permissions used to access sensitive
                information repositories. This includes permissions such as READ_CALENDAR,
                READ_CALL_LOG, READ_CONTACTS, READ_EXTERNAL_STORAGE, READ_LOGS. A complete list of
                Android permissions can be found at: <ul><li><a
                      href="http://developer.android.com/reference/android/Manifest.permission.html"
                      >http://developer.android.com/reference/android/Manifest.permission.html</a></li>
                  <li><a
                      href="http://developer.android.com/reference/android/Manifest.permission_group.html"
                      >http://developer.android.com/reference/android/Manifest.permission_group.html</a></li>
                </ul>
              </subaactivity>
              <subaactivity platform="windows">For Windows Store Apps the evaluator shall check the
                WMAppManifest.xml file for a list of required capabilities. The evaluator shall
                verify that the user is made aware of the required information repositories when the
                application is first installed. This includes permissions such as
                ID_CAP_CONTACTS,ID_CAP_APPOINTMENTS,ID_CAP_MEDIALIB and so on. A complete list of
                Windows App permissions can be found at: <ul><li><a
                      href="http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx">
                      http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx</a></li>
                </ul> For Windows Desktop Application the evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                information repositories. </subaactivity>
              <subaactivity platform="ios">The evaluator shall install and run the application. The
                evaluator shall attempt to exercise functionality in the application that would
                cause it to access sensitive information repositories. The evaluator shall verify
                that the application prompts the user for permission.</subaactivity>
              <subaactivity platform="selinux"> The evaluator shall install the application and
                verify that the application displays the permissions used to access sensitive
                information repositories. </subaactivity>
              <subaactivity platform="z/OS"> The evaluator shall verify that either the application
                or the documentation provide the user with a list of permissions used to access
                sensitive information repositories. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall verify that either the
                application or the documentation provide the user with a list of permissions used to
                access sensitive information repositories. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall verify that either the application
                or the documentation provide the user with a list of permissions used to access
                sensitive information repositories. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.3">
            <title> The application shall not access or seek access to resources which it does not
              require. </title>
            <note role="application"> This requirement is intended to prompt judgment about whether
              the resources identified for access in <reqref linkend="fdp_dec_ext.1.1"/> and <reqref
                linkend="fdp_dec_ext.1.2"/> are necessary for the operation of the application. </note>
            <aactivity> The evaluator shall review documentation provided by the application
              developer and for each resource which it requests access to, identify the
              justification as to why access is required. </aactivity>
            <refs>
              <ref sect="SA-17 (7)"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
          <f-element id="fdp_dec_ext.1.4">
            <title>The application shall <selectables linebreak="yes">
                <selectable>create no network connections</selectable>
                <selectable>[assignment: list all network connections]</selectable>
              </selectables> that are not user initiated connections. </title>
            <note role="application"> This requirement is intended to restrict both inbound and
              outbound network connections and ports to only those required, or to network
              connections that are user initiated. </note>
            <aactivity> The evaluator shall run the application on a platform running no other
              networked applications. For the duration of the lifetime of the application, the
              evaluator shall sniff network traffic and make sure that any network connections
              witnessed are documented or is user-initiated. After the application initializes, the
              evaluator shall run a network port scan to verify that any local or remote ports
              opened by the application have been documented. </aactivity>
            <refs>
              <ref sect="CM-7b."
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
        </f-component>
        <f-component id="fdp_dar_ext.1" name="Storage Of Sensitive Application Data">
          <f-element id="fdp_dar_ext.1.1">
            <title>The application shall <selectables linebreak="yes">
                <selectable> invoke platform-provided functionality to encrypt sensitive data when
                  it is stored in non-volatile memory. </selectable>
                <selectable> implement functionality that meet requirements from the File Encryptor
                  Protection Profile to encrypt sensitive data when it is stored in non-volatile
                  memory. </selectable>
                <selectable> not store any sensitive data in non-volatile memory. </selectable>
              </selectables>
            </title>
            <!-- this language is intentionally different from the MDPP's FDP_DAR -->
            <aactivity>The evaluator shall run the application and store potentially sensitive data.
              The evaluator shall then inspect the filesystem to determine where data has been
              written, and note whether it is encrypted. The evaluator shall determine whether
              platform-provided functionality for protecting sensitive data is being invoked. If
              not, the evaluator shall refer to the File Encryptor Protection Profile for
              evaluation. Otherwise, the the evaluator shall test how the application invokes
              platform-provided functionality, which varies per platform: <subaactivity
                platform="blackberry">The evaluator shall determine whether the application properly
                uses the Advanced Data at Rest Protection <abbr linkend="API"/> and the application
                uses the appropriate domain to store and protect each data file.</subaactivity>
              <subaactivity platform="android">The evaluator shall verify that the application uses
                the Android <code>KeyStore</code>, <code>SecretKeyFactory</code> and
                  <code>Cipher</code> classes to encrypt sensitive data.</subaactivity>
              <subaactivity platform="windows">The evaluator shall determine and verify that Windows
                Applications use the <abbr title="Data Protection API">DPAPI</abbr> to store and
                retrieve senstive information. Windows Store Apps for desktop or mobile shall use
                the DPAPI via the ProtectedData class.</subaactivity>
              <subaactivity platform="ios">The evaluator shall determine whether the application
                uses the appropriate Data Protection Class for each data file stored locally. </subaactivity>
              <subaactivity platform="selinux"> The evaluator shall determine whether the
                application properly uses KDE's KWallet or Gnome's GnomeKeyring </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Security Management (FMT)" id="fmt">
        <f-component id="fmt_mec_ext.1" name="Supported Configuration Mechanism">
          <f-element id="fmt_mec_ext.1.1">
            <title> The application shall invoke the mechanisms recommended by the operating system
              vendor for storing and setting all security-related configuration options that are
              stored on the platform. </title>
            <note role="application"> Configuration options that are stored remotely are not subject
              to this requirement. </note>
            <aactivity>The evaluator must identify the application's configuration data (e.g.
              settings) and determine whether it is stored and set using the mechanisms supported by
              the platform. The method of doing so varies per platform. <subaactivity
                platform="blackberry">The evaluator shall verify when the application is installed
                that all files included in the BAR are stored in the app folder of the Application
                working directory.</subaactivity>
              <subaactivity platform="android">The evaluator shall determine and verify that the
                application stores all settings on internal storage. The application should make use
                of the <code>SharedPreferences</code> and/or <code>PreferenceActivity</code> classes
                for storing configuration data.</subaactivity>
              <subaactivity platform="windows">The evaluator shall determine and verify that Windows
                Store App applications use either the Windows.UI.ApplicationSettings namespace or
                the IsolatedStorageSettings namespace for storing application specific settings.
                Classic Desktop application shall use the Windows Registry or a structured file in
                the users profile.</subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that the app uses the
                  <code>user defaults system</code> or <code>key-value store</code> for storing all
                settings.</subaactivity>
              <subaactivity platform="selinux"> The evaluator shall install and run the application
                and verify that the application saves its configuration in structured files that
                reside in /etc (for system specific configuration) or in the users' home directory
                (for user specific configuration). </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fmt_cfg_ext.1" name="Secure by Default Configuration">
          <f-element id="fmt_cfg_ext.1.1">
            <title>The application shall be initially configured to not use any default
              credentials.</title>
            <note role="application">Default credentials are credentials which would be identical
              across examples of a product, such as an identical login username and password. </note>
            <aactivity>The evaluator shall install and run the application and inspect its
              documentation. If the application uses any credentials such as passwords or private
              keys, these must not be pre-programmed and the user must instead be prompted to
              provide the credential.</aactivity>
            <refs>
              <ref sect="IA-5 (5)"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
          <f-element id="fmt_cfg_ext.1.2">
            <title>The application shall be initially configured to prevent the transmission of any
              plaintext credentials.</title>
            <note role="application"> The intent of this requirement is that credentials should not
              be transmitted in the clear. In this version of the PP there are no requirements on
              the method used to transmit credentials in non-plaintext form, but cryptographic
              methods based on the requirements in FCS_COP are preferred. </note>
            <aactivity>The evaluator shall install and run the application and inspect its
              documentation. The evaluator shall determine if the application uses any credentials
              such as passwords or private keys. The evaluator must sniff network traffic between
              the platform and any remote systems, and determine that these credentials are not
              transmitted in the clear.</aactivity>
          </f-element>
          <f-element id="fmt_cfg_ext.1.3">
            <title>The application shall be initially configured with file permissions which protect
              it and its data.</title>
            <note role="application">The precise expectations for file permissions vary per platform
              but the general intention is that a trust boundary protects the application and its
              data. </note>
            <aactivity>The evaluator shall install and run the application. The evaluator shall
              inspect the filesystem of the platform (to the extent possible) for any files created
              by the application and ensure that their permissions are adequate to protected them.
              The method of doing so varies per platform. <subaactivity platform="blackberry"/>
              <subaactivity platform="android">The evaluator shall verify using <code>ls -alR</code>
                that files written within the applications data directory are not world-readable or
                world-writable. The evaluator shall also verify that no sensitive data is written to
                external storage as this data can be read/modified by any application containing the
                READ_EXTERNAL_STORAGE and/or WRITE_EXTERNAL_STORAGE permissions.</subaactivity>
              <subaactivity platform="windows">The evaluator shall run the SysInternals tools,
                Process Monitor and Access Check (or tools of equivalent capability, like icacls.exe) for Classic
                Desktop applications to verify that files writen to disk during an applications
                installation have the correct file permissions. For Windows Store Apps the evaluator shall
                consider the requirement met because of the AppContainer sandbox.</subaactivity>
              <subaactivity platform="ios">The evaluator shall determine whether the application
                leverages the appropriate Data Protection Class for each data file stored
                locally.</subaactivity>
              <subaactivity platform="selinux"> The evaluator shall verify using <code>ls
                  -alR</code> that files written within the applications data directory are not
                world-readable or world-writable. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
            <refs>
              <ref sect="SC-4"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
          <f-element id="fmt_cfg_ext.1.4">
            <title>The application shall be initially configured to not transmit any <abbr
                linkend="PII"/> over a network.</title>
            <note role="application">A dialog box presented to the user at the time the application
              is started is sufficient to meet this requirement. </note>
            <aactivity>The evaluator shall install and run the application and inspect its
              documentation. The evaluator shall survey the list of settings for the application. If
              any setting controls the transmission of PII, it must be initially set to disable the
              transmission of PII.</aactivity>
          </f-element>
        </f-component>
        <f-component id="fmt_smf.1" name="Specification of Management Functions">
          <f-element id="fmt_smf.1.1">
            <title> The <abbr linkend="TSF"/> shall be capable of performing the following
              management functions: [ <ul>
                <li> enable/disable the transmission of any information describing the system's
                  hardware, software, or configuration if this functionality exists </li>
                <li> enable/disable the transmission of any PII if this functionality exists </li>
                <li> enable/disable transmission of any application state (e.g. crashdump)
                  information if this functionality exists </li>
                <li>enable/disable network backup functionality to [assignment: list of enterprise
                  or commercial cloud backup systems] if this functionality exists </li>
                <li> [assignment: list of other management functions to be provided by the TSF]
                </li> ] </ul>
            </title>
            <aactivity>The evaluator shall consult the AGD guidance to perform each of the following
              tests, iterating each test as necessary if both the user and administrator may perform
              the function. <testlist>
                <test>The evaluator shall exercise the applications configuration as the user and
                  the administrator. The evaluator shall perform positive and negative tests, with
                  at least two assignments for each variable setting, for each of the following: <ul>
                    <li>enable/disable the transmission of any information describing the system's
                      hardware, software, or configuration</li>
                    <li>enable/disable the transmission of any PII</li>
                    <li>enable/disable transmission of any application state</li>
                    <li>enable/disable network backup functionality</li>
                  </ul></test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Cryptographic Support (FCS)" id="fcs">
        <f-component id="fcs_rbg_ext.1" name="Random Bit Generation">
          <f-element id="fcs_rbg_ext.1.1">
            <title> The application shall <selectables atleastone="yes" linebreak="yes">
                <selectable>perform no cryptographic operations</selectable>
                <selectable>invoke platform-provided DRBG services for its cryptographic
                  functionality</selectable>
                <selectable>invoke application-implemented DRBG services for its cryptographic
                  functionality</selectable>
              </selectables> . </title>
            <note role="application"> If the first selection is not chosen, then additional
              FCS_RBG_EXT.1 elements shall be included in the ST. In this requirement, cryptographic
              functionality includes all cryptographic key generation/derivation/agreement, IVs (for
              certain modes), as well as protocol-specific random values. </note>
            <aactivity>The evaluator shall inspect the application and its developer documentation
              to determine if the application needs random bit generation services. If so, the
              evaluator shall determine how the application acquires random bits. </aactivity>
          </f-element>
          <f-element id="fcs_rbg_ext.1.2" status="sel-based">
            <selection-depends req="fcs_rbg_ext.1.1"/>
            <title> The application shall invoke a mechanism recommended by the operating system
              vendor for requesting data from the platform's DRBG. </title>
            <aactivity> The evaluator shall ensure that random bits are acquired properly from the
              platform. This varies on a per-platform basis: <subaactivity platform="blackberry">
                The evaluator shall use static analysis to verify that Security Builder Crypto GSE
                library is used. </subaactivity>
              <subaactivity platform="android"> The evaluator shall use static analysis to verify
                that the application uses the <code>javax.crypto.KeyGenerator</code> class or the
                  <code>java.security.SecureRandom</code> class. </subaactivity>
              <subaactivity platform="windows">The evaluator shall use static analysis to verify
                that the BCryptGenRandom or CryptGenRandom <abbr linkend="API"/> is used for classic
                desktop applications. The evaluator shall use static analysis to verify that the
                System.Random <abbr linkend="API"/> is used for Windows Store Applications. In
                future versions of this document, CryptGenRandom may be removed as an option as it
                no longer the preferred API per vendor documentation. </subaactivity>
              <subaactivity platform="ios"> The evaluator shall use static analysis to verify that
                the iOS Randomization Services <abbr linked="API"/> is used. </subaactivity>
              <subaactivity platform="selinux"> The evaluator shall use static analysis to verify
                that /dev/random or /dev/urandom is used. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
          <f-element id="fcs_rbg_ext.1.3" status="sel-based">
            <selection-depends req="fcs_rbg_ext.1.1"/>
            <title> The application shall perform all deterministic random bit generation (DRBG)
              services in accordance with <selectables atleastone="yes" linebreak="yes">
                <selectable>NIST Special Publication 800-90A using <selectables linebreak="yes">
                    <selectable>Hash_DRBG (any)</selectable>
                    <selectable>HMAC_DRBG (any)</selectable>
                    <selectable>CTR_DRBG (AES)</selectable>
                  </selectables>
                </selectable>
                <selectable>FIPS Pub 140-2 Annex C: X9.31 Appendix 2.4 using AES</selectable>
              </selectables>
            </title>
            <note role="application"> This requirement shall be included in STs in which “perform
              DRBG services” is chosen in FCS_RBG_EXT.1.1. The ST author shall select the standard
              to which the RBG services comply (either 800-90A or 140-2 Annex C). The ST author will
              select the function used (if 800-90A is selected), and include the specific underlying
              cryptographic primitives used in the requirement or in the TSS. While any of the
              identified hash functions (SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512) are allowed
              for Hash_DRBG or HMAC_DRBG, only AES-based implementations for CTR_DRBG are allowed.
              If the key length for the AES implementation used here is different than that used to
              encrypt the user data, then FCS_COP.1 may have to be adjusted or iterated to reflect
              the different key length. The ST author also ensures that any underlying functions are
              included in the baseline requirements in the ST (if these are implemented by the
              platform, then the appropriate selections are made as well). Note that for FIPS Pub
              140-2 Annex C, currently only the method described in NIST-Recommended Random Number
              Generator Based on ANSI X9.31 Appendix A.2.4 “Using the 3-Key Triple DES and AES
              Algorithms”, Section 3 is valid. Use of the ANSI X9.31 DRBG (defined in FIPS 140-2) is
              disallowed after 2015 per NIST SP 800-131A. The PP will be updated to reflect this;
              however, developers should begin transitioning from this DRBG as soon as possible. </note>
            <aactivity>The evaluator shall review documentation provided by the application
              developer explaining how the application gathers random. </aactivity>
          </f-element>
          <f-element id="fcs_rbg_ext.1.4" status="sel-based">
            <selection-depends req="fcs_rbg_ext.1.1"/>
            <title> The deterministic RBG shall be seeded by an entropy source that accumulates
              entropy from a platform-based DRBG and <selectables linebreak="yes">
                <selectable>a software-based noise source</selectable>
                <selectable>no other noise source</selectable>
              </selectables> with a minimum of <selectables linebreak="yes">
                <selectable>128 bits</selectable>
                <selectable>256 bits</selectable>
              </selectables> of entropy at least equal to the greatest security strength (according
              to NIST SP 800-57) of the keys and hashes that it will generate. </title>
            <note role="application"> This requirement shall be included in STs in which “perform
              DRBG services” is chosen in FCS_RBG_EXT.1.1. The application must use a platform-based
              DRBG to seed its DRBG; for the first selection, the ST author indicates whether the
              additional sources of entropy are used as seed for the DRBG. If there are multiple
              sources of entropy, the ST will describe each entropy source. The platform-based DRBG
              is the output of a DRBG provided by the platform, which is used as an entropy source
              for a TSF-provided DRBG defined in FCS_RBG_EXT.1.3. For the second selection in
              FCS_RBG_EXT.1.4, the ST author selects the appropriate number of bits of entropy used
              to seed the DRBG and that corresponds to the greatest security strength of the
              algorithms included in the ST. Security strength is defined in Tables 2 and 3 of NIST
              SP 800-57A. NIST Special Pub 800-90B, Appendix C describes the minimum entropy
              measurement that should be used immediately and will be required in future versions of
              this PP. </note>
            <aactivity>The evaluator shall review documentation provided by the application developer
              explaining how the application gathers random. </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_cop_ext.1" name="Cryptographic Hashing and Signing">
          <f-element id="fcs_cop_ext.1.1">
            <title>The application shall <selectables linebreak="yes">
                <selectable>perform no cryptographic hashing and signing</selectable>
                <selectable>invoke platform-provided cryptographic hashing and signing</selectable>
                <selectable>invoke application-implemented cryptographic hashing and
                  signing</selectable>
              </selectables> for cryptographic hashing and signing. </title>
            <note role="application">The evaluator should ensure "invoke platform-provided" is
              selected in cases where the application uses platform APIs to perform cryptographic
              hashing and signing. If the "invoke application-implemented" selection is chosen, then
              additional requirements from FCS_COP_EXT.1.2 and FCS_COP.1.3 elements shall be
              included in the ST. </note>
            <aactivity>Requirement met by the platform: The evaluator shall examine the TSS of the
              application to verify that it describes how the platforms digital signature
              functionality is invoked for each operation they are used for in the application. The
              evaluator shall also examine the TSS of the application product’s ST to verify that it
              describes how the platforms hash functionality is invoked for each digest size
              selected in the application product’s ST. </aactivity>
          </f-element>
          <f-element id="fcs_cop_ext.1.2" status="sel-based">
            <selection-depends req="fcs_cop_ext.1.1"/>
            <title>The application shall perform cryptographic signature services (generation and
              verification) in accordance with a specified cryptographic algorithm <selectables
                linebreak="yes">
                <selectable>FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section 4 for RSA
                  schemes</selectable>
                <selectable>FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section 5 for ECDSA
                  schemes and implementing "NIST curves" <selectables linebreak="yes">
                    <selectable>P-256</selectable>
                    <selectable>P-384</selectable>
                    <selectable>P-521</selectable>
                  </selectables>
                </selectable>
              </selectables> and cryptographic key sizes equivalent to, or greater than, a symmetric
              key strength of 112 bits </title>
            <aactivity>The evaluator shall perform the following activities based on the selections
              in the ST. <testlist>
                <test>ECDSA Algorithm Tests CDSA FIPS 186-4 Signature Generation Test For each
                  supported NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the
                  evaluator shall generate 10 1024-bit long messages and obtain for each message a
                  public key and the resulting signature values R and S. To determine correctness,
                  the evaluator SHALL use the signature verification function of a known good
                  implementation. ECDSA FIPS 186-4 Signature Verification Test For each supported
                  NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the evaluator
                  shall generate a set of 10 1024-bit message, public key and signature tuples and
                  modify one of the values (message, public key or signature) in five of the 10
                  tuples. The evaluator shall obtain in response a set of 10 PASS/FAIL values. </test>
                <test>RSA Signature Algorithm Tests Signature Generation Test The evaluator shall
                  verify the implementation of RSA Signature Generation by the TOE using the
                  Signature Generation Test. To conduct this test the evaluator must generate or
                  obtain 10 messages from a trusted reference implementation for each modulus
                  size/SHA combination supported by the TSF. The evaluator shall have the TOE use
                  their private key and modulus value to sign these messages. The evaluator shall
                  verify the correctness of the TSF’s signature using a known good implementation
                  and the associated public keys to verify the signatures. Signature Verification
                  Test The evaluator shall perform the Signature Verification test to verify the
                  ability of the TOE to recognize another party’s valid and invalid signatures. The
                  evaluator shall inject errors into the test vectors produced during the Signature
                  Verification Test by introducing errors in some of the public keys e, messages, IR
                  format, and/or signatures. The TOE attempts to verify the signatures and returns
                  success or failure. </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_cop_ext.1.3" status="sel-based">
            <selection-depends req="fcs_cop_ext.1.1"/>
            <title>The application shall perform cryptographic hashing services in accordance with a
              specified cryptographic algorithm <selectables linebreak="yes">
                <selectable>SHA-1</selectable>
                <selectable>SHA-256</selectable>
                <selectable>SHA-384</selectable>
                <selectable>SHA-512</selectable>
              </selectables> and message digest sizes <selectables linebreak="yes">
                <selectable>160</selectable>
                <selectable>256</selectable>
                <selectable>384</selectable>
                <selectable>512</selectable>
              </selectables> bits that meet the following: FIPS Pub 180-4, “Secure Hash Standard.” </title>
            <note role="application">In future versions of this document, SHA-1 may be removed as an
              option. SHA-1 for generating digital signatures will no longer be allowed after
              December 2013, and SHA-1 for verification of digital signatures is strongly
              discouraged as there may be risk in accepting these signatures. The selection of the
              hashing algorithm must correspond to the selection of the message digest size; for
              example, if SHA-1 is chosen, then the only valid message digest size selection would
              be 160 bits. </note>
            <aactivity>The TSF hashing functions can be implemented in one of two modes. The first
              mode is the byte¬oriented mode. In this mode the TSF only hashes messages that are an
              integral number of bytes in length; i.e., the length (in bits) of the message to be
              hashed is divisible by 8. The second mode is the bit¬oriented mode. In this mode the
              TSF hashes messages of arbitrary length. As there are different tests for each mode,
              an indication is given in the following sections for the bit¬oriented vs. the
              byte¬oriented testmacs.The evaluator shall perform all of the following tests for each
              hash algorithm implemented by the TSF and used to satisfy the requirements of this PP. <testlist>
                <test>Short Messages Test - Bit oriented Mode The evaluators devise an input set
                  consisting of m+1 messages, where m is the block length of the hash algorithm. The
                  length of the messages range sequentially from 0 to m bits. The message text shall
                  be pseudorandomly generated. The evaluators compute the message digest for each of
                  the messages and ensure that the correct result is produced when the messages are
                  provided to the TSF. </test>
                <test>Short Messages Test - Byte oriented Mode The evaluators devise an input set
                  consisting of m/8+1 messages, where m is the block length of the hash algorithm.
                  The length of the messages range sequentially from 0 to m/8 bytes, with each
                  message being an integral number of bytes. The message text shall be
                  pseudorandomly generated. The evaluators compute the message digest for each of
                  the messages and ensure that the correct result is produced when the messages are
                  provided to the TSF. </test>
                <test>Selected Long Messages Test - Bit oriented Mode The evaluators devise an input
                  set consisting of m messages, where m is the block length of the hash algorithm.
                  The length of the ith message is 512 + 99*i, where 1 ≤ i ≤ m. The message text
                  shall be pseudorandomly generated. The evaluators compute the message digest for
                  each of the messages and ensure that the correct result is produced when the
                  messages are provided to the TSF. </test>
                <test>Selected Long Messages Test - Byte oriented Mode The evaluators devise an
                  input set consisting of m/8 messages, where m is the block length of the hash
                  algorithm. The length of the ith message is 512 + 8*99*i, where 1 ≤ i ≤ m/8. The
                  message text shall be pseudorandomly generated. The evaluators compute the message
                  digest for each of the messages and ensure that the correct result is produced
                  when the messages are provided to the TSF. </test>
                <test>Pseudorandomly Generated Messages Test This test is for byte¬oriented
                  implementations only. The evaluators randomly generate a seed that is n bits long,
                  where n is the length of the message digest produced by the hash function to be
                  tested. The evaluators then formulate a set of 100 messages and associated digests
                  by following the algorithm provided in Figure 1 of [SHAVS]. The evaluators then
                  ensure that the correct result is produced when the messages are provided to the
                  TSF. </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component> <f-component id="fcs_sto_ext.1" name="Storage of Secrets">
          <f-element id="fcs_sto_ext.1.1">
            <title>The application shall invoke the mechanisms provided by the platform for any
              storage of credentials.</title>
            <note role="application">This includes items such as PKI private keys and passwords. </note>
            <aactivity>The evaluator must identify any credentials used by the application and then
              verify that these are stored using the mechanisms recommended by the operating system
              vendor. The method of doing so varies per platform. <subaactivity
                platform="blackberry"/>
              <subaactivity platform="android">The evaluator shall verify that all keys are stored
                within a keystore using Android's <code>KeyStore</code> class. </subaactivity>
              <subaactivity platform="windows">The evaluator shall verify that all certificates are
                stored in the Windows Certificate Store. The evaluator shall verify that other
                secrets, like passwords, are stored in the Windows Credential Manager also referred
                to as the Windows Vault. </subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that all keys are stored
                within a <code>KeyChain</code>. </subaactivity>
              <subaactivity platform="selinux"> TBD. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
            <refs>
              <ref sect="SC-12"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
        </f-component> <f-component id="fcs_tls_ext.1" name="TLS Implementation" status="sel-based">
          <f-element id="fcs_tls_ext.1.1" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title> The application shall <selectables linebreak="yes">
                <selectable>use the platform TLS</selectable>
                <selectable>implement <abbr title="Transport Layer Security">TLS</abbr> 1.2 (RFC
                  5246)</selectable>
              </selectables> supporting the following ciphersuites: <p/>Mandatory Ciphersuites:
              TLS_RSA_WITH_AES_128_CBC_SHA as defined in RFC 3268 and <p/>Optional Ciphersuites:
                <selectables linebreak="yes">
                <selectable>None</selectable>
                <selectable>TLS_RSA_WITH_AES_256_CBC_SHA as defined in RFC 3268</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA as defined in RFC 3268</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA as defined in RFC 3268</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_RSA_WITH_AES_256_CBC_ SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_ SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_ SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as defined in RFC
                  5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as defined in RFC
                  5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as defined in RFC
                  5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as defined in RFC
                  5289</selectable>
                <selectable>no other ciphersuite</selectable>
              </selectables>
            </title>
            <note role="application">The ciphersuites to be tested in the evaluated configuration
              are limited by this requirement. The ST author should select the optional ciphersuites
              that are supported; if there are no ciphersuites supported other than the mandatory
              suites, then “None” should be selected. It is necessary to limit the ciphersuites that
              can be used in an evaluated configuration administratively on the server in the test
              environment. The Suite B algorithms listed above (RFC 6460) are the preferred
              algorithms for implementation. TLS_RSA_WITH_AES_128_CBC_SHA is required in order to
              ensure compliance with RFC 5246. These requirements will be revisited as new TLS
              versions are standardized by the IETF. </note>
            <aactivity>The evaluator shall check the description of the implementation of this
              protocol in the <abbr linkend="TSS"/> to ensure that the ciphersuites supported are
              specified. The evaluator shall check the TSS to ensure that the ciphersuites specified
              include those listed for this component. The evaluator shall also check the
              operational guidance to ensure that it contains instructions on configuring the TOE so
              that TLS conforms to the description in the TSS. The evaluator shall also perform the
              following tests: <testlist>
                <test>The evaluator shall establish a TLS connection using each of the ciphersuites
                  specified by the requirement. This connection may be established as part of the
                  establishment of a higher-level protocol, e.g., as part of an EAP session. It is
                  sufficient to observe the successful negotiation of a ciphersuite to satisfy the
                  intent of the test; it is not necessary to examine the characteristics of the
                  encrypted traffic in an attempt to discern the ciphersuite being used (for
                  example, that the cryptographic algorithm is 128-bit AES and not 256-bit
                  AES).</test>
                <test>The evaluator shall attempt to establish the connection to a peer that presents a
                  certificate that contains the Authentication (either client or server as appropriate) purpose in the
                  extendedKeyUsage field and verify that a connection is established. The evaluator
                  will then verify that the application rejects an otherwise valid certificate
                  that lacks the appropriate Authentication purpose in the extendedKeyUsage field and a
                  connection is not established. Ideally, the two certificates should be identical
                  except for the extendedKeyUsage field.</test>
                <test>The test entity shall send a certificate in the TLS connection that the
                  does not match the selected ciphersuite (for example, send a ECDSA
                  certificate while using the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite or send a RSA
                  certificate while using one of the ECDSA ciphersuites.) The evaluator shall verify
                  that the application disconnects after receiving the Certificate handshake
                  message.</test>
                <test>The evaluator shall configure the test entity to select the TLS_NULL_WITH_NULL_NULL
                  ciphersuite and verify that the application denies the connection.</test>
                <test>The evaluator shall setup a man-in-the-middle tool between the application and the
                  test entity and shall perform the following modifications to the
                  traffic: <ul>
                    <li>Change the TLS version selected by the test peer in the Hello sent to the application to a
                      non-supported TLS version (for example 1.3 represented by the two bytes 03 04)
                      and verify that the application rejects the connection.</li>
                    <li>Modify at least one byte in the nonce sent to the application in the Hello handshake
                      message, and verify that the application rejects the Key Exchange handshake
                      message (if using a DHE or ECDHE ciphersuite).</li>
                    <li>Modify the selected ciphersuite in the Hello handshake
                      message sent to the application to be a ciphersuite not presented in the application's Hello handshake
                      message. The evaluator shall verify that the application rejects the connection.</li>
                    <li>Modify the signature block in the Key Exchange handshake message sent to the application,
                      and verify that the application rejects the connection after receiving the
                      Key Exchange message.</li>
                    <li>Modify a byte in the Finished handshake message sent to the application, and verify that the
                      application sends a fatal alert upon receipt and does not send any application
                      data.</li>
                    <li>Send an unencrypted packet to the application after the the
                      ChangeCipherSpec message has been sent and verify that the application denies the
                      connection.</li>
                  </ul></test>
              </testlist></aactivity>
            <refs>
              <ref sect="SC-13"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs> </f-element>
          <f-element id="fcs_tls_ext.1.2" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall verify that the presented identifier matches the reference
              identifier according to RFC 6125</title>
            <note role="application">The rules for verification of identify are described in Section
              6 of RFC 6125. The reference identifier is established by the user (e.g. entering a
              URL into a web browser or clicking a link), by configuration (e.g. configuring the
              name of a mail server or authentication server), or by an application (e.g. a
              parameter of an API) depending on the application service. Based on a singular
              reference identifier’s source domain and application service type (e.g. HTTP, SIP,
              LDAP), the client establishes all reference identifiers which are acceptable, such as
              a Common Name for the Subject Name field of the certificate and a (case-insensitive)
              DNS name, URI name, and Service Name for the Subject Alternative Name field. The
              client then compares this list of all acceptable reference identifiers to the
              presented identifiers in the TLS peer's certificate. The preferred method for
              verification is the Subject Alternative Name using DNS names, URI names, or Service
              Names. Verification using the Common Name is required for the purposes of backwards
              compatibility. Additionally, support for use of IP addresses in the Subject Name or
              Subject Alternative name is discouraged as against best practices but may be
              implemented. Finally, the client should avoid constructing reference identifiers using
              wildcards. However, if the presented identifiers include wildcards, the application must
              follow the best practices regarding matching; these best practices are captured in the
              assurance activity.</note>
            <aactivity>The evaluator shall ensure that the <abbr linkend="TSS"/> describes the
              applications’s method of establishing all reference identifiers from the
              user/administrator/application-configured reference identifier, including which types
              of reference identifiers are supported (e.g Common Name, DNS Name, URI Name, Service
              Name, or other application-specific Subject Alternative Names) and whether IP
              addresses and wildcards are supported. The evaluator shall ensure that this
              description identifies whether and the manner in which certificate pinning is
              supported or used by the TOE. The evaluator shall verify that the AGD guidance
              includes instructions for setting the reference identifier to be used for the purposes
              of certificate validation in TLS. The evaluator shall configure the reference
              identifier according to the AGD guidance and perform the following tests during a TLS
              connection: <testlist>
                <test>The evaluator shall present a certificate that does not contain an
                  identifier in either the Subject Alternative Name (SAN) or Common Name (CN) that
                  matches the reference identifier. The evaluator shall verify that the connection
                  fails. </test>
                <test>The evaluator shall present a certificate that contains a CN that
                  matches the reference identifier, contains the SAN extension, but does not contain
                  an identifier in the SAN that matches the reference identifier. The evaluator
                  shall verify that the connection fails. The evaluator shall repeat this test for
                  each supported SAN type.</test>
                <test>The evaluator shall present a certificate that contains a CN that
                  matches the reference identifier and does not contains the SAN extension. The
                  evaluator shall verify that the connection succeeds.</test>
                <test>The evaluator shall present a certificate that contains a CN that does
                  not match the reference identifier but does contain an identifier in the SAN that
                  matches. The evaluator shall verify that the connection succeeds.</test>
                <test>The evaluator shall perform the following wildcard tests with each supported
                  type of reference identifier: <ul>
                    <li>The evaluator shall present a certificate containing a wildcard that
                      is not in the left-most label of the presented identifier (e.g.
                      foo.*.example.com) and verify that the connection fails.</li>
                    <li>The evaluator shall present a certificate containing a wildcard in
                      the left-most label (e.g. *.example.com). The evaluator shall configure the
                      reference identifier with a single left-most label (e.g. foo.example.com) and
                      verify that the connection succeeds. The evaluator shall configure the
                      reference identifier without a left-most label as in the certificate (e.g.
                      example.com) and verify that the connection fails. The evaluator shall
                      configure the reference identifier with two left-most labels (e.g.
                      bar.foo.example.come) and verify that the connection fails.</li>
                  </ul></test>
                <test>[conditional] If URI or Service name reference identifiers are supported, the
                  evaluator shall configure the DNS name and the service identifier. The evaluator
                  shall present a certificate containing the correct DNS name and service
                  identifier in the URIName or SRVName fields of the SAN and verify that the
                  connection succeeds. The evaluator shall repeat this test with the wrong service
                  identifier (but correct DNS name) and verify that the connection fails</test>
                <test>[conditional] If pinned certificates are supported the evaluator shall present
                  a certificate that does not match the pinned certificate and verify that the
                  connection fails.</test>
              </testlist></aactivity>
          </f-element>
          <f-element id="fcs_tls_ext.1.3" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall only establish trusted channels with peers that present
              valid certificates.</title>
            <note role="application">Validity is determined by the identifier verification,
              certificate path, the expiration date, and the revocation status in accordance with
              RFC 5280. For TLS connections, this channel shall not be established if the peer
              certificate is invalid.</note>
            <aactivity> The evaluator shall perform the following test: <testlist>
                <test>The evaluator shall demonstrate that using a certificate without a valid
                  certification path results in the function failing. Using the administrative
                  guidance, the evaluator shall then load a certificate or certificates needed to
                  validate the certificate to be used in the function, and demonstrate that the
                  function succeeds. The evaluator then shall delete one of the certificates, and
                  show that the function fails. </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_dtls_ext.1" name="DTLS Implementation" status="sel-based">
          <f-element id="fcs_dtls_ext.1.1" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall implement the DTLS protocol in accordance with one or more
              of <selectables atleastone="yes" linebreak="yes">
                <selectable>DTLS 1.0 (RFC 4347)</selectable>
                <selectable>DTLS 1.2 (RFC 6347)</selectable>
              </selectables>
            </title>
            <note role="application">Differences between DTLS and TLS are outlined in RFC 4347 and
              RFC 6347; otherwise the protocols are the same. In particular, for the applicable
              security characteristics defined for the TSF, the two protocols do not differ.
              Therefore, all application notes and assurance activities that are listed for TLS
              apply to the DTLS implementation. </note>
            <aactivity>The evaluator shall perform the assurance activities listed for TLS to verify
              this component</aactivity>
          </f-element>
          <f-element id="fcs_dtls_ext.1.2" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall implement the requirements in TLS (FCS_TLS_EXT.1.2) for the
              DTLS implementation, except where variations are allowed according to <selectables
                atleastone="yes" linebreak="yes">
                <selectable>DTLS 1.0 (RFC 4347)</selectable>
                <selectable>DTLS 1.2 (RFC 6347)</selectable>
              </selectables>
            </title>
            <aactivity>The evaluator shall perform the assurance activities listed for TLS to verify
              this component</aactivity>
          </f-element>
        </f-component>
      </subsection>
      <!--  
       We may handle this in a different way
  -->
      <subsection title="Privacy (FPR)" id="fpr">
        <f-component id="fpr_ano_ext.1" name="Use of Advertising Networks">
          <f-element id="fpr_ano_ext.1.1">
            <title> The application shall use <selectables linebreaks="yes">
                <selectable>no ad networks</selectable>
                <selectable>[assignment: list of ad networks]</selectable>
              </selectables>. </title>
            <note role="application"> The intention of this requirement is for the evaluator to
              discover and document whether the application is including in-app adware that could
              present a threat to the user's privacy (or worse). </note>
            <aactivity> The evaluator shall run the application, inspect any documentation, perform
              static analysis, and also conduct network traffic analysis to determine if any ad
              networks are used by the application. If any ad networks are used, the evaluator shall
              search public sources to confirm that these are considered reputable. </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Trusted Path/Channel (FTP)" id="ftp">
        <f-component id="ftp_dit_ext.1" name="Protection of Data in Transit">
          <f-element id="ftp_dit_ext.1.1">
            <title>The application shall use <selectables atleastone="yes">
                <selectable><abbr title="Transport Layer Security">TLS</abbr></selectable>
                <selectable><abbr title="Datagram Transport Layer Security">DTLS</abbr></selectable>
                <selectable>Protocol from an Extended Package</selectable>
              </selectables>to provide a communication channel to protect <selectables>
                <selectable>all data</selectable>
                <selectable>all sensitive data</selectable>
              </selectables>transmitted between itself and another trusted <abbr
                title="information technology">IT</abbr> product.</title>
              <note role="application"> For the purpose of this documents HTTPS is considered a
              TLS tunnel.</note>  
            <aactivity>The evaluator shall prepare a test environment which makes it possible to
              sniff network traffic between the platform and any remote systems. The evaluator shall
              install and run the application, and exercise its functionality. The evaluator shall
              ensure that transmitted data is protected as indicated in the selections.</aactivity>
            <refs>
              <ref sect="SC-8"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Protection of the TSF (FPT)" id="fpt">
        <f-component id="fpt_rob_ext.1" name="Robustness">
          <f-element id="fpt_rob_ext.1.1">
            <title>The application shall exhibit robustness under normal usage.</title>
            <aactivity>The evaluator shall run the application and mimic normal usage, exercising as
              much functionality as possible and verify that the application does not
              crash.</aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_api_ext.1" name="Use of Supported Services and APIs">
          <!-- TO DO: Hyperlink URLs. -->
          <f-element id="fpt_api_ext.1.1" status="objective">
            <title> The application shall use platform-provided libraries for parsing any structured
              files whose format is included in the IANA MIME media types as listed at
              http://www.iana.org/assignments/media-types, unless parsing services is the purpose of
              the application.</title>
            <note role="application"> This includes many image, audio, video, and content file
              formats. </note>
            <aactivity>The evaluator shall ensure that the developer documentation specifies which
              structured file formats are parsed by the application, and which libraries are used to
              parse them. The evaluator shall verify that the libraries documented are provided by
              the platform.</aactivity>
          </f-element>
          <f-element id="fpt_api_ext.1.2">
            <title>The application shall not use any unsupported platform <abbr linkend="API"
              />s.</title>
            <aactivity>The developer must provide a list of platform API functions used by the
              application. (This list can be generated by tools such as the linker during the
              software build, or by software analysis tools.) The evaluator shall then compare the
              developer-supplied list with the operating system documentation.</aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_aex_ext.1" name="Anti-Exploitation Capabilities">
          <f-element id="fpt_aex_ext.1.1">
            <title> The application shall not request any memory mapping at an explicit address.
                <note role="application"> Requesting a memory mapping at an explicit address
                subverts address space layout randomization (<abbr linkend="ASLR"/>). </note>
            </title>
            <aactivity> The evaluator shall ensure that the <abbr linkend="TSS"/> section of the ST
              describes the compiler flags used to enable <addr linkend="ASLR"/> in the application.
              The evaluator shall perform either a static or dynamic analysis to determine that no
              memory mappings are placed at an explicit and consistent address. The method of doing
              so varies per platform. <subaactivity platform="blackberry"> The evaluator shall run
                the same application on two different BlackBerry systems and run a tool that will
                list all memory mapped addresses for the application. The evaluator shall then
                verify the two different instances share no mapping locations. </subaactivity>
              <subaactivity platform="android">The evaluator shall run the same application on two
                different Android systems. Connect via ADB and inspect /proc/PID/maps. Ensure the
                two different instances share no mapping locations.</subaactivity>
              <subaactivity platform="windows"> The evaluator shall run the same application on two
                different Windows systems and run a tool that will list all memory mapped addresses
                for the application. The evaluator shall then verify the two different instances
                share no mapping locations. The Microsoft sysinternals tool, VMMap, could be used to
                view memory addresses of a running application. </subaactivity>
              <subaactivity platform="ios">The evaluator shall perform a static analysis to search
                for any mmap calls (or <abbr linkend="API"/> calls that call mmap), and ensure that
                no arguments are provided that request a mapping at a fixed address</subaactivity>
              <subaactivity platform="selinux"> The evaluator shall run the same application on two
                different Linux systems. The evaluator shall then compare their
                /proc/<i>PID</i>/maps to ensure the two different instances share no mapping
                locations. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
          <f-element id="fpt_aex_ext.1.2">
            <title>The application shall not allocate any memory region with both write and execute
              permissions. </title>
            <note role="application"> Requesting a memory mapping with both write and execute
              permissions subverts the platform protection provided by <abbr linkend="DEP"/>. The
              only exception for this requirement is applications which perform just-in-time
              compilation. </note>
            <aactivity>
              <subaactivity platform="blackberry"/>
              <subaactivity platform="android"> The evaluator shall perform static analysis on the
                application to verify that both <ul>
                  <li> mmap can never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </li>
                  <li> mprotect is never invoked</li>
                </ul> . </subaactivity>
              <subaactivity platform="windows"> The evaluator shall examine executable file headers
                to verify that platform supported DEP protections are enabled for the application. </subaactivity>
              <subaactivity platform="ios"> The evaluator shall perform static analysis on the
                application to verify that mprotect is never invoked with the PROT_EXEC permission. </subaactivity>
              <subaactivity platform="selinux"> The evaluator shall perform static analysis on the
                application to verify that both <ul>
                  <li> mmap can never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </li>
                  <li> mprotect is never invoked with the PROT_EXEC permission</li>
                </ul> . </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"> The evaluator shall perform static analysis on the
                application to verify that both <ul>
                  <li> mmap can never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </li>
                  <li> mprotect is never invoked with the PROT_EXEC permission</li>
                </ul> . </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall perform static analysis on the
                application to verify that mprotect is never invoked with the PROT_EXEC permission.
              </subaactivity>
            </aactivity>
          </f-element>
          <!--      <f-element id="fpt_aex_ext.1.3">
        <title>The application shall not implement its own dynamic memory allocation
        functionality, unless that functionality also includes corruption
        detection.</title>
      </f-element> 
       Note: We have no AA, nor much traction here - and hostility from "execution environment" vendors.
       Maybe this is best considered for a future version.
-->
          <f-element id="fpt_aex_ext.1.3">
            <title>The application shall be compatible with security features provided by the
              operating system vendor.</title>
            <note role="application">This requirement is designed to ensure that operating system
              features, or security enhancements provided by the operating system vendor, do not
              need to be disabled in order for the application to run.</note>
            <aactivity>The evaluator shall carry out one of the following tests, depending on the
              platform. <subaactivity platform="blackberry"> The evaluator shall ensure that the
                application can successfully run on the latest version of the BlackBerry OS using a
                restrictive IT policy pushed from a BlackBerry Enterprise Server (BES). The
                restrictive IT policy should be the settings from a DISA STIG if one exists,
                otherwise the policy should contain the most restrict settings possible. </subaactivity>
              <subaactivity platform="android"> The evaluator shall ensure that the application can
                run with SE for Android enabled and enforcing and that it can be run in a confined,
                non-permissive domain. </subaactivity>
              <subaactivity platform="windows">For both classic desktop and Windows Store
                applications, the evaluator shall configure the latest version of Microsoft's
                Enhanced Mitigation Experience Toolkit (EMET) to protect the application. The
                evaluator shall then run the application and exercise all operations of the
                application and verify that the application does not crash while protected by EMET. </subaactivity>
              <subaactivity platform="ios"> The evaluator shall ensure that the application can
                successfully run on the latest version of iOS. </subaactivity>
              <subaactivity platform="selinux"> The evaluator shall ensure that the application can
                run with SELinux enabled and enforcing and that it can be run in a confined,
                non-permissive domain. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
          <f-element id="fpt_aex_ext.1.4">
            <title>The application shall not write to directories that contain executable
              files.</title>
            <note role="application">If the application is specifically designed to produce
              executable files (such as a compiler), those files may be written to a specified
              directory from which execution is permitted.</note>
            <aactivity>The evaluator shall run the application and determine where all files are
              written. The evaluator shall determine whether the platform needs to execute files
              from that directory. This varies per platform: <subaactivity platform="blackberry">The
                evaluator shall consider the requirement met because the platform forces
                applications to write all data within the application working directory
                (sandbox).</subaactivity>
              <subaactivity platform="android"> The evaluator shall run the program, mimicking
                normal usage, and note where all files are written. The evaluator shall ensure that
                there are no executable files stored within the application's data directory. </subaactivity>
              <subaactivity platform="windows">For Windows Store Apps the evaluator shall consider
                the requirement met because the platform forces applications to write all data
                within the application working directory (sandbox). For Windows Desktop Applications
                the evaluator shall run the program, mimicking normal usage, and note where all
                files are written. The evaluator shall ensure that there are no executable files
                stored in the same directories to which the application wrote. </subaactivity>
              <subaactivity platform="ios">The evaluator shall consider the requirement met because
                the platform forces applications to write all data within the application working
                directory (sandbox).</subaactivity>
              <subaactivity platform="selinux"> The evaluator shall run the program, mimicking
                normal usage, and note where all files are written. The evaluator shall ensure that
                there are no executable files stored in the same directories to which the
                application wrote. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"> The evaluator shall run the program, mimicking normal
                usage, and note where all files are written. The evaluator shall ensure that there
                are no executable files stored in the same directories to which the application
                wrote. </subaactivity>
            </aactivity></f-element>
          <f-element id="fpt_aex_ext.1.5">
            <title>The application must be compiled with stack-based buffer overflow protection
              enabled.</title>
            <aactivity>The evaluator shall ensure that the <abbr linkend="TSS"/> section of the ST
              describes the compiler flag used to enable stack-based buffer overflow protection in
              the application. The evaluator shall perform a static analysis to verify that
              stack-based buffer overflow protection is present. The method of doing so varies per
              platform: <subaactivity platform="blackberry"> The evaluator shall ensure that the
                -fstack-protector-strong or -fstack-protector-all flags are used. The
                -fstack-protector-all flag is preferred but -fstack-protector-strong is acceptable. </subaactivity>
              <subaactivity platform="android"> Applications that are entirely Java run in the Java
                machine and do not need tradition stack protection. For applications using Java
                Native Interface (JNI), the evaluator shall ensure that the
                  <code>-fstack-protector-strong</code> or <code>-fstack-protector-all</code> flags
                are used. The <code>-fstack-protector-all</code> flag is preferred but
                  <code>-fstack-protector-strong</code> is acceptable. </subaactivity>
              <subaactivity platform="windows">The evaluator shall ensure that the <code>/GS</code>
                flag was used during compilation. </subaactivity>
              <subaactivity platform="ios"> </subaactivity>
              <subaactivity platform="selinux">If the application is compiled using GCC, the
                evaluator shall ensure that the <code>-fstack-protector-strong</code> or
                  <code>-fstack-protector-all</code> flags are used. The
                  <code>-fstack-protector-all</code> flag is preferred but
                  <code>-fstack-protector-strong</code> is acceptable. If the application is built
                using clang, it must be compiled and linked with the
                  <code>-fsanitizer=address</code> flag. </subaactivity>
              <subaactivity platform="z/OS"/>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
          <refs>
            <ref sect="SI-3 (7)"
              source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
          </refs>
        </f-component>
        <f-component id="fpt_tud_ext.1" name="Integrity for Installation and Update">
          <!-- TO DO: Cite references. -->
          <f-element id="fpt_tud_ext.1.1">
            <title>The application shall <selectables atleastone="yes">
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables> to query the current version of the application software. </title>
            <aactivity>The evaluator shall install the application and identify its
              version.</aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.2">
            <title>The application shall <selectables atleastone="yes">
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables> to initiate updates and patches to the application software. </title>
            <note role="application"> This requirement allows applications to "initiate" updates,
              but not "perform" updates---the platform is the only entity allowed to modify an
              application's code. </note>
            <aactivity>The evaluator shall verify that the application is updateable. </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.3">
            <title>The application installation and update packages shall be signed by the vendor in
              conformance with NIST SP 800-89, Recommendation for Obtaining Assurances for Digital
              Signature Applications, using an approved digital signature algorithm as specified in
              NIST FIPS 186-3, Digital Signature Standard, that provides at least 112 bits of
              security strength, in accordance with NIST SP 800-131A, Transitions: Recommendation
              for Transitioning the Use of Cryptographic Algorithms and Key Lengths.</title>
            <note role="application">Signatures of signed installation and update packages should be
              verified by the operating system's application installation mechanism. Since the
              existence of such a mechanism is a requirement on the operating system (and not the
              application), it is not specified here.</note>
            <aactivity>Developers must document their process for cryptographically signing updates
              and installation packages. The evaluator shall verify that the documentation conforms
              with the above requirement. The evaluator shall perform the following tests: <testlist>
                <test>The evaluator shall attempt to install an unsigned patch or update and shall
                  verify that installation fails. </test>
                <test>The evaluator shall sign a patch or update with an invalid certificate. The
                  evaluator shall attempt to install the patch or update and shall verify that
                  installation fails. </test>
                <test>The evaluator shall sign a patch or update with a certificate containing a
                  missing or invalid code signing entendedKeyUsage extension. The evaluator shall
                  attempt to install the patch or update and shall verify that installation fails. </test>
                <test>The evaluator shall attempt to install a signed patch or update and shall
                  verify that installation is successful and happens automatically after the
                  signature is verified. </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.4">
            <title>The application shall be distributed using the format of the platform-supported
              package manager. </title>
            <aactivity> The evaluator shall verify that application updates are distributed in the
              format supported by the platform. This varies per platform: <subaactivity
                platform="blackberry"> The evaluator shall ensure that the application is packaged
                in the Blackberry (BAR) format. </subaactivity>
              <subaactivity platform="android"> The evaluator shall ensure that the application is
                packaged in the Android application package (APK) format. </subaactivity>
              <subaactivity platform="windows"> The evaluator shall ensure that the application is
                packaged in the Standard Windows Installer (MSI) format or the Windows App Store
                package (APPX) format. </subaactivity>
              <subaactivity platform="ios"> The evaluator shall ensure that the application is
                packaged in the IPA format. </subaactivity>
              <subaactivity platform="selinux"> The evaluator shall ensure that the application is
                packaged in the format of the package management infrastructure of the chosen
                distribution. For example, applications running on Red Hat and Red Hat derivatives
                should be packaged in rpm format. Applications running on Debian and Debian
                derivatives should be packaged in deb format. </subaactivity>
              <subaactivity platform="z/OS"> The evaluator shall ensure that the application is
                packaged in the [?] format. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall ensure that the application is
                packaged in the PKG format. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall ensure that application is packaged
                in the IPA format, the PKG format, or the MPKG format. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.5">
            <title>The application shall be packaged such that its removal results in the removal of
              all traces of the application, with the exception of configuration settings, output
              files, and audit/log events.</title>
            <note role="application">Applications bundled with the system/firmware image are not
              subject to this requirement if the user is unable to remove the application through
              means provided by the OS.</note>
            <aactivity>The evaluator shall take a snap shot of the entire file system prior to
              installation of the application. Then install and run the application. The evaluator
              shall then uninstall the application and take another snap shot of the entire file
              system. The evaluator shall compare the two snap shots to verify that the only file
              system differences are configuration files, output files, or audit/log files.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.6">
            <title> The application shall not download, modify, replace or update its own binary
              code. </title>
            <note role="application">This requirement applies to the code of the application; it
              does not apply to mobile code technologies that are designed for download and
              execution by the application. </note>
            <aactivity>
              <testlist>
                <test>The evaluator shall run the application and exercise all operations of the
                  application while using a network monitoring tool to record network traffic. The
                  evaluator shall filter the traffic to show only traffic from the application being
                  evaluated and verify that no additional code is being delivered to the application
                  from any network connections made by the application. </test>
                <test>The evaluator shall hash all the executable binary files of the application,
                  then run the application and exercise all operations of the application. The
                  evaluator shall then hash all the executable binary files a second time and verify
                  that the hashes are identical to the first set of hashes taken. </test>
              </testlist>
            </aactivity>
            <refs>
              <ref sect="SC-18 (3)"
                source="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf"/>
            </refs>
          </f-element>
        </f-component>
        <f-component id="fpt_idv_ext.1" name="Software Identification and Versions">
          <f-element id="fpt_idv_ext.1.1" status="objective" targetdate="July 1, 2015">
            <title>The application shall include <abbr title="Software Identification">SWID</abbr>
              tags that comply with the ISO/IEC 19770-2:2009 standard.</title>
            <aactivity>The evaluator shall install the application, then check for the existence of
              SWID tags that comply with the ISO/IEC 19770-2:2009 standard.</aactivity>
          </f-element>
        </f-component>
      </subsection>
    </section>
    <section title="Security Assurance Requirements" id="SARs">The Security Objectives for the <abbr
        linkend="TOE"/> in <secref linkend="req"/> were constructed to address threats identified in
        <secref linkend="threats"/>. <abbr linkend="SFR"/>s in <secref linkend="SFRs"/> are a formal
      instantiation of the Security Objectives. The PP draws from <abbr
        title="Evaluation Assurance Level">EAL</abbr>1 the <abbr linkend="SAR"/>s) to frame the
      extent to which the evaluator assesses the documentation applicable for the evaluation and
      performs independent testing. <br/>While this section contains the complete set of SARs from
      the CC, the Assurance Activities to be performed by an evaluator are detailed in <secref
        linkend="SFRs"/> as well as in this section. The general model for evaluation of TOEs
      against STs written to conform to this PP is as follows: <br/>After the ST has been approved
      for evaluation, the <abbr class="expanded"
        title="Information Technology Security Evaluation Facility">ITSEF</abbr> will obtain the
      TOE, supporting environmental IT, and the administrative guides for the TOE. The Assurance
      Activities listed in the ST (which will be refined by the ITSEF to be TOE-specific, either
      within the ST or in a separate document) will then be performed by the ITSEF. The ITSEF is
      also expected to perform all of the actions mandated by the <cite linkend="bibCEM"/> for EAL1.
      The results of these activities will be documented and presented (along with the
      administrative guidance used) for validation. <br/>For each family, "Developer Notes" are
      provided on the developer action elements to clarify what, if any, additional
      documentation/activity needs to be provided by the developer. For the content/presentation and
      evaluator activity elements, additional assurance activities (to those already contained in
        <secref linkend="SFRs"/> and the CEM for EAL1) are described as a whole for the family
      rather than for each element. Additionally, the assurance activities described in this section
      are complementary to those specified in <secref linkend="SFRs"/>. <br/>The TOE security
      assurance requirements, summarized in the table below, identify the management and evaluative
      activities required to meet the objectives identified in <secref linkend="obj"/> of this PP. <!-- Generate a table here, based on the next sections -->
      <subsection title="Class ASE: Security Target" id="ase">As per ASE activities defined in <cite
          linkend="bibCEM"/>.</subsection>
      <subsection title="Class ADV: Development" id="adv">The information about the <abbr
          linkend="TOE"/> is contained in the guidance documentation available to the end user as
        well as the <abbr linkend="TSS"/> portion of the ST. The TOE developer must concur with the
        description of the product that is contained in the TSS as it relates to the functional
        requirements. The Assurance Activities contained in <secref linkend="SFRs"/> should provide
        the ST authors with sufficient information to determine the appropriate content for the TSS
        section. <a-component id="adv_upd_ext.1" name="Support for Updates (ADV_UPD_EXT.1)">
          <a-element id="adv_upd_ext.1.1">
            <title>Application developers must support updates to their products for purposes of
              fixing security vulnerabilities.</title>
          </a-element>
          <a-element id="adv_upd_ext.1.2">
            <title>Application update must not change the security properties or configuration of
              the product without notifying the user of the specific changes.</title>
          </a-element>
          <a-element id="adv_upd_ext.1.3">
            <title>Application developers must commit to supporting their applications with updates
              for a publicly documented period of time.</title>
          </a-element>
        </a-component>
        <a-component id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)">The functional
          specification describes the <abbr title="TSF Interface">TSFI</abbr>s. It is not necessary
          to have a formal or complete specification of these interfaces. Additionally, because
            <abbr linkend="TOE"/>s conforming to this PP will necessarily have interfaces to the
          Operational Environment that are not directly invokable by TOE users, there is little
          point specifying that such interfaces be described in and of themselves since only
          indirect testing of such interfaces may be possible. For this PP, the activities for this
          family should focus on understanding the interfaces presented in the <abbr linkend="TSS"/>
          in response to the functional requirements and the interfaces presented in the AGD
          documentation. No additional “functional specification” documentation is necessary to
          satisfy the assurance activities specified. The interfaces that need to be evaluated are
          characterized through the information needed to perform the assurance activities listed,
          rather than as an independent, abstract list. <h4>Developer action elements:</h4>
          <a-element id="ADV_FSP.1.1D">
            <title>The developer shall provide a functional specification.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2D">
            <title>The developer shall provide a tracing from the functional specification to the
              SFRs.</title>
            <note role="application">As indicated in the introduction to this section, the
              functional specification is comprised of the information contained in the AGD_OPE and
              AGD_PRE documentation. The developer may reference a website accessible to application
              developers and the evaluator. The assurance activities in the functional requirements
              point to evidence that should exist in the documentation and <abbr linkend="TSS"/>
              section; since these are directly associated with the SFRs, the tracing in element
              ADV_FSP.1.2D is implicitly already done and no additional documentation is
              necessary.</note>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="ADV_FSP.1.1C">
            <title>The functional specification shall describe the purpose and method of use for
              each SFR-enforcing and SFR-supporting <abbr title="TSF Interface">TSFI</abbr>.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2C">
            <title>The functional specification shall identify all parameters associated with each
              SFR-enforcing and SFR-supporting <abbr title="TSF Interface">TSFI</abbr>.</title>
          </a-element>
          <a-element id="ADV_FSP.1.3C">
            <title>The functional specification shall provide rationale for the implicit
              categorization of interfaces as SFR-non-interfering.</title>
          </a-element>
          <a-element id="ADV_FSP.1.4C">
            <title>The tracing shall demonstrate that the SFRs trace to <abbr title="TSF Interface"
                >TSFI</abbr>s in the functional specification.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="ADV_FSP.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2E">
            <title>The evaluator shall determine that the functional specification is an accurate
              and complete instantiation of the SFRs.</title>
          </a-element>
          <aactivity>There are no specific assurance activities associated with these SARs, except
            ensuring the information is provided. The functional specification documentation is
            provided to support the evaluation activities described in <secref linkend="SFRs"/>, and
            other activities described for AGD, ATE, and AVA SARs. The requirements on the content
            of the functional specification information is implicitly assessed by virtue of the
            other assurance activities being performed; if the evaluator is unable to perform an
            activity because the there is insufficient interface information, then an adequate
            functional specification has not been provided.</aactivity>
        </a-component>
      </subsection>
      <subsection id="agd" title="Class AGD: Guidance Documentation">The guidance documents will be
        provided with the ST. Guidance must include a description of how the IT personnel verifies
        that the Operational Environment can fulfill its role for the security functionality. The
        documentation should be in an informal style and readable by the IT personnel. Guidance must
        be provided for every operational environment that the product supports as claimed in the
        ST. This guidance includes Instructions to successfully install the <abbr linkend="TSF"/> in
        that environment; and Instructions to manage the security of the TSF as a product and as a
        component of the larger operational environment. Guidance pertaining to particular security
        functionality is also provided; requirements on such guidance are contained in the assurance
        activities specified with each requirement. <a-component id="agd_ope.1"
          name="Operational User Guidance (AGD_OPE.1)">
          <h4>Developer action elements:</h4>
          <a-element id="AGD_OPE.1.1D">
            <title>The developer shall provide operational user guidance.</title>
            <note role="application">The operation user guidance does not have to be contained in a
              single document. Guidance to users, administrators and application developers can be
              spread among documents or web pages. Where appropriate, the guidance documentation is
              expressed in the eXtensible Configuration Checklist Description Format (XCCDF) to
              support security automation. Rather than repeat information here, the developer should
              review the assurance activities for this component to ascertain the specifics of the
              guidance that the evaluator will be checking for. This will provide the necessary
              information for the preparation of acceptable guidance.</note>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="AGD_OPE.1.1C">
            <title>The operational user guidance shall describe, for each user role, the
              user-accessible functions and privileges that should be controlled in a secure
              processing environment, including appropriate warnings.</title>
            <note role="application">User and administrator are to be considered in the definition
              of user role.</note>
          </a-element>
          <a-element id="AGD_OPE.1.2C">
            <title>The operational user guidance shall describe, for each user role, how to use the
              available interfaces provided by the <abbr linkend="TOE"/> in a secure manner.</title>
          </a-element>
          <a-element id="AGD_OPE.1.3C">
            <title>The operational user guidance shall describe, for each user role, the available
              functions and interfaces, in particular all security parameters under the control of
              the user, indicating secure values as appropriate.</title>
          </a-element>
          <a-element id="AGD_OPE.1.4C">
            <title>The operational user guidance shall, for each user role, clearly present each
              type of security-relevant event relative to the user-accessible functions that need to
              be performed, including changing the security characteristics of entities under the
              control of the <abbr linkend="TSF"/>.</title>
          </a-element>
          <a-element id="AGD_OPE.1.5C">
            <title>The operational user guidance shall identify all possible modes of operation of
              the <abbr linkend="TOE"/> (including operation following failure or operational
              error), their consequences, and implications for maintaining secure operation.</title>
          </a-element>
          <a-element id="AGD_OPE.1.6C">
            <title>The operational user guidance shall, for each user role, describe the security
              measures to be followed in order to fulfill the security objectives for the
              operational environment as described in the ST.</title>
          </a-element>
          <a-element id="AGD_OPE.1.7C">
            <title>The operational user guidance shall be clear and reasonable.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="AGD_OPE.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            <aactivity>Some of the contents of the operational guidance will be verified by the
              assurance activities in <secref linkend="SFRs"/> and evaluation of the <abbr
                linkend="TOE"/> according to the <cite linkend="bibCEM"/>. The following additional
              information is also required. If cryptographic functions are provided by the TOE, the
              operational guidance shall contain instructions for configuring the cryptographic
              engine associated with the evaluated configuration of the TOE. It shall provide a
              warning to the administrator that use of other cryptographic engines was not evaluated
              nor tested during the CC evaluation of the TOE. The documentation must describe the
              process for verifying updates to the TOE by verifying a digital signature – this may
              be done by the TOE or the underlying platform. The evaluator shall verify that this
              process includes the following steps: Instructions for obtaining the update itself.
              This should include instructions for making the update accessible to the TOE (e.g.,
              placement in a specific directory). Instructions for initiating the update process, as
              well as discerning whether the process was successful or unsuccessful. This includes
              generation of the hash/digital signature. The TOE will likely contain security
              functionality that does not fall in the scope of evaluation under this PP. The
              operational guidance shall make it clear to an administrator which security
              functionality is covered by the evaluation activities.</aactivity>
          </a-element>
        </a-component>
        <a-component id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">
          <h4>Developer action elements:</h4>
          <a-element id="AGD_PRE.1.1D">
            <title>The developer shall provide the <abbr linkend="TOE"/>, including its preparative
              procedures.</title>
            <note role="application">As with the operational guidance, the developer should look to
              the assurance activities to determine the required content with respect to preparative
              procedures.</note>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="AGD_PRE.1.1C">
            <title>The preparative procedures shall describe all the steps necessary for secure
              acceptance of the delivered <abbr linkend="TOE"/> in accordance with the developer's
              delivery procedures.</title>
          </a-element>
          <a-element id="AGD_PRE.1.2C">
            <title>The preparative procedures shall describe all the steps necessary for secure
              installation of the <abbr linkend="TOE"/> and for the secure preparation of the
              operational environment in accordance with the security objectives for the operational
              environment as described in the ST.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="AGD_PRE.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="AGD_PRE.1.2E">
            <title>The evaluator shall apply the preparative procedures to confirm that the <abbr
                linkend="TOE"/> can be prepared securely for operation.</title>
            <aactivity>As indicated in the introduction above, there are significant expectations
              with respect to the documentation—especially when configuring the operational
              environment to support TOE functional requirements. The evaluator shall check to
              ensure that the guidance provided for the TOE adequately addresses all platforms
              claimed for the TOE in the ST.</aactivity>
          </a-element>
        </a-component>
      </subsection>
      <subsection id="alc" title="Class ALC: Life-cycle Support">
        <a-component id="alc_cmc.1" name="Labeling of the TOE (ALC_CMC.1)">This component is
          targeted at identifying the <abbr linkend="TOE"/> such that it can be distinguished from
          other products or versions from the same vendor and can be easily specified when being
          procured by an end user. <h4>Developer action elements:</h4>
          <a-element id="alc_cmc.1.1d">
            <title>The developer shall provide the <abbr linkend="TOE"/> and a reference for the
              TOE.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="alc_cmc.1.1c">
            <title>The <abbr linkend="TOE"/> shall be labeled with a unique reference.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="alc_cmc.1.1e">
            <title>The evaluator <i>shall confirm</i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator shall check the ST to ensure that it contains an identifier
              (such as a product name/version number) that specifically identifies the version that
              meets the requirements of the ST. Further, the evaluator shall check the AGD guidance
              and <abbr linkend="TOE"/> samples received for testing to ensure that the version
              number is consistent with that in the ST. If the vendor maintains a web site
              advertising the TOE, the evaluator shall examine the information on the web site to
              ensure that the information in the ST is sufficient to distinguish the
              product.</aactivity>
          </a-element>
        </a-component>
        <a-component id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">Given the scope of the <abbr
            linkend="TOE"/> and its associated evaluation evidence requirements, this component’s
          assurance activities are covered by the assurance activities listed for ALC_CMC.1.
            <h4>Developer action elements:</h4>
          <a-element id="alc_cms.1.1d">
            <title>The developer shall provide a configuration list for the <abbr linkend="TOE"
              />.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="alc_cms.1.1c">
            <title>The configuration list shall include the following: the <abbr linkend="TOE"/>
              itself; and the evaluation evidence required by the SARs.</title>
          </a-element>
          <a-element id="alc_cms.1.2c">
            <title>The configuration list shall uniquely identify the configuration items.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="alc_cms.1.1e">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            <aactivity>The "evaluation evidence required by the SARs" in this PP is limited to the
              information in the ST coupled with the guidance provided to administrators and users
              under the AGD requirements. By ensuring that the <abbr linkend="TOE"/> is specifically
              identified and that this identification is consistent in the ST and in the AGD
              guidance (as done in the assurance activity for ALC_CMC.1), the evaluator implicitly
              confirms the information required by this component. Life-cycle support is targeted
              aspects of the developer’s life-cycle and instructions to providers of applications
              for the developer’s devices, rather than an in-depth examination of the <abbr
                linkend="TSF"/> manufacturer’s development and configuration management process.
              This is not meant to diminish the critical role that a developer’s practices play in
              contributing to the overall trustworthiness of a product; rather, it’s a reflection on
              the information to be made available for evaluation. <br/> The evaluator shall ensure
              that the developer has identified (in guidance documentation for application
              developers concerning the targeted platform) one or more development environments
              appropriate for use in developing applications for the developer’s platform. For each
              of these development environments, the developer shall provide information on how to
              configure the environment to ensure that buffer overflow protection mechanisms in the
              environment(s) are invoked (e.g., compiler flags). The evaluator shall ensure that
              this documentation also includes an indication of whether such protections are on by
              default, or have to be specifically enabled. The evaluator shall ensure that the TSF
              is uniquely identified (with respect to other products from the TSF vendor), and that
              documentation provided by the developer in association with the requirements in the ST
              is associated with the TSF using this unique identification.</aactivity>
          </a-element>
        </a-component>
      </subsection>
      <subsection id="ate" title="Class ATE: Tests">Testing is specified for functional aspects of
        the system as well as aspects that take advantage of design or implementation weaknesses.
        The former is done through the ATE_IND family, while the latter is through the AVA_VAN
        family. At the assurance level specified in this PP, testing is based on advertised
        functionality and interfaces with dependency on the availability of design information. One
        of the primary outputs of the evaluation process is the test report as specified in the
        following requirements. <a-component id="ate_ind.1"
          name="Independent Testing – Conformance (ATE_IND.1)"> Testing is performed to confirm the
          functionality described in the <abbr linkend="TSS"/> as well as the administrative
          (including configuration and operational) documentation provided. The focus of the testing
          is to confirm that the requirements specified in <secref linkend="SFRs"/> being met,
          although some additional testing is specified for SARs in <secref linkend="SARs"/>. The
          Assurance Activities identify the additional testing activities associated with these
          components. The evaluator produces a test report documenting the plan for and results of
          testing, as well as coverage arguments focused on the platform/<abbr linkend="TOE"/>
          combinations that are claiming conformance to this PP. Given the scope of the TOE and its
          associated evaluation evidence requirements, this component’s assurance activities are
          covered by the assurance activities listed for ALC_CMC.1. <h4>Developer action
            elements:</h4>
          <a-element id="ate_ind.1.1d">
            <title>The developer shall provide the <abbr linkend="TOE"/> for testing.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="ate_ind.1.1c">
            <title>The configuration list shall include the following: the <abbr linkend="TOE"/>
              itself; and the evaluation evidence required by the SARs.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="ate_ind.1.1e">
            <title>The evaluator <i>shall confirm</i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
          </a-element>
          <a-element id="ate_ind.1.2e">
            <title>The evaluator <i>shall test</i> a subset of the <abbr linkend="TSF"/> to confirm
              that the <abbr linkend="TSF"/> operates as specified.</title>
            <note role="application">The evaluator shall test the application on the most current
              fully patched version of the platform.</note>
            <aactivity>The evaluator shall prepare a test plan and report documenting the testing
              aspects of the system. The test plan covers all of the testing actions contained in
              the <cite linkend="bibCEM"/> and the body of this PP’s Assurance Activities. While it
              is not necessary to have one test case per test listed in an Assurance Activity, the
              evaluator must document in the test plan that each applicable testing requirement in
              the ST is covered. The test plan identifies the platforms to be tested, and for those
              platforms not included in the test plan but included in the ST, the test plan provides
              a justification for not testing the platforms. This justification must address the
              differences between the tested platforms and the untested platforms, and make an
              argument that the differences do not affect the testing to be performed. It is not
              sufficient to merely assert that the differences have no affect; rationale must be
              provided. If all platforms claimed in the ST are tested, then no rationale is
              necessary. The test plan describes the composition of each platform to be tested, and
              any setup that is necessary beyond what is contained in the AGD documentation. It
              should be noted that the evaluator is expected to follow the AGD documentation for
              installation and setup of each platform either as part of a test or as a standard
              pre-test condition. This may include special test drivers or tools. For each driver or
              tool, an argument (not just an assertion) should be provided that the driver or tool
              will not adversely affect the performance of the functionality by the <abbr
                linkend="TOE"/> and its platform. This also includes the configuration of the
              cryptographic engine to be used. The cryptographic algorithms implemented by this
              engine are those specified by this PP and used by the cryptographic protocols being
              evaluated (IPsec, TLS/HTTPS, SSH). The test plan identifies high-level test objectives
              as well as the test procedures to be followed to achieve those objectives. These
              procedures include expected results. The test report (which could just be an annotated
              version of the test plan) details the activities that took place when the test
              procedures were executed, and includes the actual results of the tests. This shall be
              a cumulative account, so if there was a test run that resulted in a failure; a fix
              installed; and then a successful re-run of the test, the report would show a “fail”
              and “pass” result (and the supporting details), and not just the “pass”
              result.</aactivity>
          </a-element>
        </a-component>
      </subsection>
      <subsection id="ava" title="Class AVA: Vulnerability Assessment">For the first generation of
        this protection profile, the evaluation lab is expected to survey open sources to discover
        what vulnerabilities have been discovered in these types of products. In most cases, these
        vulnerabilities will require sophistication beyond that of a basic attacker. Until
        penetration tools are created and uniformly distributed to the evaluation labs, the
        evaluator will not be expected to test for these vulnerabilities in the <abbr linkend="TOE"
        />. The labs will be expected to comment on the likelihood of these vulnerabilities given
        the documentation provided by the vendor. This information will be used in the development
        of penetration testing tools and for the development of future protection profiles.
          <a-component id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">
          <h4>Developer action elements:</h4>
          <a-element id="AVA_VAN.1.1D">
            <title>The developer shall provide the <abbr linkend="TOE"/> for testing.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="AVA_VAN.1.1C">
            <title>The <abbr linkend="TOE"/> shall be suitable for testing.</title>
            <note role="application"> The application to be evaluated should not be obfuscated or
              packed in such a way as to disrupt analysis </note>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="AVA_VAN.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="AVA_VAN.1.2E">
            <title>The evaluator shall perform a search of public domain sources to identify
              potential vulnerabilities in the <abbr linkend="TOE"/>.</title>
          </a-element>
          <a-element id="AVA_VAN.1.3E">
            <title>The evaluator shall conduct penetration testing, based on the identified
              potential vulnerabilities, to determine that the <abbr linkend="TOE"/> is resistant to
              attacks performed by an attacker possessing Basic attack potential.</title>
            <aactivity>As with ATE_IND, the evaluator shall generate a report to document their
              findings with respect to this requirement. This report could physically be part of the
              overall test report mentioned in ATE_IND, or a separate document. The evaluator
              performs a search of public information to find vulnerabilities that have been found
              in similar applications with a particular focus on network protocols the application
              uses and document formats it parses. The evaluator documents the sources consulted and
              the vulnerabilities found in the report. For each vulnerability found, the evaluator
              either provides a rationale with respect to its non-applicability, or the evaluator
              formulates a test (using the guidelines provided in ATE_IND) to confirm the
              vulnerability, if suitable. Suitability is determined by assessing the attack vector
              needed to take advantage of the vulnerability. If exploiting the vulnerability
              requires expert skills and an electron microscope, for instance, then a test would not
              be suitable and an appropriate justification would be formulated.</aactivity>
          </a-element>
        </a-component>
      </subsection>
    </section>
  </chapter>

  <appendix title="NIST SP 800-53/CNSS 1253 Mapping" id="nistmapping"> The following table provides
    references to security controls from <abbr
      title="National Institute of Standards and Technology">NIST</abbr> Special Publication 800-53,
      <i>Security and Privacy Controls for Federal Information Systems and Organizations</i>. NIST
    800-53 is a "catalog of security and privacy controls for federal information systems and
    organizations and a process for selecting controls." The following table represents <i>all
      controls</i> selected as <i>applicable</i> to all types of applications. Additional controls
    which are applicable only to more-specialized types of applications are found in the appendices
    of the Protection Profiles for those particular types of applications. <br/> Appendix H of NIST
    SP 800-53 states "organizations can obtain significant benefit from the acquisition and
    employment of information technology products evaluated against the requirements of ISO/IEC
    15408. The use of such products can provide evidence that certain security controls are
    implemented correctly, operating as intended, and producing the desired effect in satisfying
    stated security requirements." The Protection Profile thus captures the applicable set of NIST
    controls and provides precise requirements for evaluation activites which provide assurance
    about their implementation. <InsertRefMapping/>
  </appendix>

  <appendix title="References" id="biblio">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation - <ul>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R4.pdf">Part
                1: Introduction and General Model</a>, CCMB-2012-09-001, Version 3.1 Revision 4,
              September 2012.</li>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R4.pdf">Part
                2: Security Functional Components</a>, CCMB-2012-09-002, Version 3.1 Revision 4,
              September 2012.</li>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part
                3: Security Assurance Components</a>, CCMB-2012-09-003, Version 3.1 Revision 4,
              September 2012.</li>
          </ul></description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>
          <a href="http://www.commoncriteriaportal.org/files/ccfiles/CEMV3.1R4.pdf">Common
            Evaluation Methodology for Information Technology Security - Evaluation Methodology</a>,
          CCMB-2012-09-004, Version 3.1, Revision 4, September 2012. </description>
      </entry>
      <entry id="bibCESG">
        <tag>CESG</tag>
        <description>CESG - <a
            href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End
            User Devices Security and Configuration Guidance</a></description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf"
            >Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
    </bibliography>
  </appendix>
</PP>
