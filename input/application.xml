<?xml version="1.0" encoding="utf-8"?>
<PP xmlns="http://common-criteria.rhcloud.com/ns/cc" name="Application Software">
  <PPReference title="PP Reference" id="ID003">
    <ReferenceTable>
      <PPTitle>Protection Profile for Application Software</PPTitle>
      <PPVersion>.8</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2014-09-12</PPPubDate>
      <PPCertificationID>NIAP-whoknows</PPCertificationID>
      <CCVersion>.01 Revision 0</CCVersion>
      <Keywords>application; software</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership</description>
      </entry>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>v .1</version>
      <date>2014-01-08</date>
      <subject>Initial draft commit</subject>
    </entry>
    <entry>
      <version>v .6</version>
      <date>2014-03-14</date>
      <subject>Attractive presentation achieved</subject>
    </entry>
    <entry>
      <version>v .7</version>
      <date>2014-08-08</date>
      <subject>First round of Technical Community feedback incorporated</subject>
    </entry>
    <entry>
      <version>v .8</version>
      <date>2014-08-21</date>
      <subject>Second round of Technical Community feedback incorporated</subject>
    </entry>
    <entry>
      <version>v .9</version>
      <date>2014-09-12</date>
      <subject>Third round of Technical Community feedback incorporated</subject>
    </entry>
  </RevisionHistory>
  <chapter title="Introduction" id="int">
    <!-- TO DO: Distinguish citations from cross-references. Mark up each appropriately. 
                        Pick an attribute other than id to refer to the linked element. Transform 
                        them more intelligently. Better yet, use standard markup with tool support. 
                      -->
    <section title="Overview" id="ppoverview">The scope of this Protection Profile (PP) is to
      describe the security functionality of application software in terms of <cite linkend="bibCC"
      /> and to define functional and assurance requirements for such software. In recent years,
      software attacks have shifted from targeting operating systems to targeting applications. This
      has been the natural response to improvements in operating system security and development
      processes. As a result, it is paramount that the security of applications be improved to
      reduce the risk of compromise.</section>
    <section title="Terms" id="glossary">The following sections provide both Common Criteria and
      technology terms used in this Protection Profile. <subsection title="Common Criteria Terms"
        id="ccterms">
        <glossary>
          <entry>
            <term><abbr title="Common Criteria">CC</abbr></term> 
            <description>Common Criteria for Information Technology Security
              Evaluation</description>
          </entry>
          <entry>
            <term><abbr title="Common Evaluation Methodology">CEM</abbr></term>
            <description>Common Evaluation Methodology for Information Technology Security
              Evaluation</description>
          </entry>
          <entry>
            <term><abbr title="Protection Profile">PP</abbr></term>
            <description>An implementation-independent set of security requirements for a category
              of products.</description>
          </entry>
          <entry>
            <term><abbr title="Security Target">ST</abbr></term>
            <description>A set of implementation-dependent security requirements for a specific
              product.</description>
          </entry>
          <entry>
            <term><abbr title="Target of Evaluation">TOE</abbr></term>
            <description>The product under evaluation. In this case, application
              software.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Security Functionality">TSF</abbr></term>
            <description>The security functionality of the product under evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Summary Specification">TSS</abbr></term>
            <description>A description of how a <abbr linkend="TOE"/> satisfies the SFRs in a ST.
            </description>
          </entry>
          <entry>
            <term><abbr title="Security Functional Requirement">SFR</abbr></term>
            <description>A requirement for security enforcement by the <abbr linkend="TOE"/>.
            </description>
          </entry>
          <entry>
            <term><abbr title="Security Assurance Requirement">SAR</abbr></term>
            <description>A requirement to assure the security of the <abbr linkend="TOE"/>.
            </description>
          </entry>
        </glossary>
      </subsection>
      <subsection title="Technology Terms" id="techterms">
        <glossary>
          <entry>
            <term><abbr title="Address Space Layout Randomization">ASLR</abbr></term>
            <description>An anti-exploitation feature which loads memory mappings into unpredictable
              locations. ASLR makes it more difficult for an attacker to redirect control to code
              that they have introduced into the address space of an application
              process.</description>
          </entry>
          <entry>
            <term><abbr title="Application">app</abbr></term>
            <description>Software that runs on a platform and performs tasks on behalf of
              the user or owner of the platform.</description>
          </entry>
          <entry>
            <term><abbr title="Application Programming Interface">API</abbr></term>
            <description>A specification of routines, data structures, object classes, and variables
              that allows an application to make use of services provided by another software
              component, such as a library. APIs are often provided for a set of libraries included
              with the platform.</description>
          </entry>
          <entry>
            <term>Credential</term>
            <description>Data that establishes the identity of a user, e.g. a cryptographic key or
              password</description>
          </entry>
          <entry>
            <term><abbr title="Data Execution Prevention">DEP</abbr></term>
            <description>An anti-exploitation feature of modern operating systems executing on
              modern computer hardware, which enforces a non-execute permission on pages of memory.
              DEP prevents pages of memory from containing both data and instructions, which makes
              it more difficult for an attacker to introduce and execute code.</description>
          </entry>
          <entry>
            <term>Developer</term>
            <description>An entity that writes application software. For the purposes of this
              document, vendors and developers are the same.</description>
          </entry>
	  <entry>
	    <term>Mobile Code</term>
	    <description> 
	      Software that is transmitted from a remote system to be
	      executed on a legitimate framework on a local system, typically 
	      without the user's explicit instruction.
	      Examples of Mobile Code are Java Applets, Adobe Flash, and Office Macros.
	    </description>
	  </entry>
          <entry>
            <term><abbr title="Operating System">OS</abbr></term>
            <description>Software that manages hardware resources and provides services for
              applications.</description>
          </entry>
          <entry>
            <term><abbr title="Personally Identifiable Information">PII</abbr></term>
            <description>Any information about an individual maintained by an agency, including, but
              not limited to, education, financial transactions, medical history, and criminal or
              employment history and information which can be used to distinguish or trace an
              individual's identity, such as their name, social security number, date and place of
              birth, mother’s maiden name, biometric records, etc., including any other personal
              information which is linked or linkable to an individual. <cite linkend="bibOMB"
              /></description>
          </entry>
          <entry>
            <term>Platform</term>
            <description>The environment in which application software runs. 
              The platform can be an operating system, an execution environment which runs atop 
              an operating system, or some combination of these.
            </description>
          </entry>
          <entry>
            <term>Sensitive Data</term>
            <description> 
	      Any information, the loss, misuse, or unauthorized access to or
              modification of which could adversely affect the privacy of the application user 
	      <cite linkend="bibCSA"/>.
	      The data can be stored, processed, or transmitted by the application.
	      It may include all user or enterprise data, credentials, <abbr linkend="PII"/> 
	      or may be specific application data such as e-mails, messaging,
              documents, calendar items, and contacts. 
	      Sensitive data shall be identified in the TSS.
 	    </description>
          </entry>
          <entry>
            <term>Stack Cookie</term>
            <description>An anti-exploitation feature that places a value on the stack at the start
              of a function call, and checks that the value is the same at the end of the function
              call. This is also refered to as Stack Guard, or Stack Canaries.</description>
          </entry>
          <entry>
            <term>Vendor</term>
            <description>An entity that sells application software. For purposes of this document,
              vendors and developers are the same. Vendors are responsible for maintaining and
              updating application software.</description>
          </entry>
        </glossary>
      </subsection></section>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">The requirements in this
  	  document apply to mobile applications as well as application software
  	  on desktop or server platforms. Some application types are covered by
  	  more specific PPs, which may be expressed as Extended Packages of this PP.
  	  Such applications are subject to the requirements of both this PP and the
  	  Extended Package that addresses their special functionality.  PPs for some 
	  particularly specialized applications may not be expressed as EPs at this time,
	  though the requirements in this document should be seen as objectives for those 
	  highly specialized applications.
	  <br/> 
	  Although the requirements in this document apply to a wide range of application
	  software, consult guidance from the relevant national schemes to
	  determine when formal Common Criteria evaluation is expected for a
	  particular type of application.  This may vary depending upon the nature
	  of the security functionality of the application.
	 <subsection title="TOE Boundary" id="TOEboundary"> An application is
		defined as software that runs on a platform and performs tasks on
		behalf of the user or owner of the system.  
		The application consists of
		the software provided by its vendor and which is installed onto the
		filesystem provided by the operating system.  It executes on the platform, which
		may be an operating system (Figure 1), an execution environment,
		or some combination of these (Figure
		2).  Some assurance activities are specific to the particular platform
		on which the application runs, in order to provide precision and
		repeatability. Test activities are actively sought from platform
		vendors so that coverage across platforms is as complete and accurate
		as possible. This will also enable certification of applications on
		those platforms. 
		<br/>	
		Applications includes a diverse range of sofware such as office suites, thin
		clients, <abbr title="Portable Document Format">PDF</abbr> readers,
		and downloadable smartphone apps. The TOE includes any software in the
		application installation package, even those pieces that may extend the
		functionality of the underlying platform, such as kernel drivers.  
		Many platforms come bundled with applications
		such as web browsers, email clients and media players and these too
		should be considered subject to the requirements defined in this
		document although the expectation of formal Common Criteria evaluation
		depends upon the national scheme.  <abbr title="Basic Input/Output
		System">BIOS</abbr> and other firmware, the operating system kernel,
		and other systems software (and drivers) provided as part of the
		platform are outside the scope of this document.  <figure
		entity="images/toe.png" title="Figure 1: TOE as an Application and
		Kernel Module Running on an Operating System" id="toe-as-apponos" />
		<figure entity="images/toeruntime.png" title="Figure 2: TOE as an
		Application Running in an Execution Environment Plus Native Code"
		id="toe-as-apponee" />

    </subsection></section>
    <section title="Use Cases" id="usecases">Requirements in this Protection Profile are designed to
      address the security problem in the following use cases. These use cases are intentionally
      very broad, as many specific use cases exist for application software. Many applications may
      be used in combinations of these broad use cases as well. <usecases>
        <usecase title="Content Creation" id="contentcreation">
          <description>The application allows a user to create content, saving it to either local or
            remote storage (e.g. Saving a text document). </description>
        </usecase>
        <usecase title="Content Consumption" id="contentconsumption">
          <description>The application allows a user to consume content, retrieving it from either
            local or remote storage (e.g. Opening a text document).</description>
        </usecase>
        <usecase title="Communication" id="interactivecomms">
          <description>The application allows for communication interactively or
            non-interactively with other users or applications over a communications channel.
          </description>
        </usecase>
      </usecases></section>
  </chapter>
  <chapter title="Conformance Claims" id="ccl">
    <cclaims>
      <cclaim id="Conformance Statement">
        <description>
	  In order to be conformant to this PP, a TOE must demonstrate Exact Conformance.
	  Exact Conformance, as subset of Strict Conformance as defined by the CC, 
	  is defined as the <abbr linkend="ST"/> containing all of the 
	  requirements in section 4 of the Application Software PP, and 
	  potentially requirements from Appendix C of the Application Software PP.
	  While iteration is allowed, no additional requirements (from the CC parts 2 or 3) 
	  are allowed to be included in the <abbr linkend="ST"/>.
	  Further, no requirements in section 4 of the Application Software PP are allowed 
	  to be omitted.
	</description>
      </cclaim>
      <cclaim id="CC Conformance Claims">
        <description>This PP is conformant to Parts 2 (extended) and 3 (extended) of Common Criteria
          Version 3.1, Revision 4. <cite linkend="bibCC"/>.</description>
      </cclaim>
      <cclaim id="PP Claim">
        <description>This PP does not claim conformance to any other Protection
          Profile.</description>
      </cclaim>
      <cclaim id="Package Claim">
        <description>This PP does not claim conformance to any packages.</description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Definition" id="spd">The security problem is described in terms
    of the threats that the <abbr linkend="TOE"/> is expected to address, assumptions about the
    operational environment, and any organizational security policies that the <abbr linkend="TOE"/>
    is expected to enforce.
    <section title="Threats" id="threats">
      <threats>
        <threat id="T.NETWORK_ATTACK">
          <description>An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may engage in communications with the application
            software or alter communications between the application software and other endpoints in
            order to compromise it.</description>
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.PROTECTED_COMMS as this
              provides for integrity of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.INTEGRITY">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.INTEGRITY as this provides
              for integrity of software that is installed onto the system from the
              network.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.NETWORK_EAVESDROP">
          <description>An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may monitor and gain access to data exchanged between
            the application and other endpoints.</description>
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.PROTECTED_COMMS as this
              provides for confidentiality of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.QUALITY">
            <rationale>The objective O.QUALITY ensures use of mechanisms that provide strong
              protection against network-based attack.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.LOCAL_ATTACK">
          <description>An attacker can act through unprivileged software on the same computing
            platform on which the application executes. Attackers may provide maliciously formatted
            input to the application in the form of files or other local
            communications.</description>
          <objective-refer ref="O.QUALITY">
            <rationale>The objective O.QUALITY protects against the use of mechanisms that leave the
                <abbr linkend="TOE"/> open to attacks.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.PHYSICAL_ACCESS">
          <description>An attacker may try to access sensitive data at rest.</description>
          <objective-refer ref="O.PROTECTED_STORAGE">
            <rationale>The objective O.PROTECTED_STORAGE protects against attempts to access
              physical storage used by the <abbr linkend="TOE"/>.</rationale>
          </objective-refer>
        </threat>
      </threats>
    </section>
    <section title="Assumptions" id="assumptions">
      <assumptions>
        <assumption id="A.PLATFORM">
          <description>The <abbr linkend="TOE"/> relies upon a trustworthy computing platform for
            its execution. This includes the underlying platform and whatever runtime environment
            it provides to the <abbr linkend="TOE"/>.</description>
          <objective-refer ref="OE.PLATFORM">
            <rationale>The assumption A.PLATFORM is covered by security objectives OE.PLATFORM as
              directly follows.</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PROPER_USER">
          <description>
	    The user of the application software is not willfully negligent or hostile,
            and uses the software in compliance with the applied enterprise security policy.
	  </description>
          <objective-refer ref="OE.PROPER_USER">
            <rationale>The assumption A.PROPER_USER is covered by objective OE.PROPER_USER as
              directly follows</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PROPER_ADMIN">
          <description>The administrator of the application software is not careless, willfully
            negligent or hostile, and administers the software within compliance of the applied
            enterprise security policy.</description>
          <objective-refer ref="OE.PROPER_ADMIN">
            <rationale>The assumption A.PROPER_ADMIN is covered by objective OE.PROPER_ADMIN as
              directly follows</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </section>
    <section title="Organizational Security Policies" id="OSPs">
      <OSPs>
        <OSP id="P.ENTERPRISE">
          <description>The configuration of the application software must be capable of adhering to
            the enterprise security policy.</description>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The organizational security policy P.ENTERPRISE is enforced through the the
              objective O.MANAGEMENT as this objective represents how the enterprise asserts
              management over the <abbr linkend="TOE"/>.</rationale>
          </objective-refer>
        </OSP>
      </OSPs>
    </section></chapter>
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO id="O.INTEGRITY">
		  <description>Conformant <abbr linkend="TOE"/>s ensure the integrity
		  of their installation and update packages, and also leverage
		  execution environment-based mitigations. Software is seldom if ever
		  shipped without errors, and the ability to deploy patches and updates
		  to fielded software with integrity is critical to enterprise network
		  security. Processor manufacturers, compiler developers, execution
		  environment vendors, and operating system vendors have developed
		  execution environment-based mitigations that increase the cost to
		  attackers by adding complexity to the task of compromising systems.
		  Application software can often take advantage of these mechanisms by
		  using <abbr linkend="API"/>s provided by the runtime environment or by
		  enabling the mechanism through compiler or linker
		  options.</description>
          <component-refer ref="fdp_dec_ext.1"/>
          <component-refer ref="fpt_aex_ext.1"/>
          <component-refer ref="fpt_tud_ext.1"/>
          <component-refer ref="fpt_cop_ext.1"/>
        </SO>
        <SO id="O.QUALITY">
          <description>To ensure quality of implementation, conformant <abbr linkend="TOE"/>s
            leverage services and <abbr linkend="API"/>s provided by the runtime environment rather
            than implementing their own versions of these services and APIs. This is especially
            important for cryptographic services and other complex operations such as file and media
            parsing. 
	    Quality of implementation depends heavily on reliable platform 
	    behavior which can be guaranteed by using only documented and supported APIs.
	  </description>
          <component-refer ref="fmt_mec_ext.1"/>
          <component-refer ref="fmt_cfg_ext.1"/>
          <component-refer ref="fpt_api_ext.1"/>
          <component-refer ref="fpr_ano_ext.1"/>
        </SO>
        <SO id="O.MANAGEMENT">
          <description>To facilitate management by users and the enterprise, conformant <abbr
              linkend="TOE"/>s provide consistent and supported interfaces for their
            security-relevant configuration and maintenance. This includes the deployment of
            applications and application updates through the use of platform-supported deployment
            mechanisms and formats, as well as providing mechanisms for configuration.</description>
          <component-refer ref="fmt_smf.1"/>
          <component-refer ref="fpt_idv_ext.1"/>
          <component-refer ref="fpt_tud_ext.1.5"/>
        </SO>
        <SO id="O.PROTECTED_STORAGE">
          <description>
	    To address the issue of loss of confidentiality of user data in the event of 
	    loss of physical control of the storage medium, conformant <abbr linkend="TOE"/>s will 
	    use data-at-rest protection. This involves encrypting data and keys stored by the 
	    <abbr linkend="TOE"/> in order to prevent unauthorized access to this data.
          </description>
          <component-refer ref="fdp_dar_ext.1"/>
          <component-refer ref="fcs_sto_ext.1.1"/>
          <component-refer ref="fcs_rbg_ext.1"/>
        </SO>
        <SO id="O.PROTECTED_COMMS">
          <description> To address both passive (eavesdropping) and active (packet modification)
            network attack threats, conformant <abbr linkend="TOE"/>s will use a trusted channel for
            sensitive data. Sensitive data includes cryptographic keys, passwords, and any other
            data specific to the application that should not be exposed outside of the application. 
          </description>
          <component-refer ref="ftp_dit_ext.1"/>
          <component-refer ref="tcs_tlsc_ext.1"/>
          <component-refer ref="fcs_dtls_ext.1"/>
          <component-refer ref="fcs_rbg_ext.1"/>
        </SO>
      </SOs>
    </section>
    <section title="Security Objectives for the Operational Environment"
      id="SecurityObjectivesTOEorEnvironment">The following security objectives for the operational
      environment assist the <abbr linkend="TOE"/> in correctly providing its security
      functionality. These track with the assumptions about the environment. <SOEs>
        <SOE id="OE.PLATFORM">
          <description>The <abbr linkend="TOE"/> relies upon a trustworthy computing platform for
            its execution. This includes the underlying operating system and any discrete execution 
            environment provided to the <abbr linkend="TOE"/>.</description>
        </SOE>
        <SOE id="OE.PROPER_USER">
          <description>The user of the application software is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security
            policy.</description>
        </SOE>
        <SOE id="OE.PROPER_ADMIN">
          <description>The administrator of the application software is not careless, willfully
            negligent or hostile, and administers the software within compliance of the applied
            enterprise security policy.</description>
        </SOE>
      </SOEs></section>
    <section title="Security Objectives Rationale" id="SOR">This section describes how the
      assumptions, threats, and organizational security policies map to the security objectives.
      <InsertSPDCorrespondence/></section>
  </chapter>
  <chapter title="Security Requirements" id="req">This chapter describes the security requirements
    which have to be fulfilled by the <abbr linkend="TOE"/>. Those requirements comprise functional
    components from Part 2 and assurance components from Part 3 of <cite linkend="bibCC"/>. The
    following notations are used: <ul>
      <li>
        <b>Refinement</b> operation (denoted by <b>bold text</b>): is used to add details to a
        requirement, and thus further restricts a requirement.</li>
      <li>
        <b>Selection</b> (denoted by <i>italicized text</i>): is used to select one or more options
        provided by the [CC] in stating a requirement.</li>
      <li>
        <b>Assignment</b> operation (denoted by <i>italicized text</i>): is used to assign a
        specific value to an unspecified parameter, such as the length of a password. Showing the
        value in square brackets indicates assignment.</li>
      <li>
        <b>Iteration</b> operation: are identified with a number inside parentheses (e.g.
        "(1)")</li>
    </ul>
    <section title="Security Functional Requirements" id="SFRs">The Security Functional Requirements
      included in this section are derived from Part 2 of the Common Criteria for Information
      Technology Security Evaluation, Version 3.1, Revision 4, with additional extended functional
      components. 
      <subsection title="User Data Protection (FDP)" id="fdp">
        <f-component id="fdp_dec_ext.1" name="Access to Platform Resources">
          <f-element id="fdp_dec_ext.1.1">
            <title> The application shall provide user awareness of its intention to directly access
                <selectables linebreak="yes">
                <selectable>no hardware resources</selectable>
                <selectable>network connectivity</selectable>
                <selectable>camera</selectable>
                <selectable>microphone</selectable>
                <selectable><abbr title="Global Positioning System">GPS</abbr></selectable>
                <selectable><abbr title="Near-Field Communication">NFC</abbr></selectable>
                <selectable><abbr title="Universal Serial Bus">USB</abbr></selectable>
                <selectable>Bluetooth</selectable>
                <selectable><assignable>list of additional hardware resources</assignable></selectable>
              </selectables> . </title>
            <note role="application"> The evaluator should ensure that the selection captures all
              platform hardware resources which the application is intended to access. The
              requirement is worded in this way due to the diversity of methods by which user
              awareness can be achieved, which varies per platform. 
	      Generic access to the filesystem, which may provide indirect access to removable
	      or remote (e.g. USB or network shares) drives, is not considered direct access.
	    </note>
              <aactivity>The evaluator shall install and run the application and inspect its user
              documentation to verify that the user is informed of any need to access hardware
              resources. The method of doing so varies
              per platform. <subaactivity platform="blackberry">The evaluator shall install the
                application and run it for the first time. The evaluator shall verify that the
                application displays all platform resources it would like to access. Note: If the
                user goes to: App permissions → Settings → Security and Privacy → Application
                Permissions → Select application in question, it will list which platform resource
                are approved/denied and can be changed.</subaactivity>
              <subaactivity platform="android">The evaluator shall install the application and
                verify that the application displays the platform resources it would like to access.
                This includes permissions such as ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION,
                BLUETOOTH, CAMERA, INTERNET, NFC, READ_EXTERNAL_STORAGE, RECORD_AUDIO. 
                A complete list of Android permissions can be found at: 
                <ul><li>
		  <a href="http://developer.android.com/reference/android/Manifest.permission.html">
                    http://developer.android.com/reference/android/Manifest.permission.html
		  </a>
                </li>
                <li>
		  <a href="http://developer.android.com/reference/android/Manifest.permission_group.html">
		    http://developer.android.com/reference/android/Manifest.permission_group.html
                  </a>
                </li></ul>
		<!-- <table> -->
		<!--   <tr><th>Resource</th><th>Permission</th><th>Permission Group</th></tr> -->
		<!--   <tr><td>network</td><td colspan="2"><i>granted automatically</i></td></tr> -->
		<!--   <tr><td>camera</td><td>CAMERA</td><td>CAMERA</td></tr> -->
		<!--   <tr><td>microphone</td><td>RECORD_AUDIO</td><td>MICROPHONE</td></tr> -->
		<!--   <tr><td>GPS</td><td>ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION</td><td>LOCATION</td></tr> -->
		<!--   <tr><td>NFC</td><td>NFC</td><td>n/a</td></tr> -->
		<!--   <tr><td>Bluetooth</td><td>BLUETOOTH, BLUETOOTH_ADMIN, BLUETOOTH_PRIVILEGED</td><td>BLUETOOTH</td></tr> -->
		<!-- </table> -->
		<!--
		http://developer.android.com/reference/android/Manifest.permission.html
		http://developer.android.com/reference/android/Manifest.permission_group.html
		-->
              </subaactivity>
              <subaactivity platform="windows">For Windows Store Apps the evaluator shall check the
                WMAppManifest.xml file for a list of required hardware capabilities. The evaluator
                shall verify that the user is made aware of the required hardware capabilities when
                the application is first installed. This includes permissions such as
                ID_CAP_ISV_CAMERA, ID_CAP_LOCATION, ID_CAP_NETWORKING, ID_CAP_MICROPHONE,
                ID_CAP_PROXIMITY and so on.
		A complete list of Windows App permissions can be found
                at: 
		<ul><li>
		  <a href="http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx">
                    http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx
		  </a>
		</li></ul>
		For Windows Desktop Applications the evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                hardware resources.</subaactivity>
                <subaactivity platform="ios">The evaluator shall verify that either the
                  application or the documentation provide the user with a list of the required
                  hardware resources. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                hardware resources. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                hardware resources. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall verify that either the application
                or the documentation provide the user with a list of the required hardware
                resources. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.2">
            <title>The application shall provide user awareness of its intention to access
                <selectables linebreak="yes">
                <selectable>no system-wide sensitive information repositories</selectable>
                <selectable>address book</selectable>
                <selectable>calendar</selectable>
                <selectable>call lists</selectable>
                <selectable>system logs</selectable>
                <selectable><assignable> list of additional system-wide sensitive information 
                  repositories</assignable>
                </selectable>
              </selectables>
            </title>
            <note role="application"> 
	      The evaluator should ensure that the selection captures all
              system-wide sensitive information repositories which the application is intended to 
              access. The requirement is worded in this way due to the diversity of methods by which 
              user awareness can be achieved, which varies per platform.
	    </note>
            <aactivity>
	      The evaluator shall install and run the application and inspect its user
              documentation to verify that the user is informed of any need to access sensitive
              data. 
	      The method of doing so varies per platform.
	      <subaactivity platform="blackberry">The evaluator shall
                install the application and run it for the first time. The evaluator shall verify
                that the application displays all platform resources it would like to
                access.
	      </subaactivity>
              <subaactivity platform="android">The evaluator shall install the application and
                verify that the application displays the permissions used to access sensitive
                information repositories. This includes permissions such as READ_CALENDAR,
                READ_CALL_LOG, READ_CONTACTS, READ_EXTERNAL_STORAGE, READ_LOGS.
                A complete list of Android permissions can be found at: 
                <ul><li>
		  <a href="http://developer.android.com/reference/android/Manifest.permission.html">
                    http://developer.android.com/reference/android/Manifest.permission.html
		  </a>
                </li>
                <li>
		  <a href="http://developer.android.com/reference/android/Manifest.permission_group.html">
		    http://developer.android.com/reference/android/Manifest.permission_group.html
                  </a>
                </li></ul>
              </subaactivity>
              <subaactivity platform="windows">For Windows Store Apps the evaluator shall check the
                WMAppManifest.xml file for a list of required capabilities. The evaluator shall
                verify that the user is made aware of the required information repositories when the
                application is first installed. This includes permissions such as
                ID_CAP_CONTACTS,ID_CAP_APPOINTMENTS,ID_CAP_MEDIALIB and so on. A complete list of
                Windows App permissions can be found at: 
		<ul><li>
		  <a href="http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx">
                    http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx
		  </a>
		</li></ul> 
		For Windows Desktop Application the evaluator shall verify that either the
                application or the documentation provide the user with a list of the required
                information repositories. </subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that either the application
                or the documentation provide the user with a list of permissions used to access
                sensitive information repositories.</subaactivity>
              <subaactivity platform="linux"> The evaluator shall verify that either the 
                application or the documentation provide the user with a list of permissions used to 
                access sensitive information repositories. 
              </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall verify that either the
                application or the documentation provide the user with a list of permissions used to
                access sensitive information repositories. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall verify that either the application
                or the documentation provide the user with a list of permissions used to access
                sensitive information repositories. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.3">
            <title> 
	      The application shall only seek access to those resources 
	      for which it has provided a justification to access. 
	    </title>
            <aactivity> The evaluator shall review documentation provided by the application
              developer and for each resource which it requests access to, identify the
              justification as to why access is required. </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.4">
            <title>The application shall restrict network connections to 
              <selectables linebreak="yes">
                <selectable>use no network connections</selectable>
                <selectable>provide user initiated connectivity for <assignable> list of functions 
                  for which the user can initiate network connections</assignable></selectable>
                <selectable>respond to <assignable> list of remotely initiated connections
                </assignable>
                </selectable>
                <selectable><assignable> list application initiated network connections</assignable>
                </selectable>
              </selectables>
              . 
            </title>
            <note role="application">
	      This requirement is intended to restrict both inbound and
              outbound network connections and ports to only those required, or to network
              connections that are user initiated.
	      It does not apply to applications that generically access the filesystem that
	      may cause the platform to access remotely mounted drives/shares.
	    </note>
            <aactivity> 
	      The evaluator shall run the application.
	      While the application is running,
	      the evaluator shall sniff network traffic ignoring all non-application 
	      associated traffic
	      and verify that any network connections witnessed are documented or are user-initiated. 
	      Filtering network traffic might be difficult, so it is recommended that the 
	      evaluator minimize the number of applications and services running concurrently
	      and run the application multiple times to isolate network traffic associated with the application.
	      After the application initializes, the
              evaluator shall run a network port scan to verify that any local or remote ports
              opened by the application have been documented. 
	    </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.5">
            <title>
	      The application shall 
	      <selectables linebreak="yes">
		<selectable>
		  not transmit managed <abbr linkend="PII"/> over a network.
		</selectable>
		<selectable>
		  require user approval before executing
		  <assignable> 
		    list of functions that transmit managed <abbr linkend="PII"/> over a network
		  </assignable>
		</selectable>
	      </selectables>
	      .
	    </title>
            <note role="application">
	      This requirement only applies to PII that is specifically requested by the application;
	      it does not apply if the user volunteers PII without prompting from the application 
	      into a general (or inappropriate) data field.
	      For example, if the user includes PII into an email and sends it, the 
	      application is not considered to have managed the PII.
	      Also, having a dialog box that declares intent to send PII presented to the user 
	      at the time the application is started is sufficient to meet this requirement. 
	    </note>
            <aactivity>The evaluator shall inspect the TSS documentation to identify functionality in the
              application where PII can be transmitted, and perform the following tests.
              <testlist>
                <test>
                  The evaluator shall run the application and exercise the functionality responsibly
                  for transmitting PII and verify that user approval is required before transmission
                  of the PII.
                </test>
                <test>
                  The evaluator shall run a network monitoring tool while running the application 
                  and verify that no PII is transmitted without user approval.
                </test>
              </testlist>
           </aactivity>
          </f-element>
        </f-component>
        <f-component id="fdp_dar_ext.1" name="Storage Of Sensitive Application Data">
          <f-element id="fdp_dar_ext.1.1">
            <title>The application shall 
	      <selectables linebreak="yes">
		<selectable>
		  invoke platform-provided functionality to encrypt sensitive data stored
		</selectable>
                <selectable>
		  not store any sensitive data
		</selectable>
              </selectables>
              in non-volatile memory.
            </title>
            <note role="application">
	      Any file that may potentially contain sensitive data (to include temporary files)
	      must be protected with platform-provided encryption.
	      The only exception is if the user actively chooses to export the sensitive data
	      to non-protected files. 
	      For instance, if the user opens a text document and enters sensitive data into
	      the document, the application is not responsible for protecting that document.
	    </note>
            <!-- this language is intentionally different from the MDPP's FDP_DAR -->
            <aactivity>The evaluator shall run the application and store potentially sensitive data.
              The evaluator shall then inspect the filesystem to determine where data has been
              written, and note whether it is encrypted. The evaluator shall determine whether
              platform-provided functionality for protecting sensitive data is being invoked. 
              Otherwise, the the evaluator shall test how the application invokes
              platform-provided functionality, which varies per platform: <subaactivity
                platform="blackberry">The evaluator shall determine whether the application properly
                uses the Advanced Data at Rest Protection <abbr linkend="API"/> and the application
                uses the appropriate domain to store and protect each data file.</subaactivity>
              <subaactivity platform="android">
		The evaluator shall verify that the application uses
		the Android <code>SecretKeyFactory</code> and
		<code>Cipher</code> classes to encrypt sensitive data.
	      </subaactivity>
              <subaactivity platform="windows">The evaluator shall determine and verify that Windows
                Applications use the <abbr title="Data Protection API">DPAPI</abbr> to store and
                retrieve sensitive data. Windows Store Apps for desktop or mobile shall use
                the DPAPI via the ProtectedData class.</subaactivity>
              <subaactivity platform="ios">The evaluator shall determine whether the application
                is protected with the Complete Protection, Protected Unless Open, or Protected Until First User Authentication Data Protection Class for each data file stored locally. 
              </subaactivity>
              <subaactivity platform="linux">
		The Linux platform currently does not have data-at-rest encryption services built-in, 
		so applications on it satisfy this requirement by default.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The Linux platform currently does not have data-at-rest encryption services built-in, 
		so applications on it satisfy this requirement by default.
	      </subaactivity>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Security Management (FMT)" id="fmt">
        <f-component id="fmt_mec_ext.1" name="Supported Configuration Mechanism">
          <f-element id="fmt_mec_ext.1.1">
            <title> 
	      The application shall invoke the mechanisms recommended by the platform
              vendor for storing and setting configuration options.
	    </title>
            <note role="application"> Configuration options that are stored remotely are not subject
              to this requirement. </note>
            <aactivity>
              The evaluator shall review the TSS to identify the application's
              configuration options (e.g. settings) and determine whether these are stored and set
              using the mechanisms supported by the platform.
              The method of doing so varies per platform. 
	      <subaactivity platform="blackberry">
		The evaluator shall run the application and make security-related changes to its configuration.
		The evaluator shall check that at least one file in the app folder of the application 
		working directory was modified to reflect the change made.
              </subaactivity>
              <subaactivity platform="android">
		The evaluator shall run the application and make security-related changes to its configuration.
		The evaluator shall check that at least one XML file at location
		<path>/data/data/<i>package</i>/shared_prefs/</path>
		reflects the changes made to the configuration to verify that the application used
		<code>SharedPreferences</code> and/or <code>PreferenceActivity</code> classes
                for storing configuration data, where <i>package</i> is the Java package
		of the application.
	      </subaactivity>
              <subaactivity platform="windows">The evaluator shall determine and verify that Windows
                Store App applications use either the Windows.UI.ApplicationSettings namespace or
                the IsolatedStorageSettings namespace for storing application specific settings.
                For Classic Desktop applications, the evaluator shall run the application while 
		monitoring it with the SysInternal tool <util>ProcMon</util> and 
		make security-related changes to its configuration. 
		The evaluator shall verify that <util>ProcMon</util> logs corresponding changes to the
		the Windows Registry.
	      </subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that the app uses the
                  <code>user defaults system</code> or <code>key-value store</code> for storing all
                settings.</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the application while monitoring it with the utility <util>strace</util>.
		The evaluator shall make security-related changes to its configuration.
		The evaluator shall verify that <util>strace</util> logs corresponding changes to configuration 
		files that reside in /etc (for system-specific configuration) or 
		in the user's home directory(for user-specific configuration).
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the application while monitoring it with the utility <util>dtrace</util>.
		The evaluator shall make security-related changes to its configuration.
		The evaluator shall verify that <util>dtrace</util> logs corresponding changes to configuration 
		files that reside in /etc (for system-specific configuration) or 
		in the user's home directory(for user-specific configuration).
	      </subaactivity>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fmt_cfg_ext.1" name="Secure by Default Configuration">
          <f-element id="fmt_cfg_ext.1.1">
            <title>
	      The application shall only provide enough functionality to set new credentials when 
              configured with default credentials or no credentials.
	    </title>
            <note role="application">
	      Default credentials are credentials (e.g., passwords, keys) that are automatically (without user interaction) loaded onto the platform during application installation.
	      Credentials that are generated during installation using requirements laid out in fcs_rbg_ext are not by definition default credentials.
	    </note>
            <aactivity>
             The evaluator shall check the TSS to determine if the application requires any type
             of credentials and if the applications installs with default credentials. If the
             application uses any default credentials the evaluator shall run the following tests.
             <testlist>
                <test>
                  The evaluator shall install and run the application without generating or loading 
		  new certificates and verify that only the minimal
                  application functionality required to set new credentials is available.
                </test>
                <test>
                  The evaluator shall attempt to clear all credentials and verify that only
		  the minimal application functionality required to set new credentials is available.
                </test>
                <test>
                  The evaluator shall run the application establish new credentials and
                  verify that the original default credentials no longer provide access to
                  the application.
                </test>
             </testlist>
	    </aactivity>
          </f-element>
          <f-element id="fmt_cfg_ext.1.2">
            <title>
	      The application shall be initially configured to
	      <selectables>
		<selectable>
		  use TLS tunnels to 
		</selectable>
		<selectable>
		  not
		</selectable>
	      </selectables>
	      transmit credentials.
            </title>
            <note role="application">The intention of this requirement is to prevent the
              observation of plaintext credentials, such as passwords or private keys,
              during transmission. 
            </note>
            <aactivity>The evaluator shall inspect the TSS to determine if credentials are
              transmitted and how. If credentials are transmitted the evaluator shall set the
              credential to a known value. The evaluator shall sniff network traffic
              while running the application and causing credentials to be transmitted
              as described in the TSS. The evaluator shall perform a string search
              of the captured network traffic and verify that the plaintext credential previously
              set by the evaluator are not found and verify that the captured traffic contains
              TLS communications.
              </aactivity>
          </f-element>
          <f-element id="fmt_cfg_ext.1.3">
            <title>The application shall be configured by default with file permissions which protect
              it and its data from unauthorized access.</title>
            <note role="application">
	      The precise expectations for file permissions vary per platform
              but the general intention is that a trust boundary protects the application and its
              data.
	    </note>
            <aactivity>The evaluator shall install and run the application. The evaluator shall
              inspect the filesystem of the platform (to the extent possible) for any files created
              by the application and ensure that their permissions are adequate to protect them.
              The method of doing so varies per platform. <subaactivity platform="blackberry"/>
              <subaactivity platform="android">
		The evaluator shall run 
        	<code>ls -alR|grep -E '$.......(r|-w|--x)'</code> inside the application's 
		data directories to ensure that all files are not world-accessible 
		(either read, write, or execute).
		The command should not print any files.
		The evaluator shall also verify that no sensitive data is written to
                external storage as this data can be read/modified by any application containing the
                READ_EXTERNAL_STORAGE and/or WRITE_EXTERNAL_STORAGE permissions.</subaactivity>
              <subaactivity platform="windows">The evaluator shall run the SysInternals tools,
                Process Monitor and Access Check (or tools of equivalent capability, like 
                icacls.exe) for Classic Desktop applications to verify that files writen to disk 
                during an applications installation have the correct file permissions, such that a 
                standard user cannot modify the application or its data files. For Windows Store 
                Apps the evaluator shall consider the requirement met because of the AppContainer 
                sandbox.
              </subaactivity>
              <subaactivity platform="ios">The evaluator shall determine whether the application
                leverages the appropriate Data Protection Class for each data file stored
                locally.</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the command 
		<code>find . -perm /007</code> 
		inside the application's data directories to ensure that all files are 
		not world-accessible (either read, write, or execute).
		The command should not print any files.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the command
		<code>find . \( -perm -001 -o -perm -002 -o -perm -004 \)</code>
		inside the application's data directories to ensure that all files are not 
		world-accessible (either read, write, or execute). 
		The command should not print any files.
	      </subaactivity>
              <subaactivity platform="OS X">
		The evaluator shall run the command <code>find . -perm +007</code> inside
		the application's data directories to ensure that all files are not world-accessible 
		(either read, write, or execute).
		The command should not print any files.
	      </subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fmt_smf.1" name="Specification of Management Functions">
          <f-element id="fmt_smf.1.1">
            <title> The <abbr linkend="TSF"/> shall be capable of performing the following
              management functions 
              <selectables linebreak="yes">
                <selectable> enable/disable the transmission of any information describing the
                  system's hardware, software, or configuration
                </selectable>
                <selectable> enable/disable the transmission of any PII
                </selectable>
                <selectable> enable/disable transmission of any application state (e.g. crashdump)
                  information</selectable>
                <selectable> enable/disable network backup functionality to <assignable> list of 
                  enterprise or commercial cloud backup systems</assignable>
		</selectable>
                <selectable> <assignable> list of other management functions to be provided by the 
                  <abbr linkend="TSF" /></assignable></selectable> 
              </selectables>
            </title>
            <note role="application">
	      This requirement stipulates that applications need provide the ability to 
	      enable/disable only those functions that it actually implements.
	      Also, it is only responsible for controlling its own actions---it 
	      is not responsible for controlling the behavior of the platform or other applications.
	    </note>
            <aactivity>The evaluator shall check to make sure that every management function 
              mandated by the PP is described in the operational guidance and that the description 
              contains the information required to perform the management duties associated with the 
              management function. The evaluator shall test the applications ability to provide the 
              management functions by configuring the application and testing each option selected 
              from above. The evaluator is expected to test these functions in all the ways in which 
              the <abbr linkend="ST"/> and guidance documentation state the configuration can be 
              managed.
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Cryptographic Support (FCS)" id="fcs">
        <f-component id="fcs_rbg_ext.1" name="Random Bit Generation">
          <f-element id="fcs_rbg_ext.1.1">
            <title> The application shall <selectables atleastone="yes" linebreak="yes">
                <selectable>perform no cryptographic operations</selectable>
                <selectable>invoke platform-provided DRBG services for its cryptographic
                  functionality</selectable>
                <selectable>invoke application-implemented DRBG services for its cryptographic
                  functionality</selectable>
              </selectables> . </title>
            <note role="application">If "invoke platform-provided DRBG services" is chosen, then
              additional FCS_RBG_EXT.2 elements shall be included in the <abbr linkend="ST"/>. If "invoke
              application-implemented DRBG services" is chosen, then additional FCS_RBG_EXT.3
              elements shall be included in the <abbr linkend="ST"/>. In this requirement, cryptographic
              functionality includes all cryptographic key generation/derivation/agreement, IVs (for
              certain modes), as well as protocol-specific random values. </note>
            <aactivity>
              The evaluator shall inspect the application and its developer documentation 
              to determine if the application needs random bit generation services. If not, the 
              evaluator shall verify the ‘perform no cryptographic operations’ selection is present 
              in the <abbr linkend="ST"/>. Otherwise, the evaluation activities will be performed as stated in the 
              following requirements.
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_rbg_ext.2" name="Random Bit Generation from Platform (Selection Based)">
          <f-element id="fcs_rbg_ext.2.1" status="sel-based">
            <selection-depends req="fcs_rbg_ext.1.1"/>
            <title> The application shall invoke a mechanism recommended by the platform
              vendor for requesting data from the platform's DRBG.</title>
            <note role="application">This requirement shall be included in <abbr linkend="ST"/>s in which "invoke 
              platform-provided DRBG services" is chosen in FCS_RBG_EXT.1.1. Guidance on various 
              platform DRBGs can be found in "Random Number Generators (RNG): Introduction for 
              Application Developers" at: <ul><li><a
                href="http://www.nsa.gov/ia/mitigation_guidance/security_configuration_guides/fact_sheets.shtml">
                http://www.nsa.gov/ia/mitigation_guidance/security_configuration_guides/fact_sheets.shtml</a></li>
              </ul>  
            </note>
            <aactivity>The evaluator shall verify that the <abbr linkend="ST"/> identifies the calls used in acquiring
              random from each instantiation of the RBG used for the application’s cryptographic
              functionality.  The evaluator shall ensure that random bits are acquired properly
              from the platform. This varies on a per-platform basis:
              <subaactivity platform="blackberry">
                The evaluator shall use static analysis to verify that the Security Builder Crypto GSE
                library is used.</subaactivity>
              <subaactivity platform="android"> The evaluator shall use static analysis to verify
                that the application uses at least one of <code>javax.crypto.KeyGenerator</code> 
                class or the <code>java.security.SecureRandom</code> class or <code>/dev/random
                </code> or <code>/dev/urandom</code>.
              </subaactivity>
              <subaactivity platform="windows">The evaluator shall use static analysis to verify
                that the BCryptGenRandom or CryptGenRandom <abbr linkend="API"/> is used for classic
                desktop applications. The evaluator shall verify that the
                System.Random <abbr linkend="API"/> is used for Windows Store Applications. In
                future versions of this document, CryptGenRandom may be removed as an option as it
                no longer the preferred API per vendor documentation. </subaactivity>
              <subaactivity platform="ios"> The evaluator shall use static analysis to verify that
                the iOS Randomization Services <abbr linkend="API"/> is used. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall use static analysis to verify
                that /dev/random or /dev/urandom is used. </subaactivity>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
        </f-component>
         <f-component id="fcs_rbg_ext.3" name="Random Bit Generation from Application (Selection 
          Based)">
          <f-element id="fcs_rbg_ext.3.1" status="sel-based">
            <selection-depends req="fcs_rbg_ext.1.1"/>
            <title> The application shall perform all deterministic random bit generation (DRBG)
              services in accordance with <selectables atleastone="yes" linebreak="yes">
                <selectable>NIST Special Publication 800-90A using <selectables>
                    <selectable>Hash_DRBG (any)</selectable>
                    <selectable>HMAC_DRBG (any)</selectable>
                    <selectable>CTR_DRBG (AES)</selectable>
                  </selectables>
                </selectable>
                <selectable>FIPS Pub 140-2 Annex C: X9.31 Appendix 2.4 using AES</selectable>
              </selectables>.
            </title>
            <note role="application">This requirement shall be included in <abbr linkend="ST"/>s in which "invoke
              application-implemented DRBG services" is chosen in FCS_RBG_EXT.3.1. The <abbr linkend="ST"/> author 
              should select the standard to which the RBG services comply (either SP 800-90A or FIPS 
              140-2 Annex C). 
              <br />
              SP 800-90A contains three different methods of generating random numbers; each of 
              these, in turn, depends on underlying cryptographic primitives 
              (hash functions/ciphers). The <abbr linkend="ST"/> author will select the function used (if SP 800-90A 
              is selected), and include the specific underlying cryptographic primitives used in the 
              requirement or in the TSS. While any of the identified hash functions (SHA-1, SHA-224, 
              SHA-256, SHA-384, SHA-512) are allowed for Hash_DRBG or HMAC_DRBG, only AES-based 
              implementations for CTR_DRBG are allowed.
              <br />
              Note that for FIPS Pub 140-2 Annex C, currently only the method described in 
              NIST-Recommended Random Number Generator Based on ANSI X9.31 Appendix A.2.4, Section 3 
              is valid. Use of this DRBG is disallowed after 2015 per NIST SP 800-131A. The PP will 
              be updated to reflect this; however, developers should begin transitioning from this 
              DRBG as soon as possible.
            </note>
            <aactivity>The evaluator shall perform the following tests, depending on the standard
              to which the RBG conforms. 
              <br />
              Implementations Conforming to FIPS 140-2 Annex C. 
              <br />
              The reference for the tests contained in this section is The Random Number Generator
              Validation System (RNGVS). The evaluators shall conduct the following two tests. Note 
              that the "expected values" are produced by a reference implementation of the algorithm 
              that is known to be correct. Proof of correctness is left to each Scheme.
              <testlist>
                <test>The evaluators shall perform a Variable Seed Test. The evaluators shall
                  provide a set of 128 (Seed, DT) pairs to the <abbr linkend="TSF"/> RBG function, 
                  each 128 bits. The evaluators shall also provide a key (of the length appropriate 
                  to the AES algorithm) that is constant for all 128 (Seed, DT) pairs. The DT value 
                  is incremented by 1 for each set. The seed values shall have no repeats within
                  the set. The evaluators ensure that the values returned by the 
                  <abbr linkend="TSF"/> match the expected values.
                </test>
                <test>
                  The evaluators shall perform a Monte Carlo Test. For this test, they supply
                  an initial Seed and DT value to the <abbr linkend="TSF"/> RBG function; each of 
                  these is 128 bits. The evaluators shall also provide a key (of the length 
                  appropriate to the AES algorithm) that is constant throughout the test. The 
                  evaluators then invoke the <abbr linkend="TSF"/> RBG 10,000 times, with the DT 
                  value being incremented by 1 on each iteration, and the new seed for the 
                  subsequent iteration produced as specified in NIST-Recommended Random Number 
                  Generator Based on ANSI X9.31 Appendix A.2.4 Using the 3-Key Triple DES and AES 
                  Algorithms, Section 3. The evaluators ensure that the 10,000th value produced 
                  matches the expected value.
                </test>
              </testlist>
              Implementations Conforming to NIST Special Publication 800-90A
              <testlist>
                <test>
                  The evaluator shall perform 15 trials for the RNG implementation. If the RNG is
                  configurable, the evaluator shall perform 15 trials for each configuration. The
                  evaluator shall also confirm that the operational guidance contains appropriate
                  instructions for configuring the RNG functionality.
                  <br />
                  If the RNG has prediction resistance enabled, each trial consists of (1) 
                  instantiate DRBG, (2) generate the first block of random bits (3) generate a 
                  second block of random bits (4) uninstantiate. The evaluator verifies that the 
                  second block of random bits is the expected value. The evaluator shall generate 
                  eight input values for each trial. The first is a count (0 – 14). The next three 
                  are entropy input, nonce, and personalization string for the instantiate 
                  operation. The next two are additional input and entropy input for the first call 
                  to generate. The final two are additional input and entropy input for the second
                  call to generate. These values are randomly generated. “generate one block of 
                  random bits” means to generate random bits with number of returned bits equal to 
                  the Output Block Length (as defined in NIST SP 800-90A).
                  <br />
                  If the RNG does not have prediction resistance, each trial consists of (1) 
                  instantiate DRBG, (2) generate the first block of random bits (3) reseed, (4) 
                  generate a second block of random bits (5) uninstantiate. The evaluator verifies 
                  that the second block of random bits is the expected value. The evaluator shall 
                  generate eight input values for each trial. The first is a count (0 – 14). The 
                  next three are entropy input, nonce, and personalization string for the 
                  instantiate operation. The fifth value is additional input to the first call to
                  generate. The sixth and seventh are additional input and entropy input to the call 
                  to reseed. The final value is additional input to the second generate call.
                  <br />
                  The following paragraphs contain more information on some of the input values to 
                  be generated/selected by the evaluator.
                  <br />
                  <b>Entropy input:</b> the length of the entropy input value must equal the seed length.
                  <br />
                  <b>Nonce:</b> If a nonce is supported (CTR_DRBG with no Derivation Function does not use 
                  a nonce), the nonce bit length is one-half the seed length. 
                  <br />
                  <b>Personalization string:</b> The length of the personalization string must be 
                  less then or equal to seed length. If the implementation only supports one 
                  personalization string length, then the same length can be used for both values. 
                  If more than one string length is support, the evaluator shall use personalization 
                  strings of two different lengths. If the implementation does not use a 
                  personalization string, no value needs to be supplied. 
                  <br />
                  <b>Additional input:</b> the additional input bit lengths have the same defaults 
                  and restrictions as the personalization string lengths.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_rbg_ext.3.2" status="sel-based">
            <selection-depends req="fcs_rbg_ext.1.1"/>
            <title> The deterministic RBG shall be seeded by an entropy source that accumulates
              entropy from a platform-based DRBG and <selectables linebreak="yes">
                <selectable>a software-based noise source</selectable>
                <selectable>no other noise source</selectable>
              </selectables> with a minimum of <selectables linebreak="yes">
                <selectable>128 bits</selectable>
                <selectable>256 bits</selectable>
              </selectables> of entropy at least equal to the greatest security strength (according
              to NIST SP 800-57) of the keys and hashes that it will generate. </title>
            <note role="application">This requirement shall be included in <abbr linkend="ST"/>s in which "invoke
              application-implemented DRBG services" is chosen in FCS_RBG_EXT.1.1. For the first
              selection in this  requirement, the <abbr linkend="ST"/> author selects ‘software-based noise source’ if 
              any additional noise sources are used as input to the application’s DRBG. Note that 
              the application must use the platform’s DRBG to seed its DRBG. 
              <br />In the second selection in this requirement, the <abbr linkend="ST"/> author selects the 
              appropriate number of bits of entropy that corresponds to the greatest security 
              strength of the algorithms included in the <abbr linkend="ST"/>. Security strength is defined in Tables 
              2 and 3 of NIST SP 800-57A. For example, if the implementation includes 2048-bit RSA 
              (security strength of 112 bits), AES 128 (security strength 128 bits), and 
              HMAC-SHA-256 (security strength 256 bits), then the <abbr linkend="ST"/> author would select 256 bits.
            </note>
            <aactivity>Documentation shall be produced—and the evaluator shall perform the
              activities—in accordance with Appendix E, “Entropy Documentation and Assessment” and
              the “Clarification to the Entropy Documentation and Assessment Annex”. 
              <br />In the future, specific statistical testing (in line with NIST SP 800-90B) will 
              be required to verify the entropy estimates.
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_cop_ext.1" name="Cryptographic Hashing and Signing">
          <f-element id="fcs_cop_ext.1.1">
            <title>The application shall <selectables linebreak="yes">
                <selectable>perform no cryptographic hashing and signing</selectable>
                <selectable>invoke platform-provided cryptographic 
		  <selectables><selectable>hashing</selectable>
		               <selectable>signing</selectable></selectables>
		</selectable>
                <selectable>invoke application-implemented cryptographic 
		  <selectables><selectable>hashing</selectable>
		               <selectable>signing</selectable></selectables>
                </selectable>
              </selectables> 
	      .
	    </title>
            <note role="application">The evaluator should ensure "invoke platform-provided" is
              selected in cases where the application uses platform APIs to perform cryptographic
              hashing and signing. If the "invoke application-implemented" selection is chosen, then
              additional requirements from FCS_COP_EXT.2 shall be included in the <abbr linkend="ST"/>. </note>
            <aactivity>Requirement met by the platform: The evaluator shall examine the TSS of the
              application to verify that it describes how the platforms digital signature
              functionality is invoked for each operation they are used for in the application. The
              evaluator shall also examine the TSS of the application product’s <abbr linkend="ST"/> to verify that it
              describes how the platforms hash functionality is invoked for each digest size
              selected in the application product’s <abbr linkend="ST"/>. </aactivity>
          </f-element>
        </f-component>
          <f-component id="fcs_cop_ext.2" 
		       name="Cryptographic Hashing and Signing (Selection Based)">
          <f-element id="fcs_cop_ext.2.1" status="sel-based">
            <selection-depends req="fcs_cop_ext.1.1"/>
            <title>The application shall perform cryptographic signature services (generation and
              verification) in accordance with a specified cryptographic algorithm <selectables
                linebreak="yes">
                <selectable>FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section 4 for RSA
                  schemes</selectable>
                <selectable>FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section 5 for ECDSA
                  schemes and implementing "NIST curves" <selectables>
                    <selectable>P-256</selectable>
                    <selectable>P-384</selectable>
                    <selectable>P-521</selectable>
                  </selectables>
                </selectable>
              </selectables> and cryptographic key sizes equivalent to, or greater than, a symmetric
              key strength of 112 bits. </title>
            <aactivity>The evaluator shall perform the following activities based on the selections
              in the <abbr linkend="ST"/>. <testlist>
                <test>ECDSA Algorithm Tests CDSA FIPS 186-4 Signature Generation Test For each
                  supported NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the
                  evaluator shall generate 10 1024-bit long messages and obtain for each message a
                  public key and the resulting signature values R and S. To determine correctness,
                  the evaluator shall use the signature verification function of a known good
                  implementation. ECDSA FIPS 186-4 Signature Verification Test For each supported
                  NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the evaluator
                  shall generate a set of 10 1024-bit message, public key and signature tuples and
                  modify one of the values (message, public key or signature) in five of the 10
                  tuples. The evaluator shall obtain in response a set of 10 PASS/FAIL values. 
                </test>
                <test>RSA Signature Algorithm Tests Signature Generation Test The evaluator shall
                  verify the implementation of RSA Signature Generation by the <abbr linkend="TOE"/>
                  using the Signature Generation Test. To conduct this test the evaluator must 
                  generate or obtain 10 messages from a trusted reference implementation for each 
                  modulus size/SHA combination supported by the <abbr linkend="TSF"/>. The evaluator 
                  shall have the <abbr linkend="TOE"/> use their private key and modulus value to 
                  sign these messages. The evaluator shall verify the correctness of the 
                  <abbr linkend="TSF"/>’s signature using a known good implementation and the 
                  associated public keys to verify the signatures. Signature Verification Test The 
                  evaluator shall perform the Signature Verification test to verify the ability of 
                  the <abbr linkend="TOE"/> to recognize another party’s valid and invalid 
                  signatures. The evaluator shall inject errors into the test vectors produced 
                  during the Signature Verification Test by introducing errors in some of the public 
                  keys, e, messages, IR format, and/or signatures. The <abbr linkend="TOE"/> attempts 
                  to verify the signatures and returns success or failure. </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_cop_ext.2.2" status="sel-based">
            <selection-depends req="fcs_cop_ext.1.1"/>
            <title>
	      The application shall perform cryptographic hashing services in accordance with a specified 
        cryptographic algorithm 
	      <selectables linebreak="yes">
		<selectable>SHA-256</selectable><selectable>SHA-384</selectable><selectable>SHA-512</selectable>
	      </selectables>
	      in addition to
	      <selectables linebreak="yes">
		<selectable>SHA-1</selectable><selectable>no other algorithm</selectable>
	      </selectables>
              and message digest sizes <selectables linebreak="yes">
                <selectable>160</selectable>
                <selectable>256</selectable>
                <selectable>384</selectable>
                <selectable>512</selectable>
              </selectables> bits that meet the following: FIPS Pub 180-4, “Secure Hash Standard.” 
            </title>
            <note role="application">
	      In future versions of this document, SHA-1 may be removed as an option.
	      SHA-1 is not allowed for generating digital signatures and 
	      is strongly discouraged for verification of digital signatures as 
	      there may be risk in accepting these signatures. 
	      The selection of the
              hashing algorithm must correspond to the selection of the message digest size; for
              example, if SHA-1 is chosen, then the only valid message digest size selection would
              be 160 bits. </note>
            <aactivity>The <abbr linkend="TSF"/> hashing functions can be implemented in one of two 
            modes. The first mode is the byte¬oriented mode. In this mode the <abbr linkend="TSF"/> 
            only hashes messages that are an integral number of bytes in length; i.e., the length 
            (in bits) of the message to be hashed is divisible by 8. The second mode is the 
            bit¬oriented mode. In this mode the <abbr linkend="TSF"/> hashes messages of arbitrary 
            length. As there are different tests for each mode, an indication is given in the 
            following sections for the bit¬oriented vs. the byte¬oriented testmacs.The evaluator 
            shall perform all of the following tests for each hash algorithm implemented by the 
            <abbr linkend="TSF"/> and used to satisfy the requirements of this PP.
               <testlist>
                <test>Short Messages Test - Bit oriented Mode The evaluators devise an input set
                  consisting of m+1 messages, where m is the block length of the hash algorithm. The
                  length of the messages range sequentially from 0 to m bits. The message text shall
                  be pseudorandomly generated. The evaluators compute the message digest for each of
                  the messages and ensure that the correct result is produced when the messages are
                  provided to the <abbr linkend="TSF"/>. </test>
                <test>Short Messages Test - Byte oriented Mode The evaluators devise an input set
                  consisting of m/8+1 messages, where m is the block length of the hash algorithm.
                  The length of the messages range sequentially from 0 to m/8 bytes, with each
                  message being an integral number of bytes. The message text shall be
                  pseudorandomly generated. The evaluators compute the message digest for each of
                  the messages and ensure that the correct result is produced when the messages are
                  provided to the <abbr linkend="TSF"/>. </test>
                <test>Selected Long Messages Test - Bit oriented Mode The evaluators devise an input
                  set consisting of m messages, where m is the block length of the hash algorithm.
                  The length of the ith message is 512 + 99*i, where 1 ≤ i ≤ m. The message text
                  shall be pseudorandomly generated. The evaluators compute the message digest for
                  each of the messages and ensure that the correct result is produced when the
                  messages are provided to the <abbr linkend="TSF"/>. </test>
                <test>Selected Long Messages Test - Byte oriented Mode The evaluators devise an
                  input set consisting of m/8 messages, where m is the block length of the hash
                  algorithm. The length of the ith message is 512 + 8*99*i, where 1 ≤ i ≤ m/8. The
                  message text shall be pseudorandomly generated. The evaluators compute the message
                  digest for each of the messages and ensure that the correct result is produced
                  when the messages are provided to the <abbr linkend="TSF"/>. </test>
                <test>Pseudorandomly Generated Messages Test This test is for byte¬oriented
                  implementations only. The evaluators randomly generate a seed that is n bits long,
                  where n is the length of the message digest produced by the hash function to be
                  tested. The evaluators then formulate a set of 100 messages and associated digests
                  by following the algorithm provided in Figure 1 of [SHAVS]. The evaluators then
                  ensure that the correct result is produced when the messages are provided to the
                  <abbr linkend="TSF"/>. </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component> 
        <f-component id="fcs_sto_ext.1" name="Storage of Secrets">
          <f-element id="fcs_sto_ext.1.1">
            <title>The application shall 
              <selectables linebreak="yes">
                <selectable>not store any credentials</selectable>
                <selectable>invoke the mechanisms provided by the platform for any storage of 
                  credentials
                </selectable>
              </selectables>
               to non-volatile memory.</title>
            <note role="application">This requirement ensures that persistent credentials (secret 
              keys, PKI private keys, or passwords) are stored securely when not in use.
            </note>
            <aactivity>The evaluator shall check the TSS to ensure that it lists all persistent 
              credentials (secret keys, PKI private keys, or passwords) needed to meet the 
              requirements in the <abbr linkend="ST"/>. For each of these items, the evaluator shall confirm that the 
              TSS lists for what purpose it is used, and how it is stored. The evaluator shall
              perform the following actions which vary per platform.
              <subaactivity
                platform="blackberry"/>
              <subaactivity platform="android">The evaluator shall verify that the application uses
	      the Android <code>KeyStore</code>, <code>SecretKeyFactory</code> and/or
	      <code>Cipher</code> classes to store credentials. </subaactivity>
              <subaactivity platform="windows">The evaluator shall verify that all certificates are
                stored in the Windows Certificate Store. The evaluator shall verify that other
                secrets, like passwords, are stored in the Windows Credential Manager or stored 
                using the Data Protection API (DPAPI). For Windows Store Apps, the evaluator shall 
                verify that the application is using the ProtectData class and storing credentials 
                in IsolatedStorage.
              </subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that all keys are stored
                within a <code>KeyChain</code>. </subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall verify that all keys are stored with GNOME Keyring or KDE 
		KWallet.
	      </subaactivity>
              <subaactivity platform="Solaris"/>
              <subaactivity platform="OS X">The evaluator shall verify that all credentials are 
                stored within Keychain.</subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_tlsc_ext.1" name="TLS Client Protocol" status="sel-based">
          <f-element id="fcs_tlsc_ext.1.1" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title> The application shall 
              <selectables>
                <selectable>invoke the platform-provided <abbr title="Transport Layer Security">
                  TLS</abbr> 1.2</selectable>
                <selectable>implement <abbr title="Transport Layer Security">TLS</abbr> 1.2 (RFC
                  5246)</selectable>
              </selectables> supporting the following ciphersuites: <p/>Mandatory Ciphersuites:
              TLS_RSA_WITH_AES_128_CBC_SHA as defined in RFC 5246 <p/>Optional Ciphersuites:
                <selectables linebreak="yes">
                <selectable>TLS_RSA_WITH_AES_256_CBC_SHA as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA as defined in RFC 5246</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA as defined in RFC 4492</selectable>
                <selectable>TLS_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_RSA_WITH_AES_256_CBC_ SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_ SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_ SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>no other ciphersuite</selectable>
              </selectables>
	           .
            </title>
            <note role="application">The ciphersuites to be tested in the evaluated configuration 
              are limited by this requirement. The <abbr title="Security Target" linkend="ST">ST
              </abbr> author should select the optional ciphersuites that are supported; if there 
              are no ciphersuites supported other than the mandatory suites, then “None” should be 
              selected. It is necessary to limit the ciphersuites that can be used in an evaluated 
              configuration administratively on the server in the test environment. The Suite B 
              algorithms listed above (RFC 6460) are the preferred algorithms for implementation. 
              TLS_RSA_WITH_AES_128_CBC_SHA is required in order to ensure compliance with RFC 5246. 
             <br />
              These requirements will be revisited as new 
              <abbr title="Transport Layer Security">TLS</abbr> versions are standardized by the 
              IETF.
             <br />
              If any ciphersuites are selected using ECDHE, then FCS_TLSC_EXT.1.5 is required.
            </note>
            <aactivity>
              The evaluator shall check the description of the implementation of this protocol in 
              the <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> to ensure that 
              the ciphersuites supported are specified. The evaluator shall check the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> to ensure that the 
              ciphersuites specified include those listed for this component. The evaluator shall 
              also check the operational guidance to ensure that it contains instructions on 
              configuring the <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> so that 
              TLS conforms to the description in the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr>. The evaluator shall 
              also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall establish a 
                  <abbr title="Transport Layer Security">TLS</abbr> connection using each of the 
                  ciphersuites specified by the requirement. This connection may be established as 
                  part of the establishment of a higher-level protocol, e.g., as part of an EAP 
                  session. It is sufficient to observe the successful negotiation of a ciphersuite 
                  to satisfy the intent of the test; it is not necessary to examine the 
                  characteristics of the encrypted traffic in an attempt to discern the ciphersuite 
                  being used (for example, that the cryptographic algorithm is 128-bit AES and not 
                  256-bit AES).
                </test>
                <test>
                  The evaluator shall attempt to establish the connection using a server with a 
                  server certificate that contains the Server Authentication purpose in the 
                  extendedKeyUsage field and verify that a connection is established. The evaluator 
                  will then verify that the client rejects an otherwise valid server certificate 
                  that lacks the Server Authentication purpose in the extendedKeyUsage field and a 
                  connection is not established. Ideally, the two certificates should be identical 
                  except for the extendedKeyUsage field.
                </test>
                <test>
                  The evaluator shall send a server certificate in the 
                  <abbr title="Transport Layer Security">TLS</abbr> connection that the does not 
                  match the server-selected ciphersuite (for example, send a ECDSA certificate while 
                  using the TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite or send a RSA certificate while 
                  using one of the ECDSA ciphersuites.) The evaluator shall verify that the 
                  <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> disconnects after 
                  receiving the server’s Certificate handshake message.
                </test>
                <test>
                  The evaluator shall configure the server to select the TLS_NULL_WITH_NULL_NULL 
                  ciphersuite and verify that the client denies the connection.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic: 
                  <testlist>
                    <test>
                      Change the <abbr title="Transport Layer Security">TLS</abbr> version selected 
                      by the server in the Server Hello to a non-supported 
                      <abbr title="Transport Layer Security">TLS</abbr> version (for example 1.3 
                      represented by the two bytes 03 04) and verify that the client rejects the 
                      connection.
                    </test>
                    <test>
                      Modify at least one byte in the server’s nonce in the Server Hello handshake 
                      message, and verify that the client rejects the Server Key Exchange handshake 
                      message (if using a DHE or ECDHE ciphersuite) or that the server denies the 
                      client’s Finished handshake message.
                    </test>
                    <test>
                      Modify the server’s selected ciphersuite in the Server Hello handshake 
                      message to be a ciphersuite not presented in the Client Hello handshake 
                      message. The evaluator shall verify that the client rejects the connection 
                      after receiving the Server Hello.
                    </test>
                    <test>
                      Modify the signature block in the Server’s Key Exchange handshake message, and 
                      verify that the client rejects the connection after receiving the Server Key 
                      Exchange message.
                    </test>
                    <test>
                      Modify a byte in the Server Finished handshake message, and verify that the 
                      client sends a fatal alert upon receipt and does not send any application 
                      data.
                    </test>
                    <test>
                      Send an garbled message from the Server after the Server has issued the 
                      ChangeCipherSpec message and verify that the client denies the connection.
                    </test>
                  </testlist>
                </test>
              </testlist>
            </aactivity>
            </f-element>
          <f-element id="fcs_tlsc_ext.1.2" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>
              The application shall verify that the presented identifier matches the reference
              identifier according to RFC 6125.
            </title>
            <note role="application">
              The rules for verification of identity are described in Section 6 of RFC 6125. The 
              reference identifier is established by the user (e.g. entering a URL into a web 
              browser or clicking a link), by configuration (e.g. configuring the name of a mail 
              server or authentication server), or by an application (e.g. a parameter of an API) 
              depending on the application service. Based on a singular reference identifier’s 
              source domain and application service type (e.g. HTTP, SIP, LDAP), the client 
              establishes all reference identifiers which are acceptable, such as a Common Name for 
              the Subject Name field of the certificate and a (case-insensitive) DNS name, URI name, 
              and Service Name for the Subject Alternative Name field. The client then compares this 
              list of all acceptable reference identifiers to the presented identifiers in the 
              <abbr title="Transport Layer Security">TLS</abbr> server’s certificate.
             <br />
              The preferred method for verification is the Subject Alternative Name using DNS names, 
              URI names, or Service Names. Verification using the Common Name is required for the 
              purposes of backwards compatibility. Additionally, support for use of IP addresses in 
              the Subject Name or Subject Alternative name is discouraged as against best practices 
              but may be implemented.  Finally, the client should avoid constructing reference 
              identifiers using wildcards. However, if the presented identifiers include wildcards, 
              the client must follow the best practices regarding matching; these best practices are 
              captured in the assurance activity.
            </note>
            <aactivity>
              The evaluator shall ensure that the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes the 
              client’s method of establishing all reference identifiers from the 
              application-configured reference identifier, including which types of reference 
              identifiers are supported (e.g Common Name, DNS Name, URI Name, Service Name, or other 
              application-specific Subject Alternative Names) and whether IP addresses and wildcards 
              are supported.  The evaluator shall ensure that this description identifies whether 
              and the manner in which certificate pinning is supported or used by the 
              <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr>.
             <br />
              The evaluator shall verify that the AGD guidance includes instructions for setting the 
              reference identifier to be used for the purposes of certificate validation in 
              <abbr title="Transport Layer Security">TLS</abbr>.
             <br />
              The evaluator shall configure the reference identifier according to the AGD guidance 
              and perform the following tests during a 
              <abbr title="Transport Layer Security">TLS</abbr> connection:
              <testlist>
                <test>
                  The evaluator shall present a server certificate that does not contain an 
                  identifier in either the Subject Alternative Name (SAN) or Common Name (CN) that 
                  matches the reference identifier. The evaluator shall verify that the connection 
                  fails.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that matches 
                  the reference identifier, contains the SAN extension, but does not contain an 
                  identifier in the SAN that matches the reference identifier.  The evaluator shall 
                  verify that the connection fails. The evaluator shall repeat this test for each 
                  supported SAN type.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that matches 
                  the reference identifier and does not contain the SAN extension. The evaluator 
                  shall verify that the connection succeeds.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that does not 
                  match the reference identifier but does contain an identifier in the SAN that 
                  matches.  The evaluator shall verify that the connection succeeds.
                </test>
                <test>
                  The evaluator shall perform the following wildcard tests with each supported type 
                  of reference identifier: 
                  <testlist>
                    <test>The evaluator shall present a server certificate containing a wildcard 
                      that is not in the left-most label of the presented identifier 
                      (e.g. foo.*.example.com) and verify that the connection fails.
                    </test>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard in the 
                      left-most label but not preceding the public suffix (e.g. *.example.com). 
                      The evaluator shall configure the reference identifier with a single left-most 
                      label (e.g. foo.example.com) and verify that the connection succeeds. The 
                      evaluator shall configure the reference identifier without a left-most label 
                      as in the certificate (e.g. example.com) and verify that the connection fails. 
                      The evaluator shall configure the reference identifier with two left-most 
                      labels (e.g. bar.foo.example.com) and verify that the connection fails.
                    </test>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard in the 
                      left-most label immediately preceding the public suffix (e.g. *.com). The 
                      evaluator shall configure the reference identifier with a single left-most 
                      label (e.g. foo.com) and verify that the connection fails. The evaluator shall 
                      configure the reference identifier with two left-most labels 
                      (e.g. bar.foo.com) and verify that the connection fails.
                    </test>
                  </testlist></test>
                <test>
                  [conditional] If URI or Service name reference identifiers are supported, the 
                  evaluator shall configure the <abbr title="Domain Name System">DNS</abbr> name and 
                  the service identifier.  The evaluator shall present a server certificate 
                  containing the correct <abbr title="Domain Name System">DNS</abbr> name and 
                  service identifier in the URIName or SRVName fields of the SAN and verify that the 
                  connection succeeds.  The evaluator shall repeat this test with the wrong service 
                  identifier (but correct <abbr title="Domain Name System">DNS</abbr> name) and 
                  verify that the connection fails.
                </test>
                <test>
                  [conditional] If pinned certificates are supported the evaluator shall present a 
                  certificate that does not match the pinned certificate and verify that the 
                  connection fails.
                </test>
              </testlist></aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.3" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall only establish a trusted channel if the peer certificate is 
              valid.
            </title>
            <note role="application">
              Validity is determined by the identifier verification, certificate path, the 
              expiration date, and the revocation status in accordance with RFC 5280. Certificate 
              validity shall be tested in accordance with testing performed for FIA_X509_EXT.1.
             <br />
              For <abbr title="Transport Layer Security">TLS</abbr> connections, this channel shall 
              not be established if the peer certificate is invalid.
            </note>
            <aactivity>
              The evaluator shall use <abbr title="Transport Layer Security">TLS</abbr> as a 
              function to verify that the validation rules in FIA_X509_EXT.1.1 are adhered to and 
              shall perform the following additional test:
              <testlist>
                <test>
                  The evaluator shall demonstrate that a peer using a certificate without a valid 
                  certification path results in an authenticate failure. Using the administrative 
                  guidance, the evaluator shall then load the trusted CA certificate(s) needed to 
                  validate the peer's certificate, and demonstrate that the connection succeeds. The 
                  evaluator then shall delete one of the CA certificates, and show that the 
                  connection fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.4" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>
              The application shall support mutual authentication using X.509v3 certificates.
            </title>
            <note role="application">
              The use of X.509v3 certificates for <abbr title="Transport Layer Security">TLS</abbr> 
              is addressed in FIA_X509_EXT.2.1. This requirement adds that this use must include the 
              client must be capable of presenting a certificate to a 
              <abbr title="Transport Layer Security">TLS</abbr> server for 
              <abbr title="Transport Layer Security">TLS</abbr> mutual authentication.
            </note>
            <aactivity>
              The evaluator shall ensure that the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> description required 
              per FIA_X509_EXT.2.1 includes the use of client-side certificates for TLS mutual 
              authentication.
             <br />
              The evaluator shall verify that the AGD guidance required per FIA_X509_EXT.2.1 
              includes instructions for configuring the client-side certificates for 
              <abbr title="Transport Layer Security">TLS</abbr> mutual authentication.
             <br />
              The evaluator shall also perform the following test:
              <testlist>
                <test>
                  The evaluator shall perform the following modification to the traffic:
                  <ul>
                    <li>
                      Configure the server to require mutual authentication and then modify a byte 
                      in a CA field in the Server’s Certificate Request handshake message. The 
                      modified CA field must not be the CA used to sign the client’s certificate. 
                      The evaluator shall verify the connection is unsuccessful.
                    </li>
                  </ul>
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.5" status="sel-based">
            <selection-depends req="fcs_tlsc_ext.1.1"/>
            <title>
              The application shall present the supported Elliptic Curves Extension in the Client 
              Hello with the following NIST curves: 
              <selectables>
                <selectable>secp256r1</selectable>
                <selectable>secp384r1</selectable>
                <selectable>secp521r1</selectable>
              </selectables> and no other curves.
            </title>
            <note role="application">
              This requirement limits the elliptic curves allowed for authentication and key 
              agreement to the NIST curves from FCS_COP.1(3) and FCS_CKM.1(1) and FCS_CKM.1(2). This 
              extension is required for clients supporting Elliptic Curve ciphersuites.
            </note>
            <aactivity>
              The evaluator shall verify that 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes the 
              supported Elliptic Curves Extension and whether the required behavior is performed by 
              default or may be configured. If the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> indicates that the 
              supported Elliptic Curves Extension must be configured to meet the requirement, the 
              evaluator shall verify that AGD guidance includes configuration of the supported 
              Elliptic Curves Extension.
             <br />
              The evaluator shall also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall configure the server to perform an ECDHE key exchange message 
                  in the <abbr title="Transport Layer Security">TLS</abbr> connection using a 
                  non-supported ECDHE curve (for example, P-192) and shall verify that the 
                  <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> disconnects after 
                  receiving the server's Key Exchange handshake message.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.6" status="objective">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>
              The application shall present the signature_algorithms extension in the Client Hello 
              with the supported_signature_algorithms value containing the following hash 
              algorithms: 
              <selectables>
                <selectable>SHA256</selectable>
                <selectable>SHA384</selectable>
                <selectable>SHA512</selectable>
              </selectables> and no other hash algorithms.
            </title>
            <note role="application">
              This requirement limits the hashing algorithms supported for the purpose of digital 
              signature verification by the client and limits the server to the supported hashes for 
              the purpose of digital signature generation by the server. The signature_algorithm 
              extension is only supported by <abbr title="Transport Layer Security">TLS</abbr> 1.2.
            </note>
            <aactivity>
              The evaluator shall verify that 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes the 
              signature_algorithm extension and whether the required behavior is performed by 
              default or may be configured. If the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> indicates that the 
              signature_algorithm extension must be configured to meet the requirement, the 
              evaluator shall verify that AGD guidance includes configuration of the 
              signature_algorithm extension.
             <br /> 
              The evaluator shall also perform the following test:
              <testlist>
                <test>
                  The evaluator shall configure the server to send a certificate in the 
                  <abbr title="Transport Layer Security">TLS</abbr> connection that is not supported 
                  according to the Client’s HashAlgorithm enumeration within the 
                  signature_algorithms extension (for example, send a certificate with a SHA-1 
                  signature). The evaluator shall verify that the 
                  <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> disconnects after 
                  receiving the server’s Certificate handshake message.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_dtls_ext.1" name="DTLS Implementation" status="sel-based">
          <f-element id="fcs_dtls_ext.1.1" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall implement the DTLS protocol in accordance with
              DTLS 1.2 (RFC 6347).
            </title>
            <aactivity>The evaluator shall perform the assurance activities listed for TLS to verify
              this component</aactivity>
          </f-element>
          <f-element id="fcs_dtls_ext.1.2" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall implement the requirements in TLS (FCS_TLSC_EXT.1) for the
              DTLS implementation, except where variations are allowed according to DTLS 1.2 
              (RFC 6347).
            </title>
            <note role="application">
              Differences between DTLS 1.2 and TLS 1.2 are outlined in RFC 6347; otherwise the 
              protocols are the same. In particular, for the applicable security characteristics 
              defined for the <abbr linkend="TSF"/>, the two protocols do not differ. Therefore, all 
              application notes and assurance activities that are listed for 
              <abbr title="Transport Layer Security">TLS</abbr> apply to the DTLS implementation.
            </note>
            <aactivity>
	      The evaluator shall perform the assurance activities listed for TLS to verify
              this component.
	    </aactivity>
          </f-element>
          <f-element id="fcs_dtls_ext.1.3" status="sel-based">
            <selection-depends req="ftp_dit_ext.1.1"/>
            <title>The application shall not establish a trusted communication channel if the peer 
              certificate is deemed invalid. 
            </title>
            <note role="application">
              Validity is determined by the certificate path, the expiration date, and the 
              revocation status in accordance with RFC 5280.
            </note>
            <aactivity>
              <testlist>
                <test>
                  The evaluator shall attempt to establish a connection with a DTLS server, observe 
                  the traffic with a packet analyzer, and verify that the connection succeeds and 
                  that the traffic is identified as DTLS.
                </test>
                <br />
                Other tests are performed in conjunction with the Assurance Activity listed for 
                FCS_TLSC_EXT.2.
                Certificate validity shall be tested in accordance with testing performed for 
                FIA_X509_EXT.1, and the evaluator shall perform the following test.
                <br />
                <test>
                  The evaluator shall demonstrate that using a certificate without a valid 
                  certification path results in the function failing. Using the administrative 
                  guidance, the evaluator shall then load a certificate or certificates to the 
                  Trust Anchor Database needed to validate the certificate to be used in the 
                  function, and demonstrate that the function succeeds. The evaluator then shall 
                  delete one of the certificates, and show that the function fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Identification and Authentication (FIA)" id="fia">
        <f-component id="fia_x509_ext.1" name="X.509 Certificate Validation" status="sel-based">
          <f-element id="fia_x509_ext.1.1" status="sel-based">
            <selection-depends req="FIXME"/>
            <title>
              The application shall validate certificates in accordance with the following rules:
              <ul>
                <li>
                  RFC 5280 certificate validation and certificate path validation.
                </li>
                <li>
                  The certificate path must terminate with a trusted CA certificate.
                </li>
                <li>
                  The application shall validate a certificate path by ensuring the presence of the 
                  basicConstraints extension and that the CA flag is set to TRUE for all CA 
                  certificates.
                </li>
                <li>
                  The application shall validate the revocation status of the certificate using 
                  <selectables>
                    <selectable>
                      the Online Certificate Status Protocol (OCSP) as specified in RFC 2560
                    </selectable>
                    <selectable>
                      a Certificate Revocation List (CRL) as specified in RFC 5759
                    </selectable>
                  </selectables>
                  .
                </li>
                <li>
                  The application shall validate the extendedKeyUsage field according to the 
                  following rules:
                  <ul>
                    <li>
                      Certificates used for trusted updates and executable code integrity 
                      verification shall have the Code Signing purpose 
                      (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.
                    </li>
                    <li>
                      Server certificates presented for 
                      <abbr title="Transport Layer Security">TLS</abbr> shall have the Server 
                      Authentication purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the 
                      extendedKeyUsage field.
                    </li>
                    <li>
                      Client certificates presented for 
                      <abbr title="Transport Layer Security">TLS</abbr> shall have the Client 
                      Authentication purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the 
                      extendedKeyUsage field.
                    </li>
                    <li>
                      S/MIME certificates presented for email encryption and signature shall have 
                      the Email Protection purpose (id-kp 4 with OID 1.3.6.1.5.5.7.3.4) in the 
                      extendedKeyUsage field.
                    </li>
                    <li>
                      OCSP certificates presented for OCSP responses shall have the OCSP Signing 
                      purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the extendedKeyUsage field.
                    </li>
                    <li>
                      Server certificates presented for EST shall have the CMC Registration 
                      Authority (RA) purpose (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28) in the 
                      extendedKeyUsage field.
                    </li>
                  </ul>
                </li>
              </ul>
            </title>
            <note role="application">
              FIA_X509_EXT.1.1 lists the rules for validating certificates. The <abbr linkend="ST"/> author shall 
              select whether revocation status is verified using OCSP or CRLs. FIA_X509_EXT.2 
              requires that certificates are used for _______; this use requires that the 
              extendedKeyUsage rules are verified. Certificates may optionally be used for _______ 
              and, if implemented, must be validated to contain the corresponding extendedKeyUsage.
              <br />
              Regardless of the selection of <abbr linkend="TSF"/> or <abbr linkend="TOE"/> 
              platform, the validation is expected to end in a trusted root CA certificate in a root 
              store managed by the platform.
            </note>
            <aactivity>
              The evaluator shall ensure the <abbr linkend="TSS"/> describes where the check of 
              validity of the certificates takes place. The evaluator ensures the 
              <abbr linkend="TSS"/> also provides a description of the certificate path validation 
              algorithm.
              <br /> 
              The tests described must be performed in conjunction with the other certificate 
              services assurance activities, including the functions in FIA_X509_EXT.2.1. The tests 
              for the extendedKeyUsage rules are performed in conjunction with the uses that require 
              those rules. The evaluator shall create a chain of at least four certificates: the 
              node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.
              <testlist>
                <test>
                  The evaluator shall demonstrate that validating a certificate without a valid 
                  certification path results in the function failing. The evaluator shall then load 
                  a certificate or certificates as trusted CAs needed to validate the certificate to 
                  be used in the function, and demonstrate that the function succeeds. The evaluator 
                  shall then delete one of the certificates, and show that the function fails.
                </test>
                <test>
                  The evaluator shall demonstrate that validating an expired certificate results in 
                  the function failing.
                </test>
                <test>
                  The evaluator shall test that the <abbr linkend="TOE"/> can properly handle 
                  revoked certificates-–conditional on whether CRL or OCSP is selected; if both are 
                  selected, then a test shall be performed for each method. The evaluator shall test 
                  revocation of the node certificate and revocation of the intermediate CA 
                  certificate (i.e. the intermediate CA certificate should be revoked by the root 
                  CA). The evaluator shall ensure that a valid certificate is used, and that the 
                  validation function succeeds. The evaluator then attempts the test with a 
                  certificate that has been revoked (for each method chosen in the selection) to 
                  ensure when the certificate is no longer valid that the validation function fails.
                </test>
                <test>
                  If OCSP is selected, the evaluator shall configure the OCSP server or use a 
                  man-in-the-middle tool to present a certificate that does not have the OCSP 
                  signing purpose and verify that validation of the OCSP response fails. If CRL is 
                  selected, the evaluator shall configure the CA to sign a CRL with a certificate 
                  that does not have the cRLsign key usage bit set, and verify that validation of 
                  the CRL fails.
                </test>
                <test>
                  The evaluator shall modify any byte in the first eight bytes of the certificate 
                  and demonstrate that the certificate fails to validate. (The certificate will fail 
                  to parse correctly.)
                </test>
                <test>
                  The evaluator shall modify any byte in the last byte of the certificate and 
                  demonstrate that the certificate fails to validate. (The signature on the 
                  certificate will not validate.)
                </test>
                <test>
                  The evaluator shall modify any byte in the public key of the certificate and 
                  demonstrate that the certificate fails to validate. (The signature on the 
                  certificate will not validate.)
                </test>
              </testlist> 
            </aactivity>
          </f-element>
          <f-element id="fia_x509_ext.1.2" status="sel-based">
            <selection-depends req="FIXME"/>
            <title>
              The application shall only treat a certificate as a CA certificate if the 
              basicConstraints extension is present and the CA flag is set to TRUE.
            </title>
            <note role="application">
              This requirement applies to certificates that are used and processed by the 
              <abbr linkend="TSF"/> and restricts the certificates that may be added as trusted CA 
              certificates.
            </note>
            <aactivity>
              The tests described must be performed in conjunction with the other certificate 
              services assurance activities, including the functions in FIA_X509_EXT.2.1. The 
              evaluator shall create a chain of at least four certificates: the node certificate to 
              be tested, two Intermediate CAs, and the self-signed Root CA.
              <testlist>
                <test>
                  The evaluator shall construct a certificate path, such that the certificate of the 
                  CA issuing the <abbr linkend="TOE"/>’s certificate does not contain the 
                  basicConstraints extension. The validation of the certificate path fails.
                </test>
                <test>
                  The evaluator shall construct a certificate path, such that the certificate of the 
                  CA issuing the <abbr linkend="TOE"/>’s certificate has the cA flag in the 
                  basicConstraints extension not set. The validation of the certificate path fails.
                </test>
                <test>
                  The evaluator shall construct a certificate path, such that the certificate of the 
                  CA issuing the <abbr linkend="TOE"/>’s certificate has the CA flag in the 
                  basicConstraints extension set to TRUE. The validation of the certificate path 
                  succeeds.
                </test>
              </testlist> 
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fia_x509_ext.2" name="X.509 Certificate Authentication" status="sel-based">
          <f-element id="fia_x509_ext.2.1" status="sel-based">
            <selection-depends req="FIXME"/>
            <title>
              The application shall use X.509v3 certificates as defined by RFC 5280 to support 
              authentication for 
              <selectables>
                <selectable>
                  IPsec
                </selectable>
                <selectable>
                  TLS
                </selectable>
                <selectable>
                  SSH
                </selectable>
              </selectables>, and 
              <selectables>
                <selectable>
                  code signing for system software updates
                </selectable>
                <selectable>
                  code signing for integrity verification
                </selectable>
                <selectable>
                  <assignable>
                    other uses
                  </assignable>
                </selectable>
                <selectable>
                  no additional uses
                </selectable>
              </selectables>. 
            </title>
            <note role="application">
              The <abbr linkend="ST"/> author’s selection shall match the selection of FTP_ITC.1.1. Certificates may optionally be used for trusted updates of system software (FPT_TUD_EXT.1) and for integrity verification (FPT_TST_EXT.2).
            </note>
            <!-- 
            <aactivity>
              Currently no AA's available.
            </aactivity>
            -->
          </f-element>
          <f-element id="fia_x509_ext.2.2" status="sel-based">
            <selection-depends req="FIXME"/>
            <title>
              When the application cannot establish a connection to determine the validity of a 
              certificate, the application shall  
              <selectables>
                <selectable>
                  allow the administrator to choose whether to accept the certificate in these cases
                </selectable>
                <selectable>
                  accept the certificate
                </selectable>
                <selectable>
                  not accept the certificate
                </selectable>
              </selectables>. 
            </title>
            <note role="application">
              Often a connection must be established to perform a verification of the revocation 
              status of a certificate - either to download a CRL or to perform OCSP. The selection 
              is used to describe the behavior in the event that such a connection cannot be 
              established (for example, due to a network error). If the <abbr linkend="TOE"/> has 
              determined the certificate valid according to all other rules in FIA_X509_EXT.1, 
              the behavior indicated in the selection shall determine the validity. The 
              <abbr linkend="TOE"/> must not accept the certificate if it fails any of the other 
              validation rules in FIA_X509_EXT.1.
            </note>
            <aactivity>
              The evaluator shall check the <abbr linkend="TSS"/> to ensure that it describes how 
              the <abbr linkend="TOE"/> chooses which certificates to use, and any necessary 
              instructions in the administrative guidance for configuring the operating environment 
              so that the <abbr linkend="TOE"/> can use the certificates.
              <br />
              The evaluator shall examine the <abbr linkend="TSS"/> to confirm that it describes the 
              behavior of the <abbr linkend="TOE"/> when a connection cannot be established during 
              the validity check of a certificate used in establishing a trusted channel. The 
              evaluator shall verify that any distinctions between trusted channels are described. 
              If the requirement that the administrator is able to specify the default action, then 
              the evaluator shall ensure that the operational guidance contains instructions on how 
              this configuration action is performed.
              <br />
              The evaluator shall perform the following test for each trusted channel:
              <testlist>
                <test>
                  The evaluator shall demonstrate that using a valid certificate that requires 
                  certificate validation checking to be performed in at least some part by 
                  communicating with a non-<abbr linkend="TOE"/> IT entity. The evaluator shall then 
                  manipulate the environment so that the <abbr linkend="TOE"/> is unable to verify 
                  the validity of the certificate, and observe that the action selected in 
                  FIA_X509_EXT.2.2 is performed. If the selected action is 
                  administrator-configurable, then the evaluator shall follow the operational 
                  guidance to determine that all supported administrator-configurable options behave 
                  in their documented manner.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fia_x509_ext.3" name="X.509 Certificate Enrollment" status="sel-based">
          <f-element id="fia_x509_ext.3.1" status="sel-based">
            <selection-depends req="FIXME"/>
            <title>
              The application shall generate a Certificate Request Message as specified by RFC 2986 
              and be able to provide the following information in the request: public key and 
              <selectables>
                <selectable>
                  device-specific information
                </selectable>
                <selectable>
                  Common Name
                </selectable>
                <selectable>
                  Organization
                </selectable>
                <selectable>
                  Organizational Unit
                </selectable>
                <selectable>
                  Country
                </selectable>
              </selectables>. 
            </title>
            <note role="application">
              The public key is the public key portion of the public-private key pair generated by 
              the <abbr linkend="TOE"/> as specified in FCS_CKM.1.1.
            </note>
            <!-- 
            <aactivity>
              Currently no AA's available.
            </aactivity>
            -->
          </f-element>
          <f-element id="fia_x509_ext.3.2" status="sel-based">
            <selection-depends req="FIXME"/>
            <title>
              The application shall validate the chain of certificates from the Root CA upon 
              receiving the CA Certificate Response.
            </title>
            <aactivity>
              If the <abbr linkend="ST"/> author selects "device-specific information", the evaluator shall verify 
              that the <abbr linkend="TSS"/> contains a description of the device-specific fields 
              used in certificate requests.
              <br />
              The evaluator shall check to ensure that the operational guidance contains 
              instructions on requesting certificates from a CA, including generation of a 
              Certificate Request Message.  If the <abbr linkend="ST"/> author selects "Common Name", "Organization", 
              "Organizational Unit", or "Country", the evaluator shall ensure that this guidance 
              includes instructions for establishing these fields before creating the certificate 
              request message.
              <br />
              <testlist>
                <test>
                  The evaluator shall use the operational guidance to cause the 
                  <abbr linkend="TOE"/> to generate a certificate request message.  The evaluator 
                  shall capture the generated message and ensure that it conforms to the format 
                  specified. The evaluator shall confirm that the certificate request provides the 
                  public key and other required information, including any necessary user-input 
                  information.
                </test>
                <test>
                  The evaluator shall demonstrate that validating a certificate response message 
                  without a valid certification path results in the function failing. The evaluator 
                  shall then load a certificate or certificates as trusted CAs needed to validate 
                  the certificate response message, and demonstrate that the function succeeds. The 
                  evaluator shall then delete one of the certificates, and show that the function 
                  fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <!--  
       We may handle this in a different way
  -->
      <subsection title="Privacy (FPR)" id="fpr">
        <f-component id="fpr_ano_ext.1" name="Use of Third Party Libraries">
          <f-element id="fpr_ano_ext.1.1">
            <title> The application shall be packaged with only
	      <assignable> list of third-party libraries</assignable>. 
	    </title>
        <note role="application"> 
	       The intention of this requirement is for the evaluator to discover and document whether the 
         application is including unknown third-party (e.g. adware) or known malicious software 
         (e.g. known malware) that could present a threat to the user's privacy.
        </note>
      <aactivity> 
	      The evaluator shall install the application and survey its installation directory for dynamic libraries. 
	      that libraries found to be packaged with or employed by the application are limited to 
	      those in the assignment.
	      The evaluator shall also run a virus scanner with the most current virus 
	      definitions against the application files and verify that no files are flagged as malicious.
	    </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Trusted Path/Channel (FTP)" id="ftp">
        <f-component id="ftp_dit_ext.1" name="Protection of Data in Transit">
          <f-element id="ftp_dit_ext.1.1">
            <title>The application shall 
	    <selectables linebreak="yes">
              <selectable>not transmit any data</selectable>
              <selectable>not transmit any sensitive data</selectable>
              <selectable>encrypt all transmitted sensitive data with
                <selectables atleastone="yes">
		  <selectable><abbr title="Transport Layer Security">TLS</abbr></selectable>
		  <selectable><abbr title="Datagram Transport Layer Security">DTLS</abbr></selectable>
		</selectables>
              </selectable>
              <selectable>encrypt all transmitted data with
                <selectables atleastone="yes">
		  <selectable><abbr title="Transport Layer Security">TLS</abbr></selectable>
		  <selectable><abbr title="Datagram Transport Layer Security">DTLS</abbr></selectable>
		</selectables>
              </selectable>
            </selectables>
	    to provide communication channel between itself and another trusted IT product.
	    </title>
            <note role="application">
	      For the purpose of this document HTTPS is considered a TLS tunnel.
	      Extended packages may override this requirement to provide for other protocols.
	      Encryption is not required for applications transmitting data that is not sensitive.
	    </note>  
            <aactivity>
	      The evaluator shall prepare a test environment which makes it possible to
              sniff network traffic between the platform and any remote systems. 
	      The evaluator shall install and run the application, and exercise its functionality. 
	      The evaluator shall ensure that no sensitive data is transmitted 
	      without appropriate protections.
	    </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Protection of the TSF (FPT)" id="fpt">
        <f-component id="fpt_api_ext.1" name="Use of Supported Services and APIs">
          <f-element id="fpt_api_ext.1.1">
            <title>The application shall only use supported platform <abbr linkend="API"
            />s.</title>
            <aactivity>
              The evaluator shall verify that the TSS lists the supported platform <abbr linkend="API"/>s 
              used in the application.
              The evaluator shall then compare the list with the platform documentation and ensure that all 
              <abbr linkend="API"/>s listed in the TSS appear in the platform vendor's documentation.
            </aactivity>
          </f-element>
          <f-element id="fpt_api_ext.1.2" status="objective">
            <title> The application 
              <selectables>
                <selectable>shall use platform-provided libraries</selectable>
                <selectable>does not implement functionality</selectable>
                </selectables>
                 for parsing <assignable> list of formats parsed that are included in the 
                 IANA MIME media types</assignable>.
            </title>
            <note role="application">
	      The IANA MIME types are listed at
              <a href='http://www.iana.org/assignments/media-types'>
		http://www.iana.org/assignments/media-types
	      </a> 
	      and include many image, audio, video, and content file formats. 
	      This requirement does not apply if providing parsing services is the purpose of the 
        application.
	    </note>
            <aactivity>
	      The evaluator shall verify that the TSS lists the IANA MIME media types
	      (as described by <a href='http://www.iana.org/assignments/media-types'>
	      http://www.iana.org/assignments/media-types</a> )
	      for all formats the application processes
	      and that it maps those formats to parsing services provided by the platform.
	    </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_aex_ext.1" name="Anti-Exploitation Capabilities">
          <f-element id="fpt_aex_ext.1.1">
            <title> The application shall not request to map memory at an explicit address.
              <note role="application"> Requesting a memory mapping at an explicit address
                subverts address space layout randomization (<abbr linkend="ASLR"/>). </note>
            </title>
            <aactivity> The evaluator shall ensure that the <abbr linkend="TSS"/> 
              describes the compiler flags used to enable <abbr linkend="ASLR"/> when the
              application is compiled. The evaluator shall perform either a static or dynamic
              analysis to determine that no memory mappings are placed at an explicit and
              consistent address. The method of doing so varies per platform. 
	      <subaactivity platform="blackberry"> The evaluator shall run
                the same application on two different BlackBerry systems and run a tool that will
                list all memory mapped addresses for the application. The evaluator shall then
                verify the two different instances share no mapping locations. </subaactivity>
              <subaactivity platform="android">The evaluator shall run the same application on two
                different Android systems. Connect via ADB and inspect /proc/PID/maps. Ensure the
                two different instances share no mapping locations.</subaactivity>
              <subaactivity platform="windows"> The evaluator shall run the same application on two
                different Windows systems and run a tool that will list all memory mapped addresses
                for the application. The evaluator shall then verify the two different instances
                share no mapping locations. The Microsoft sysinternals tool, VMMap, could be used to
                view memory addresses of a running application. </subaactivity>
              <subaactivity platform="ios">The evaluator shall perform a static analysis to search
                for any mmap calls (or <abbr linkend="API"/> calls that call mmap), and ensure that
                no arguments are provided that request a mapping at a fixed address</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the same application on two different Linux systems. 
		The evaluator shall then compare their memory maps using 
		<code>pmap -x PID </code>
		to ensure the two different instances share no mapping locations.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the same application on two different Solaris systems. 
		The evaluator shall then compare their memory maps using 
		<code>pmap -x PID </code>
		to ensure the two different instances share no mapping locations.
	      </subaactivity>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
          <f-element id="fpt_aex_ext.1.2">
            <title>
	      The application shall 
	      <selectables linebreak="yes">
		<selectable> 
		  not allocate any memory region with both write and execute permissions 
	        </selectable>
		<selectable>
		  allocate memory regions with write and execute permissions for only
		  <assignable> list of functions performing just-in-time compilation</assignable>
		</selectable>
	      </selectables>
	      .
	    </title>
            <note role="application"> Requesting a memory mapping with both write and execute
              permissions subverts the platform protection provided by <abbr linkend="DEP"/>. 
	      If the application performs no just-in-time compiling, then the first selection must be chosen.
	    </note>
            <aactivity> 
	      The evaluator shall verify that no memory mapping requests are made with write and execute permissions.
	      The method of doing so varies per platform.
              <subaactivity platform="blackberry"/>
              <subaactivity platform="android"> The evaluator shall perform static analysis on the
                application to verify that both <ul>
                  <li> mmap can never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </li>
                  <li> mprotect is never invoked.</li>
                </ul> </subaactivity>
              <subaactivity platform="windows"> The evaluator shall use a tool such as Microsoft's 
                BinScope Binary Analyzer to confirm that the application passes the NXCheck. The 
                evaluator may also ensure that the <code>/NXCOMPAT</code> flag was used during 
                compilation to verify that DEP protections are enabled for the application. 
              </subaactivity>
              <subaactivity platform="ios"> The evaluator shall perform static analysis on the
                application to verify that mprotect is never invoked with the PROT_EXEC permission. 
              </subaactivity>
              <subaactivity platform="linux"> The evaluator shall perform static analysis on the
                application to verify that both <ul>
                  <li> mmap is never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </li>
                  <li> mprotect is never invoked with the PROT_EXEC permission.</li>
                </ul>  </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall perform static analysis on the
                application to verify that both <ul>
                  <li> mmap is never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </li>
                  <li> mprotect is never invoked with the PROT_EXEC permission.</li>
                </ul></subaactivity>
              <subaactivity platform="OS X"> The evaluator shall perform static analysis on the
                application to verify that mprotect is never invoked with the PROT_EXEC permission.
              </subaactivity>
            </aactivity>
          </f-element>
          <!--      <f-element id="fpt_aex_ext.1.3">
        <title>The application shall not implement its own dynamic memory allocation
        functionality, unless that functionality also includes corruption
        detection.</title>
      </f-element> 
       Note: We have no AA, nor much traction here - and push-back from vendors.
       Maybe this is best considered for a future version.
-->
          <f-element id="fpt_aex_ext.1.3">
            <title>The application shall be compatible with security features provided by the
              platform vendor.</title>
            <note role="application">This requirement is designed to ensure that platform security 
              features do not need to be disabled in order for the application to run.</note>
            <aactivity>
	      The evaluator shall configure the platform in the ascribed manner and 
	      carry out one of the prescribed tests;
	      <subaactivity platform="blackberry"> The evaluator shall ensure that the
                application can successfully run on the latest version of the BlackBerry OS. 
              </subaactivity>
              <subaactivity platform="android"> The evaluator shall ensure that the application can
                run with SE for Android enabled and enforcing.
	      </subaactivity>
              <subaactivity platform="windows">For both classic desktop and Windows Store
                applications, the evaluator shall configure the latest version of Microsoft's
                Enhanced Mitigation Experience Toolkit (EMET) to protect the application. The
                evaluator shall then run the application and verify that the application does not 
                crash while protected by EMET. 
              </subaactivity>
              <subaactivity platform="ios"> The evaluator shall ensure that the application can
                successfully run on the latest version of iOS. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall ensure that the application can
                successfully run on a system with SELinux enabled and enforcing.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall ensure that the application can run with 
		Solaris Trusted Extensions enabled and enforcing.
	      </subaactivity>
              <subaactivity platform="OS X"/>
            </aactivity>
          </f-element>
          <f-element id="fpt_aex_ext.1.4">
            <title>
              The application shall not write user-modifiable files to directories that contain 
              executable files unless explicitly directed by the user to do so.
	    </title>
	    <note role="application">
	      Executables and user-modifiable files may not share the same parent directory, but
	      may share directories above the parent.
	    </note>
            <aactivity>
	      The evaluator shall run the application and determine where it writes its files.
	      For files where the user does not choose the destination, the evaluator shall 
	      check whether the destination directory contains executable files.
	      This varies per platform: 
	      <subaactivity platform="blackberry">
		The evaluator shall consider the requirement met because the platform forces
                applications to write all data within the application working directory
                (sandbox).
	      </subaactivity>
              <subaactivity platform="android"> 
		The evaluator shall run the program, mimicking normal usage, and note where all files are written. 
		The evaluator shall ensure that there are no executable files stored under <path>/data/data/<i>package</i>/</path> where <i>package</i> is the Java package of the application.
              </subaactivity>
              <subaactivity platform="windows">For Windows Store Apps the evaluator shall consider
                the requirement met because the platform forces applications to write all data
                within the application working directory (sandbox). For Windows Desktop Applications
                the evaluator shall run the program, mimicking normal usage, and note where all
                files are written. The evaluator shall ensure that there are no executable files
                stored in the same directories to which the application wrote and no data files
                in the application’s install directory.</subaactivity>
              <subaactivity platform="ios">The evaluator shall consider the requirement met because
                the platform forces applications to write all data within the application working
                directory (sandbox).</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the program, mimicking normal usage, 
		and note where all files are written. 
		The evaluator shall ensure that there are no executable files stored in the 
		same directories to which the application wrote.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the program, mimicking normal usage, 
		and note where all files are written. 
		The evaluator shall ensure that there are no executable files stored in the 
		same directories to which the application wrote.
	      </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall run the program, mimicking normal
                usage, and note where all files are written. The evaluator shall ensure that there
                are no executable files stored in the same directories to which the application
                wrote. </subaactivity>
            </aactivity></f-element>
          <f-element id="fpt_aex_ext.1.5">
            <title>The application must be compiled with stack-based buffer overflow protection
              enabled.</title>
            <aactivity>The evaluator shall ensure that the <abbr linkend="TSS"/> section of the <abbr linkend="ST"/>
              describes the compiler flag used to enable stack-based buffer overflow protection in
              the application. The evaluator shall perform a static analysis to verify that
              stack-based buffer overflow protection is present. The method of doing so varies per
              platform: <subaactivity platform="blackberry"> The evaluator shall ensure that the
                -fstack-protector-strong or -fstack-protector-all flags are used. The
                -fstack-protector-all flag is preferred but -fstack-protector-strong is acceptable. 
              </subaactivity>
              <subaactivity platform="android"> Applications that are entirely Java run in the Java
                machine and do not need traditional stack protection. For applications using Java
                Native Interface (JNI), the evaluator shall ensure that the
                  <code>-fstack-protector-strong</code> or <code>-fstack-protector-all</code> flags
                are used. The <code>-fstack-protector-all</code> flag is preferred but
                  <code>-fstack-protector-strong</code> is acceptable. </subaactivity>
              <subaactivity platform="windows">The evaluator shall review the TSS and verify that
                the <code>/GS</code> flag was used during compilation. The evaluator shall run a tool,
                like <util>BinScope</util>, that can verify the correct usage of <code>/GS</code>
              </subaactivity>
              <subaactivity platform="ios">
                If the application is compiled using GCC or Xcode, the
                evaluator shall ensure that the <code>-fstack-protector-strong</code> or
                <code>-fstack-protector-all</code> flags are used. The
                <code>-fstack-protector-all</code> flag is preferred but
                <code>-fstack-protector-strong</code> is acceptable.
    If the application is built using any other compiler, then the evaluator shall determine that 
    appropriate stack-protection has been used during the build process.
              </subaactivity>
              <subaactivity platform="linux">
		If the application is compiled using GCC, the
                evaluator shall ensure that the <code>-fstack-protector-strong</code> or
                <code>-fstack-protector-all</code> flags are used. The
                <code>-fstack-protector-all</code> flag is preferred but
                <code>-fstack-protector-strong</code> is acceptable. If the application is built
                using clang, it must be compiled and linked with the
                <code>-fsanitize=address</code> flag.
		If the application is built using any other compiler, then the evaluator shall determine that appropriate stack-protection has been used during the build process.
	      </subaactivity>
              <subaactivity platform="Solaris">
	      	If the application is compiled using GCC, the
                evaluator shall ensure that the <code>-fstack-protector-strong</code> or
                <code>-fstack-protector-all</code> flags are used. The
                <code>-fstack-protector-all</code> flag is preferred but
                <code>-fstack-protector-strong</code> is acceptable. If the application is built
                using clang, it must be compiled and linked with the
                <code>-fsanitize=address</code> flag.
		If the application is built using any other compiler, then the evaluator shall determine that appropriate stack-protection has been used during the build process.
	      </subaactivity>
              <subaactivity platform="OS X">
                If the application is compiled using GCC or Xcode, the
                evaluator shall ensure that the <code>-fstack-protector-strong</code> or
                <code>-fstack-protector-all</code> flags are used. The
                <code>-fstack-protector-all</code> flag is preferred but
                <code>-fstack-protector-strong</code> is acceptable.
    If the application is built using any other compiler, then the evaluator shall determine that 
    appropriate stack-protection has been used during the build process.
              </subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_tud_ext.1" name="Integrity for Installation and Update">
          <!-- TO DO: Cite references. -->
          <f-element id="fpt_tud_ext.1.1">
            <title>The application shall <selectables atleastone="yes">
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables> to check for updates and patches to the application software. </title>
            <note role="application">This requirement is about the ability to "check" for updates.
              The actual installation of any updates should be done by the platform. This requirement
              is intended to ensure that the application can check for updates provided by the vendor,
              as updates provided by another source may contain malicious code.
            </note>
            <aactivity>
	      The evaluator shall check for an update using procedures described in the documentation
	      and verify that the application does not issue an error.
	      If it is updated or if it reports that no update is available this requirement is considered to be met.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.2">
            <title>The application shall be distributed using the format of the platform-supported
              package manager. </title>
            <aactivity> The evaluator shall verify that application updates are distributed in the
              format supported by the platform. This varies per platform: <subaactivity
                platform="blackberry"> The evaluator shall ensure that the application is packaged
                in the Blackberry (BAR) format. </subaactivity>
              <subaactivity platform="android"> The evaluator shall ensure that the application is
                packaged in the Android application package (APK) format. </subaactivity>
              <subaactivity platform="windows"> The evaluator shall ensure that the application is
                packaged in the Standard Windows Installer (MSI) format or the Windows App Store
                package (APPX) format. </subaactivity>
              <subaactivity platform="ios"> The evaluator shall ensure that the application is
                packaged in the IPA format. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall ensure that the application is
                packaged in the format of the package management infrastructure of the chosen
                distribution. For example, applications running on Red Hat and Red Hat derivatives
                should be packaged in rpm format. Applications running on Debian and Debian
                derivatives should be packaged in deb format. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall ensure that the application is
                packaged in the PKG format. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall ensure that application is packaged
                in the DMG format, the PKG format, or the MPKG format. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.3">
            <title>The application shall be packaged such that its removal results in the deletion 
              of all traces of the application, with the exception of configuration settings, output
              files, and audit/log events.</title>
            <note role="application">Applications bundled with the system/firmware image are not
              subject to this requirement if the user is unable to remove the application through
              means provided by the OS.</note>
            <aactivity>
	      The evaluator shall record the path of every file on the entire 
	      filesystem prior to installation of the application, and 
	      then install and run the application.
	      Aftwards, the evaluator shall then uninstall the application, and
	      compare the resulting filesystem to the initial record to verify 
	      that no files, other than configuration,
	      output, and audit/log files, have been added to the filesystem.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.4">
            <title> The application shall not download, modify, replace or update its own binary
              code. </title>
            <note role="application">This requirement applies to the code of the application; it
              does not apply to mobile code technologies that are designed for download and
              execution by the application. </note>
            <aactivity>The evaluator shall verify that the application's executable files are
              not changed by the application. The evaluator shall complete the following test:
              <testlist>
                <test>The evaluator shall hash all the executable binary files of the application,
                  then run the application and exercise all features of the application as described
                  in the TSS. The evaluator shall then hash all the executable binary files a second
                  time and verify that the hashes are identical to the first set of hashes taken.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.5">
            <title>The application shall <selectables atleastone="yes">
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables>
              to query the current version of the application software.
            </title>
            <aactivity>The evaluator shall query the application for the current version of the software
              according to the operational user guidance (AGD_OPE.1) and shall verify that the
              current version matches that of the documented and installed version.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.6">
            <title>The application installation and update packages, including all files contained
              within, shall be signed by the vendor in conformance with NIST SP 800-89, 
              Recommendation for Obtaining Assurances for Digital Signature Applications, using an 
              approved digital signature algorithm as specified in NIST FIPS 186-3, Digital 
              Signature Standard, that provides at least 112 bits of security strength, in 
              accordance with NIST SP 800-131A, Transitions: Recommendation for Transitioning the 
              Use of Cryptographic Algorithms and Key Lengths.
            </title>
            <note role="application">Signatures of signed installation and update packages should be
              verified by the platform's application installation mechanism. Since the
              existence of such a mechanism is a requirement on the platform (and not the
              application), it is not specified here.</note>
            <aactivity>Developers must document their process for cryptographically signing updates
              and installation packages. The evaluator shall verify that the documentation conforms
              with the above requirement.
              <!-- The evaluator shall perform the following tests: 
              <testlist>
                <test>The evaluator shall attempt to install an unsigned patch or update and shall
                  verify that installation fails. </test>
                <test>The evaluator shall sign a patch or update with an invalid certificate. The
                  evaluator shall attempt to install the patch or update and shall verify that
                  installation fails. </test>
                <test>The evaluator shall sign a patch or update with a certificate containing a
                  missing or invalid code signing entendedKeyUsage extension. The evaluator shall
                  attempt to install the patch or update and shall verify that installation fails. 
                </test>
                <test>The evaluator shall attempt to install a signed patch or update and shall
                  verify that installation is successful and happens automatically after the
                  signature is verified. </test>
              </testlist>
            -->
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_idv_ext.1" name="Software Identification and Versions">
          <f-element id="fpt_idv_ext.1.1" status="objective" targetdate="July 1, 2015">
            <title>The application shall include <abbr title="Software Identification">SWID</abbr>
              tags that comply with the minimum requirements for
              <abbr title="Software Identification">SWID</abbr> tag from ISO/IEC 19770-2:2009
              standard</title>
            <note role="application">Valid SWID tags must contain a SoftwareIdentity
              element and an Entity element as defined in the ISO/IEC 19770-2:2009
              standard. SWID tags must be stored with a .swidtag file
              extensions as defined in the ISO/IEC 19770-2:2009.
            </note>
            <aactivity>The evaluator shall install the application, then check for the
              existence of SWID tags in a .swidtag file. The evaluator shall open the
              file and verify that is contains at least a SoftwareIdentity element and
              an Entity element.</aactivity>
          </f-element>
        </f-component>
      </subsection>
    </section>
    <section title="Security Assurance Requirements" id="SARs">The Security Objectives for the <abbr
        linkend="TOE"/> in <secref linkend="req"/> were constructed to address threats identified in
        <secref linkend="threats"/>. <abbr linkend="SFR"/>s in <secref linkend="SFRs"/> are a formal
      instantiation of the Security Objectives. The PP draws from <abbr
        title="Evaluation Assurance Level">EAL</abbr>1 the <abbr linkend="SAR"/>s) to frame the
      extent to which the evaluator assesses the documentation applicable for the evaluation and
      performs independent testing. <br/>While this section contains the complete set of SARs from
      the CC, the Assurance Activities to be performed by an evaluator are detailed in <secref
        linkend="SFRs"/> as well as in this section. The general model for evaluation of 
        <abbr linkend="TOE"/>s against <abbr linkend="ST"/>s written to conform to this PP is as follows: <br/>After 
        the <abbr linkend="ST"/> has been approved for evaluation, the <abbr class="expanded"
        title="Information Technology Security Evaluation Facility">ITSEF</abbr> will obtain the
      <abbr linkend="TOE"/>, supporting environmental IT, and the administrative guides for the 
      <abbr linkend="TOE"/>. The Assurance Activities listed in the <abbr linkend="ST"/> (which will be refined by the 
      ITSEF to be <abbr linkend="TOE"/>-specific, either within the <abbr linkend="ST"/> or in a separate document) 
      will then be performed by the ITSEF. The ITSEF is also expected to perform all of the actions 
      mandated by the <cite linkend="bibCEM"/> for EAL1. The results of these activities will be 
      documented and presented (along with the administrative guidance used) for validation. <br/>
      For each family, "Developer Notes" are provided on the developer action elements to clarify 
      what, if any, additional documentation/activity needs to be provided by the developer. For the 
      content/presentation and evaluator activity elements, additional assurance activities (to 
      those already contained in <secref linkend="SFRs"/> and the CEM for EAL1) are described as a 
      whole for the family rather than for each element. Additionally, the assurance activities 
      described in this section are complementary to those specified in <secref linkend="SFRs"/>. 
      <br/>The <abbr linkend="TOE"/> security assurance requirements, summarized in the table below, 
      identify the management and evaluative activities required to meet the objectives identified 
      in <secref linkend="obj"/> of this PP. <!-- Generate a table here, based on the next sections 
    -->
      <subsection title="Class ASE: Security Target" id="ase">As per ASE activities defined in <cite
          linkend="bibCEM"/>.</subsection>
      <subsection title="Class ADV: Development" id="adv">The information about the <abbr
          linkend="TOE"/> is contained in the guidance documentation available to the end user as
        well as the <abbr linkend="TSS"/> portion of the <abbr linkend="ST"/>. The <abbr linkend="TOE"/> developer 
        must concur with the description of the product that is contained in the TSS as it relates 
        to the functional requirements. The Assurance Activities contained in 
        <secref linkend="SFRs"/> should provide the <abbr linkend="ST"/> authors with sufficient information to 
        determine the appropriate content for the TSS section. 
        <a-component id="adv_upd_ext.1" name="Support for Updates (ADV_UPD_EXT.1)">
          <a-element id="adv_upd_ext.1.1">
            <title>Application developers must support updates to their products for purposes of
              fixing security vulnerabilities.</title>
          </a-element>
          <a-element id="adv_upd_ext.1.2">
            <title>
	      Application updates must not change the security properties or configuration of
              the product without publically disclosing or specifically notifying the user of 
	      the specific changes.
	    </title>
          </a-element>
          <a-element id="adv_upd_ext.1.3">
            <title>
	      Application developers must commit to supporting their applications with updates
              for a publicly documented period of time.
	    </title>
	    <note role="application">
	      At a minimum, support must include providing remedies to customers to 
	      address publically known security vulnerabilities.
	    </note>
          </a-element>
        </a-component>
        <a-component id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)">The functional
          specification describes the <abbr title="TSF Interface">TSFI</abbr>s. It is not necessary
          to have a formal or complete specification of these interfaces. Additionally, because
            <abbr linkend="TOE"/>s conforming to this PP will necessarily have interfaces to the
          Operational Environment that are not directly invokable by <abbr linkend="TOE"/> users, 
          there is little point specifying that such interfaces be described in and of themselves 
          since only indirect testing of such interfaces may be possible. For this PP, the 
          activities for this family should focus on understanding the interfaces presented in the 
          <abbr linkend="TSS"/> in response to the functional requirements and the interfaces 
          presented in the AGD documentation. No additional “functional specification” documentation 
          is necessary to satisfy the assurance activities specified. The interfaces that need to be 
          evaluated are characterized through the information needed to perform the assurance 
          activities listed, rather than as an independent, abstract list. <h4>Developer action 
          elements:</h4>
          <a-element id="ADV_FSP.1.1D">
            <title>The developer shall provide a functional specification.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2D">
            <title>The developer shall provide a tracing from the functional specification to the
              SFRs.</title>
            <note role="application">As indicated in the introduction to this section, the
              functional specification is comprised of the information contained in the AGD_OPE and
              AGD_PRE documentation. The developer may reference a website accessible to application
              developers and the evaluator. The assurance activities in the functional requirements
              point to evidence that should exist in the documentation and <abbr linkend="TSS"/>
              section; since these are directly associated with the SFRs, the tracing in element
              ADV_FSP.1.2D is implicitly already done and no additional documentation is
              necessary.</note>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="ADV_FSP.1.1C">
            <title>The functional specification shall describe the purpose and method of use for
              each SFR-enforcing and SFR-supporting <abbr title="TSF Interface">TSFI</abbr>.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2C">
            <title>The functional specification shall identify all parameters associated with each
              SFR-enforcing and SFR-supporting <abbr title="TSF Interface">TSFI</abbr>.</title>
          </a-element>
          <a-element id="ADV_FSP.1.3C">
            <title>The functional specification shall provide rationale for the implicit
              categorization of interfaces as SFR-non-interfering.</title>
          </a-element>
          <a-element id="ADV_FSP.1.4C">
            <title>The tracing shall demonstrate that the SFRs trace to <abbr title="TSF Interface"
                >TSFI</abbr>s in the functional specification.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="ADV_FSP.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2E">
            <title>The evaluator shall determine that the functional specification is an accurate
              and complete instantiation of the SFRs.</title>
          </a-element>
          <aactivity>There are no specific assurance activities associated with these SARs, except
            ensuring the information is provided. The functional specification documentation is
            provided to support the evaluation activities described in <secref linkend="SFRs"/>, and
            other activities described for AGD, ATE, and AVA SARs. The requirements on the content
            of the functional specification information is implicitly assessed by virtue of the
            other assurance activities being performed; if the evaluator is unable to perform an
            activity because the there is insufficient interface information, then an adequate
            functional specification has not been provided.</aactivity>
        </a-component>
      </subsection>
      <subsection id="agd" title="Class AGD: Guidance Documentation">The guidance documents will be
        provided with the <abbr linkend="ST"/>. Guidance must include a description of how the IT personnel verifies
        that the Operational Environment can fulfill its role for the security functionality. The
        documentation should be in an informal style and readable by the IT personnel. Guidance must
        be provided for every operational environment that the product supports as claimed in the
        <abbr linkend="ST"/>. This guidance includes Instructions to successfully install the <abbr linkend="TSF"/> in
        that environment; and Instructions to manage the security of the <abbr linkend="TSF"/> as a 
        product and as a component of the larger operational environment. Guidance pertaining to 
        particular security functionality is also provided; requirements on such guidance are 
        contained in the assurance activities specified with each requirement. 
        <a-component id="agd_ope.1" name="Operational User Guidance (AGD_OPE.1)">
          <h4>Developer action elements:</h4>
          <a-element id="AGD_OPE.1.1D">
            <title>The developer shall provide operational user guidance.</title>
            <note role="application">The operation user guidance does not have to be contained in a
              single document. Guidance to users, administrators and application developers can be
              spread among documents or web pages. Where appropriate, the guidance documentation is
              expressed in the eXtensible Configuration Checklist Description Format (XCCDF) to
              support security automation. Rather than repeat information here, the developer should
              review the assurance activities for this component to ascertain the specifics of the
              guidance that the evaluator will be checking for. This will provide the necessary
              information for the preparation of acceptable guidance.</note>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="AGD_OPE.1.1C">
            <title>The operational user guidance shall describe, for each user role, the
              user-accessible functions and privileges that should be controlled in a secure
              processing environment, including appropriate warnings.</title>
            <note role="application">User and administrator are to be considered in the definition
              of user role.</note>
          </a-element>
          <a-element id="AGD_OPE.1.2C">
            <title>The operational user guidance shall describe, for each user role, how to use the
              available interfaces provided by the <abbr linkend="TOE"/> in a secure manner.</title>
          </a-element>
          <a-element id="AGD_OPE.1.3C">
            <title>The operational user guidance shall describe, for each user role, the available
              functions and interfaces, in particular all security parameters under the control of
              the user, indicating secure values as appropriate.</title>
          </a-element>
          <a-element id="AGD_OPE.1.4C">
            <title>The operational user guidance shall, for each user role, clearly present each
              type of security-relevant event relative to the user-accessible functions that need to
              be performed, including changing the security characteristics of entities under the
              control of the <abbr linkend="TSF"/>.</title>
          </a-element>
          <a-element id="AGD_OPE.1.5C">
            <title>The operational user guidance shall identify all possible modes of operation of
              the <abbr linkend="TOE"/> (including operation following failure or operational
              error), their consequences, and implications for maintaining secure operation.</title>
          </a-element>
          <a-element id="AGD_OPE.1.6C">
            <title>The operational user guidance shall, for each user role, describe the security
              measures to be followed in order to fulfill the security objectives for the
              operational environment as described in the <abbr linkend="ST"/>.</title>
          </a-element>
          <a-element id="AGD_OPE.1.7C">
            <title>The operational user guidance shall be clear and reasonable.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="AGD_OPE.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            <aactivity>Some of the contents of the operational guidance will be verified by the
              assurance activities in <secref linkend="SFRs"/> and evaluation of the <abbr
                linkend="TOE"/> according to the <cite linkend="bibCEM"/>. The following additional
              information is also required. If cryptographic functions are provided by the 
              <abbr linkend="TOE"/>, the operational guidance shall contain instructions for 
              configuring the cryptographic engine associated with the evaluated configuration of 
              the <abbr linkend="TOE"/>. It shall provide a warning to the administrator that use of 
              other cryptographic engines was not evaluated nor tested during the CC evaluation of 
              the <abbr linkend="TOE"/>. The documentation must describe the process for verifying 
              updates to the <abbr linkend="TOE"/> by verifying a digital signature – this may
              be done by the <abbr linkend="TOE"/> or the underlying platform. The evaluator shall 
              verify that this process includes the following steps: Instructions for obtaining the 
              update itself. This should include instructions for making the update accessible to 
              the <abbr linkend="TOE"/> (e.g., placement in a specific directory). Instructions for 
              initiating the update process, as well as discerning whether the process was 
              successful or unsuccessful. This includes generation of the hash/digital signature. 
              The <abbr linkend="TOE"/> will likely contain security functionality that does not 
              fall in the scope of evaluation under this PP. The operational guidance shall make it 
              clear to an administrator which security functionality is covered by the evaluation 
              activities.</aactivity>
          </a-element>
        </a-component>
        <a-component id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">
          <h4>Developer action elements:</h4>
          <a-element id="AGD_PRE.1.1D">
            <title>The developer shall provide the <abbr linkend="TOE"/>, including its preparative
              procedures.</title>
            <note role="application">As with the operational guidance, the developer should look to
              the assurance activities to determine the required content with respect to preparative
              procedures.</note>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="AGD_PRE.1.1C">
            <title>The preparative procedures shall describe all the steps necessary for secure
              acceptance of the delivered <abbr linkend="TOE"/> in accordance with the developer's
              delivery procedures.</title>
          </a-element>
          <a-element id="AGD_PRE.1.2C">
            <title>The preparative procedures shall describe all the steps necessary for secure
              installation of the <abbr linkend="TOE"/> and for the secure preparation of the
              operational environment in accordance with the security objectives for the operational
              environment as described in the <abbr linkend="ST"/>.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="AGD_PRE.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="AGD_PRE.1.2E">
            <title>The evaluator shall apply the preparative procedures to confirm that the <abbr
                linkend="TOE"/> can be prepared securely for operation.</title>
            <aactivity>As indicated in the introduction above, there are significant expectations
              with respect to the documentation—especially when configuring the operational
              environment to support <abbr linkend="TOE"/> functional requirements. The evaluator 
              shall check to ensure that the guidance provided for the <abbr linkend="TOE"/> 
              adequately addresses all platforms claimed for the <abbr linkend="TOE"/> in the <abbr linkend="ST"/>.
            </aactivity>
          </a-element>
        </a-component>
      </subsection>
      <subsection id="alc" title="Class ALC: Life-cycle Support">
        <a-component id="alc_cmc.1" name="Labeling of the TOE (ALC_CMC.1)">This component is
          targeted at identifying the <abbr linkend="TOE"/> such that it can be distinguished from
          other products or versions from the same vendor and can be easily specified when being
          procured by an end user. <h4>Developer action elements:</h4>
          <a-element id="alc_cmc.1.1d">
            <title>The developer shall provide the <abbr linkend="TOE"/> and a reference for the
              <abbr linkend="TOE"/>.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="alc_cmc.1.1c">
            <title>The <abbr linkend="TOE"/> shall be labeled with a unique reference.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="alc_cmc.1.1e">
            <title>The evaluator <i>shall confirm</i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator shall check the <abbr linkend="ST"/> to ensure that it contains an identifier
              (such as a product name/version number) that specifically identifies the version that
              meets the requirements of the <abbr linkend="ST"/>. Further, the evaluator shall check the AGD guidance
              and <abbr linkend="TOE"/> samples received for testing to ensure that the version
              number is consistent with that in the <abbr linkend="ST"/>. If the vendor maintains a web site
              advertising the <abbr linkend="TOE"/>, the evaluator shall examine the information on 
              the web site to ensure that the information in the <abbr linkend="ST"/> is sufficient to distinguish the
              product.</aactivity>
          </a-element>
        </a-component>
        <a-component id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">Given the scope of the <abbr
            linkend="TOE"/> and its associated evaluation evidence requirements, this component’s
          assurance activities are covered by the assurance activities listed for ALC_CMC.1.
            <h4>Developer action elements:</h4>
          <a-element id="alc_cms.1.1d">
            <title>The developer shall provide a configuration list for the <abbr linkend="TOE"
              />.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="alc_cms.1.1c">
            <title>The configuration list shall include the following: the <abbr linkend="TOE"/>
              itself; and the evaluation evidence required by the SARs.</title>
          </a-element>
          <a-element id="alc_cms.1.2c">
            <title>The configuration list shall uniquely identify the configuration items.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="alc_cms.1.1e">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            <aactivity>The "evaluation evidence required by the SARs" in this PP is limited to the
              information in the <abbr linkend="ST"/> coupled with the guidance provided to administrators and users
              under the AGD requirements. By ensuring that the <abbr linkend="TOE"/> is specifically
              identified and that this identification is consistent in the <abbr linkend="ST"/> and in the AGD
              guidance (as done in the assurance activity for ALC_CMC.1), the evaluator implicitly
              confirms the information required by this component. Life-cycle support is targeted
              aspects of the developer’s life-cycle and instructions to providers of applications
              for the developer’s devices, rather than an in-depth examination of the <abbr
                linkend="TSF"/> manufacturer’s development and configuration management process.
              This is not meant to diminish the critical role that a developer’s practices play in
              contributing to the overall trustworthiness of a product; rather, it’s a reflection on
              the information to be made available for evaluation. <br/> The evaluator shall ensure
              that the developer has identified (in guidance documentation for application
              developers concerning the targeted platform) one or more development environments
              appropriate for use in developing applications for the developer’s platform. For each
              of these development environments, the developer shall provide information on how to
              configure the environment to ensure that buffer overflow protection mechanisms in the
              environment(s) are invoked (e.g., compiler flags). The evaluator shall ensure that
              this documentation also includes an indication of whether such protections are on by
              default, or have to be specifically enabled. The evaluator shall ensure that the 
              <abbr linkend="TSF"/> is uniquely identified (with respect to other products from the 
              <abbr linkend="TSF"/> vendor), and that documentation provided by the developer in 
              association with the requirements in the <abbr linkend="ST"/> is associated with the 
              <abbr linkend="TSF"/> using this unique identification.</aactivity>
          </a-element>
        </a-component>
      </subsection>
      <subsection id="ate" title="Class ATE: Tests">Testing is specified for functional aspects of
        the system as well as aspects that take advantage of design or implementation weaknesses.
        The former is done through the ATE_IND family, while the latter is through the AVA_VAN
        family. At the assurance level specified in this PP, testing is based on advertised
        functionality and interfaces with dependency on the availability of design information. One
        of the primary outputs of the evaluation process is the test report as specified in the
        following requirements. <a-component id="ate_ind.1"
          name="Independent Testing – Conformance (ATE_IND.1)"> Testing is performed to confirm the
          functionality described in the <abbr linkend="TSS"/> as well as the administrative
          (including configuration and operational) documentation provided. The focus of the testing
          is to confirm that the requirements specified in <secref linkend="SFRs"/> being met,
          although some additional testing is specified for SARs in <secref linkend="SARs"/>. The
          Assurance Activities identify the additional testing activities associated with these
          components. The evaluator produces a test report documenting the plan for and results of
          testing, as well as coverage arguments focused on the platform/<abbr linkend="TOE"/>
          combinations that are claiming conformance to this PP. Given the scope of the 
          <abbr linkend="TOE"/> and its associated evaluation evidence requirements, this 
          component’s assurance activities are covered by the assurance activities listed for 
          ALC_CMC.1. <h4>Developer action elements:</h4>
          <a-element id="ate_ind.1.1d">
            <title>The developer shall provide the <abbr linkend="TOE"/> for testing.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="ate_ind.1.1c">
            <title>The configuration list shall include the following: the <abbr linkend="TOE"/>
              itself; and the evaluation evidence required by the SARs.</title>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="ate_ind.1.1e">
            <title>The evaluator <i>shall confirm</i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
          </a-element>
          <a-element id="ate_ind.1.2e">
            <title>The evaluator <i>shall test</i> a subset of the <abbr linkend="TSF"/> to confirm
              that the <abbr linkend="TSF"/> operates as specified.</title>
            <note role="application">The evaluator shall test the application on the most current
              fully patched version of the platform.</note>
            <aactivity>The evaluator shall prepare a test plan and report documenting the testing
              aspects of the system, including any application crashes during testing. The evaluator
              shall determine the root cause of any application crashes and include that information
              in the report. The test plan covers all of the testing actions contained in
              the <cite linkend="bibCEM"/> and the body of this PP’s Assurance Activities. While it
              is not necessary to have one test case per test listed in an Assurance Activity, the
              evaluator must document in the test plan that each applicable testing requirement in
              the <abbr linkend="ST"/> is covered. The test plan identifies the platforms to be tested, and for those
              platforms not included in the test plan but included in the <abbr linkend="ST"/>, the test plan provides
              a justification for not testing the platforms. This justification must address the
              differences between the tested platforms and the untested platforms, and make an
              argument that the differences do not affect the testing to be performed. It is not
              sufficient to merely assert that the differences have no affect; rationale must be
              provided. If all platforms claimed in the <abbr linkend="ST"/> are tested, then no rationale is
              necessary. The test plan describes the composition of each platform to be tested, and
              any setup that is necessary beyond what is contained in the AGD documentation. It
              should be noted that the evaluator is expected to follow the AGD documentation for
              installation and setup of each platform either as part of a test or as a standard
              pre-test condition. This may include special test drivers or tools. For each driver or
              tool, an argument (not just an assertion) should be provided that the driver or tool
              will not adversely affect the performance of the functionality by the <abbr
                linkend="TOE"/> and its platform. This also includes the configuration of the
              cryptographic engine to be used. The cryptographic algorithms implemented by this
              engine are those specified by this PP and used by the cryptographic protocols being
              evaluated (IPsec, TLS, SSH). The test plan identifies high-level test objectives
              as well as the test procedures to be followed to achieve those objectives. These
              procedures include expected results. The test report (which could just be an annotated
              version of the test plan) details the activities that took place when the test
              procedures were executed, and includes the actual results of the tests. This shall be
              a cumulative account, so if there was a test run that resulted in a failure; a fix
              installed; and then a successful re-run of the test, the report would show a “fail”
              and “pass” result (and the supporting details), and not just the “pass”
              result.</aactivity>
          </a-element>
        </a-component>
      </subsection>
      <subsection id="ava" title="Class AVA: Vulnerability Assessment">For the first generation of
        this protection profile, the evaluation lab is expected to survey open sources to discover
        what vulnerabilities have been discovered in these types of products. In most cases, these
        vulnerabilities will require sophistication beyond that of a basic attacker. Until
        penetration tools are created and uniformly distributed to the evaluation labs, the
        evaluator will not be expected to test for these vulnerabilities in the <abbr linkend="TOE"
        />. The labs will be expected to comment on the likelihood of these vulnerabilities given
        the documentation provided by the vendor. This information will be used in the development
        of penetration testing tools and for the development of future protection profiles.
          <a-component id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">
          <h4>Developer action elements:</h4>
          <a-element id="AVA_VAN.1.1D">
            <title>The developer shall provide the <abbr linkend="TOE"/> for testing.</title>
          </a-element>
          <h4>Content and presentation elements:</h4>
          <a-element id="AVA_VAN.1.1C">
            <title>The <abbr linkend="TOE"/> shall be suitable for testing.</title>
            <note role="application"> The application to be evaluated shall not be obfuscated or
              packed in such a way as to disrupt analysis </note>
          </a-element>
          <h4>Evaluator action elements:</h4>
          <a-element id="AVA_VAN.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="AVA_VAN.1.2E">
            <title>The evaluator shall perform a search of public domain sources to identify
              potential vulnerabilities in the <abbr linkend="TOE"/>.</title>
          </a-element>
          <a-element id="AVA_VAN.1.3E">
            <title>The evaluator shall conduct penetration testing, based on the identified
              potential vulnerabilities, to determine that the <abbr linkend="TOE"/> is resistant to
              attacks performed by an attacker possessing Basic attack potential.</title>
            <aactivity>As with ATE_IND, the evaluator shall generate a report to document their
              findings with respect to this requirement. This report could physically be part of the
              overall test report mentioned in ATE_IND, or a separate document. The evaluator
              performs a search of public information to find vulnerabilities that have been found
              in similar applications with a particular focus on network protocols the application
              uses and document formats it parses. The evaluator documents the sources consulted and
              the vulnerabilities found in the report. For each vulnerability found, the evaluator
              either provides a rationale with respect to its non-applicability, or the evaluator
              formulates a test (using the guidelines provided in ATE_IND) to confirm the
              vulnerability, if suitable. Suitability is determined by assessing the attack vector
              needed to take advantage of the vulnerability. If exploiting the vulnerability
              requires expert skills and an electron microscope, for instance, then a test would not
              be suitable and an appropriate justification would be formulated.</aactivity>
          </a-element>
        </a-component>
      </subsection>
    </section>
  </chapter>

  <appendix title="Entropy Documentation and Assessment" id="entropyappendix"> 
The documentation of the entropy source should be detailed enough that, after
reading, the evaluator will thoroughly understand the entropy source and why
it can be relied upon to provide entropy. This documentation should include
multiple detailed sections: design description, entropy justification,
operating conditions, and health testing. This documentation is not required
to be part of the TSS.

<section id="entropydesign" title="Design Description">
Documentation shall include the design of the entropy source as a whole,
including the interaction of all entropy source components. It will describe
the operation of the entropy source to include how it works, how entropy is
produced, and how unprocessed (raw) data can be obtained from within the
entropy source for testing purposes. The documentation should walk through the
entropy source design indicating where the random comes from, where it is
passed next, any post-processing of the raw outputs (hash, XOR, etc.), if/where
it is stored, and finally, how it is output from the entropy source. Any
conditions placed on the process (e.g., blocking) should also be described in
the entropy source design. Diagrams and examples are encouraged.
<br/>
This design must also include a description of the content of the security
boundary of the entropy source and a description of how the security boundary
ensures that an adversary outside the boundary cannot affect the entropy rate.
<br/>
If implemented, the design description shall include a description of how
third-party applications can add entropy to the RBG. A description of any RBG
state saving between power-off and power-on shall be included.
</section>

<section id="entropyjustification" title="Entropy Justification">
There should be a technical argument for where the unpredictability in the
source comes from and why there is confidence in the entropy source exhibiting
probabilistic behavior (an explanation of the probability distribution and
justification for that distribution given the particular source is one way to
describe this). This argument will include a description of the expected
entropy rate and explain how you ensure that sufficient entropy is going into
the TOE randomizer seeding process. This discussion will be part of a
justification for why the entropy source can be relied upon to produce bits
with entropy.
<br/>
The entropy justification shall not include any data added from any third-party
application or from any state saving between restarts.
</section>

Operating Conditions 

<section id="entropyoperatingconditions" title="Operating Conditions">
Documentation will also include the range of operating conditions under which
the entropy source is expected to generate random data. It will clearly
describe the measures that have been taken in the system design to ensure the
entropy source continues to operate under those conditions. Similarly,
documentation shall describe the conditions under which the entropy source is
known to malfunction or become inconsistent. Methods used to detect failure or
degradation of the source shall be included.
</section>

Health Testing

<section id="entropyhealthtesting" title="Health Testing">
More specifically, all entropy source health tests and their rationale will be
documented. This will include a description of the health tests, the rate and
conditions under which each health test is performed (e.g., at startup,
continuously, or on-demand), the expected results for each health test, and
rationale indicating why each test is believed to be appropriate for detecting
one or more failures in the entropy source. 
</section>
  
  </appendix>

  <appendix title="References" id="biblio">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation - <ul>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R4.pdf">Part
                1: Introduction and General Model</a>, CCMB-2012-09-001, Version 3.1 Revision 4,
              September 2012.</li>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R4.pdf">Part
                2: Security Functional Components</a>, CCMB-2012-09-002, Version 3.1 Revision 4,
              September 2012.</li>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part
                3: Security Assurance Components</a>, CCMB-2012-09-003, Version 3.1 Revision 4,
              September 2012.</li>
          </ul></description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>
          <a href="http://www.commoncriteriaportal.org/files/ccfiles/CEMV3.1R4.pdf">Common
            Evaluation Methodology for Information Technology Security - Evaluation Methodology</a>,
          CCMB-2012-09-004, Version 3.1, Revision 4, September 2012. </description>
      </entry>
      <entry id="bibCESG">
        <tag>CESG</tag>
        <description>CESG - <a
            href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End
            User Devices Security and Configuration Guidance</a></description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf"
            >Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
    </bibliography>
  </appendix>

  <appendix title="Acronyms" id="acronyms">
    <acronyms>
      <entry>
        <term>ADB</term>
        <description>Android Debug Bridge</description>
      </entry>
      <entry>
        <term>AES</term>
        <description>Advanced Encryption Standard</description>
      </entry>
      <entry>
        <term>ANSI</term>
        <description>American National Standards Institute</description>
      </entry>
       <entry>
        <term>API</term>
        <description>Application Programming Interface</description>
      </entry>
       <entry>
        <term>APK</term>
        <description>Android Application Package</description>
      </entry>
       <entry>
        <term>APPX</term>
        <description></description>
      </entry>
       <entry>
        <term>API</term>
        <description>Application Programming Interface</description>
      </entry>
      <entry>
        <term>ASLR</term>
        <description>Address Space Layout Randomization</description>
      </entry>
       <entry>
        <term>BAR</term>
        <description></description>
      </entry>
       <entry>
        <term>BIOS</term>
        <description>Basic Input/Output System</description>
      </entry>
      <entry>
        <term>CDSA</term>
        <description>Common Data Security Architecture</description>
      </entry>
      <entry>
        <term>CESG</term>
        <description>Communications-Electronics Security Group</description>
      </entry>
      <entry>
        <term>CMC</term>
        <description>Certificate Management over CMS</description>
      </entry>
      <entry>
        <term>CMS</term>
        <description>Cryptographic Message Syntax</description>
      </entry>
      <entry>
        <term>CN</term>
        <description>Common Names</description>
      </entry>
      <entry>
        <term>CRL</term>
        <description>Certificate Revocation List</description>
      </entry>
      <entry>
        <term>CSA</term>
        <description>Computer Security Act</description>
      </entry>
      <entry>
        <term>DEP</term>
        <description>Data Execution Prevention</description>
      </entry>
      <entry>
        <term>DES</term>
        <description>Data Encryption Standard</description>
      </entry>
      <entry>
        <term>DHE</term>
        <description>Diffie-Hellman Ephemeral</description>
      </entry>
      <entry>
        <term>DMG</term>
        <description>Apple Disk Image</description>
      </entry>
      <entry>
        <term>DNS</term>
        <description>Domain Name System</description>
      </entry>
      <entry>
        <term>DPAPI</term>
        <description>Data Protection Application Programming Interface</description>
      </entry>
      <entry>
        <term>DRBG</term>
        <description>Deterministic Random Bit Generator</description>
      </entry>
      <entry>
        <term>DSS</term>
        <description>Digital Signature Standard</description>
      </entry>
     <entry>
        <term>DT</term>
        <description>Date/Time Vector</description>
      </entry>
      <entry>
        <term>DTLS</term>
        <description>Datagram Transport Layer Security</description>
      </entry>
      <entry>
        <term>EAP</term>
        <description>Extensible Authentication Protocol</description>
      </entry>
      <entry>
        <term>ECDHE</term>
        <description>Elliptic Curve Diffie-Hellman Ephemeral</description>
      </entry>
      <entry>
        <term>ECDSA</term>
        <description>Elliptic Curve Digital Signature Algorithm</description>
      </entry>
      <entry>
        <term>EMET</term>
        <description>Enhanced Mitigation Experience Toolkit</description>
      </entry>
      <entry>
        <term>EST</term>
        <description>Enrollment over Secure Transport</description>
      </entry>
      <entry>
        <term>FIPS</term>
        <description>Federal Information Processing Standards</description>
      </entry>
      <entry>
        <term>DSS</term>
        <description>Digital Signature Standard</description>
      </entry>
      <entry>
        <term>GPS</term>
        <description>Global Positioning System</description>
      </entry>
      <entry>
        <term>HMAC</term>
        <description>Hash-based Message Authentication Code</description>
      </entry>
      <entry>
        <term>HTTP</term>
        <description>Hypertext Transfer Protocol</description>
      </entry>
      <entry>
        <term>HTTPS</term>
        <description>Hypertext Transfer Protocol Secure</description>
      </entry>
      <entry>
        <term>DSS</term>
        <description>Digital Signature Standard</description>
      </entry>
      <entry>
        <term>IANA</term>
        <description>Internet Assigned Number Authority</description>
      </entry>
      <entry>
        <term>IEC</term>
        <description>International Electrotechnical Commission</description>
      </entry>
      <entry>
        <term>IETF</term>
        <description>Internet Engineering Task Force</description>
      </entry>
      <entry>
        <term>IP</term>
        <description>Internet Protocol</description>
      </entry>
      <entry>
        <term>IPA</term>
        <description>iOS Package archive</description>
      </entry>
      <entry>
        <term>IR</term>
        <description>Intermediate Integer</description>
      </entry>
      <entry>
        <term>ISO</term>
        <description>International Organization for Standardization</description>
      </entry>
      <entry>
        <term>IT</term>
        <description>Information Technology</description>
      </entry>
      <entry>
        <term>ITSEF</term>
        <description>Information Technology Security Evaluation Facility</description>
      </entry>
      <entry>
        <term>JNI</term>
        <description>Java Native Interface</description>
      </entry>
      <entry>
        <term>LDAP</term>
        <description>Lightweight Directory Access Protocol</description>
      </entry>
      <entry>
        <term>MIME</term>
        <description>Multi-purpose Internet Mail Extensions</description>
      </entry>
      <entry>
        <term>MPKG</term>
        <description>Meta Package</description>
      </entry>
      <entry>
        <term>MSI</term>
        <description>Microsoft Installer</description>
      </entry>
      <entry>
        <term>NFC</term>
        <description>Near Field Communication</description>
      </entry>
      <entry>
        <term>NIAP</term>
        <description>National Information Assurance Partnership</description>
      </entry>
      <entry>
        <term>NIST</term>
        <description>National Institute of Standards and Technology</description>
      </entry>
      <entry>
        <term>OCSP</term>
        <description>Online Certificate Status Protocol</description>
      </entry>
      <entry>
        <term>OID</term>
        <description>Object Identifier</description>
      </entry>
      <entry>
        <term>OMB</term>
        <description>Office of Management and Budget</description>
      </entry>
      <entry>
        <term>OS</term>
        <description>Operating System</description>
      </entry>
      <entry>
        <term>PDF</term>
        <description>Portable Document Format</description>
      </entry>
      <entry>
        <term>PID</term>
        <description>Process Identifier</description>
      </entry>
      <entry>
        <term>PII</term>
        <description>Personally Identifiable Information</description>
      </entry>
      <entry>
        <term>PKG</term>
        <description>Package file</description>
      </entry>
      <entry>
        <term>PKI</term>
        <description>Public Key Infrastructure</description>
      </entry>
      <entry>
        <term>PP</term>
        <description>Protection Profile</description>
      </entry>
      <entry>
        <term>IT</term>
        <description>Information Technology</description>
      </entry>
      <entry>
        <term>RBG</term>
        <description>Random Bit Generator</description>
      </entry>
      <entry>
        <term>RFC</term>
        <description>Request for Comment</description>
      </entry>
      <entry>
        <term>RNG</term>
        <description>Random Number Generator</description>
      </entry>
      <entry>
        <term>RNGVS</term>
        <description>Random Number Generator Validation System</description>
      </entry>
      <entry>
        <term>SAN</term>
        <description>Subject Alternative Name</description>
      </entry>
      <entry>
        <term>SAR</term>
        <description>Security Assurance Requirement</description>
      </entry>
      <entry>
        <term>SE</term>
        <description>Security Enhancements</description>
      </entry>
      <entry>
        <term>SFR</term>
        <description>Security Functional Requirement</description>
      </entry>
      <entry>
        <term>SHA</term>
        <description>Secure Hash Algorithm</description>
      </entry>
      <entry>
        <term>S/MIME</term>
        <description>Secure/Multi-purpose Internet Mail Extensions</description>
      </entry>
      <entry>
        <term>SIP</term>
        <description>Session Initiation Protocol</description>
      </entry>
      <entry>
        <term>SP</term>
        <description>Special Publication</description>
      </entry>
      <entry>
        <term>SSH</term>
        <description>Secure Shell</description>
      </entry>
      <entry>
        <term>SWID</term>
        <description>Software Identification</description>
      </entry>
      <entry>
        <term>TLS</term>
        <description>Transport Layer Security</description>
      </entry>
      <entry>
        <term>UI</term>
        <description>User Interface</description>
      </entry>
      <entry>
        <term>URI</term>
        <description>Uniform Resource Identifier</description>
      </entry>
      <entry>
        <term>URL</term>
        <description>Uniform Resource Locator</description>
      </entry>
      <entry>
        <term>USB</term>
        <description>Universal Serial Bus</description>
      </entry>
      <entry>
        <term>XCCDF</term>
        <description>eXtensible Configuration Checklist Description Format</description>
      </entry>
      <entry>
        <term>XOR</term>
        <description>Exclusive Or</description>
      </entry>
    </acronyms>
  </appendix>
</PP>
