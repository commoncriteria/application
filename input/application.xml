<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="..\transforms\pp2html.xsl"?>

<?xml-model href="https://github.com/commoncriteria/transforms/raw/master/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<PP xmlns="http://common-criteria.rhcloud.com/ns/cc" 
    xmlns:h="http://www.w3.org/1999/xhtml"
    name="Application Software">
  <PPReference title="PP Reference" id="ID003">
    <ReferenceTable>
      <PPTitle>Protection Profile for Application Software</PPTitle>
      <PPVersion>1.2</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2016-04-22</PPPubDate>
      <PPCertificationID>unassigned</PPCertificationID>
      <CCVersion>3.1 Release 4</CCVersion>
      <Keywords>application; software</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership</description>
      </entry>
    </ReferenceTable>
  </PPReference>

  <RevisionHistory role="draft">
    <entry>
      <version>v .1</version>
      <date>2014-01-08</date>
      <subject>Initial draft commit</subject>
    </entry>
    <entry>
      <version>v .6</version>
      <date>2014-03-14</date>
      <subject>Attractive presentation achieved</subject>
    </entry>
    <entry>
      <version>v .7</version>
      <date>2014-08-08</date>
      <subject>First round of Technical Community feedback incorporated</subject>
    </entry>
    <entry>
      <version>v .8</version>
      <date>2014-08-21</date>
      <subject>Second round of Technical Community feedback incorporated</subject>
    </entry>
    <entry>
      <version>v .9</version>
      <date>2014-09-12</date>
      <subject>Third round of Technical Community feedback incorporated</subject>
    </entry>
    <entry>
      <version>v .9</version>
      <date>2014-10-20</date>
      <subject>Fourth round of Technical Community feedback incorporated</subject>
    </entry>
    <entry>
      <version>v 1.0</version>
      <date>2014-10-20</date>
      <subject>Initial release</subject>
    </entry>
    <entry>
      <version>v 1.1</version>
      <date>2014-11-05</date>
      <subject>Addition to TLS cipher suite selections</subject>
    </entry>
    <entry>
      <version>v 1.2</version>
      <date>2016-04-22</date>
      <subject>Added server-side TLS requirements (selection-based)
	  <h:br/>Multiple clarifications based on NIAP TRRT inquiries
      <h:br/>Refactored FDP_DEC_EXT.1 into separate components
	  </subject>
    </entry>
  </RevisionHistory>

  <RevisionHistory role="final">
    <entry>
          <version>v 1.2</version>
          <date>2016-04-22</date>
          <subject>Added server-side TLS requirements (selection-based)
          <h:br/>Multiple clarifications based on NIAP TRRT inquiries
          <h:br/>Refactored FDP_DEC_EXT.1 into separate components
          </subject>
    </entry>
    <entry>
      <version>v 1.1</version>
      <date>2014-11-05</date>
      <subject>Addition to TLS cipher suite selections</subject>
    </entry>
    <entry>
      <version>v 1.0</version>
      <date>2014-10-20</date>
      <subject>Initial release</subject>
    </entry>
  </RevisionHistory>

  <chapter title="Introduction" id="int">
    <!-- TO DO: Distinguish citations from cross-references. Mark up each appropriately. 
                        Pick an attribute other than id to refer to the linked element. Transform 
                        them more intelligently. Better yet, use standard markup with tool support. 
                      -->
    <section title="Overview" id="ppoverview">The scope of this Protection Profile (PP) is to
      describe the security functionality of application software in terms of <cite linkend="bibCC"
      /> and to define functional and assurance requirements for such software. In recent years,
      software attacks have shifted from targeting operating systems to targeting applications. This
      has been the natural response to improvements in operating system security and development
      processes. As a result, it is paramount that the security of applications be improved to
      reduce the risk of compromise.</section>
    <section title="Terms" id="glossary">The following sections provide both Common Criteria and
      technology terms used in this Protection Profile. <subsection title="Common Criteria Terms"
        id="ccterms">
        <glossary>
          <entry>
            <term><abbr title="Common Criteria">CC</abbr></term> 
            <description>Common Criteria for Information Technology Security
              Evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="Common Evaluation Methodology">CEM</abbr></term>
            <description>Common Evaluation Methodology for Information Technology Security
              Evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="Protection Profile">PP</abbr></term>
            <description>An implementation-independent set of security requirements for a category
              of products.</description>
          </entry>
          <entry>
            <term><abbr title="Security Target">ST</abbr></term>
            <description>A set of implementation-dependent security requirements for a specific
              product.</description>
          </entry>
          <entry>
            <term><abbr title="Target of Evaluation">TOE</abbr></term>
            <description>The product under evaluation. In this case, application
              software and its supporting documentation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Security Functionality">TSF</abbr></term>
            <description>The security functionality of the product under evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Summary Specification">TSS</abbr></term>
            <description>A description of how a <abbr linkend="TOE"/> satisfies the SFRs in a 
            <abbr linkend="ST"/>.
            </description>
          </entry>
          <entry>
            <term><abbr title="Security Functional Requirement">SFR</abbr></term>
            <description>A requirement for security enforcement by the <abbr linkend="TOE"/>.
            </description>
          </entry>
          <entry>
            <term><abbr title="Security Assurance Requirement">SAR</abbr></term>
            <description>A requirement to assure the security of the <abbr linkend="TOE"/>.
            </description>
          </entry>
        </glossary>
      </subsection>
      <subsection title="Technology Terms" id="techterms">
        <glossary>
          <entry>
            <term><abbr title="Address Space Layout Randomization">ASLR</abbr></term>
            <description>An anti-exploitation feature which loads memory mappings into unpredictable
              locations. ASLR makes it more difficult for an attacker to redirect control to code
              that they have introduced into the address space of an application
              process.</description>
          </entry>
          <entry>
            <term><abbr title="Application">app</abbr></term>
            <description>Software that runs on a platform and performs tasks on behalf of
              the user or owner of the platform, as well as its supporting documentation. The 
              terms <h:i>TOE</h:i> and <h:i>application</h:i> are interchangeable in this document.
              </description>
          </entry>
          <entry>
            <term><abbr title="Application Programming Interface">API</abbr></term>
            <description>A specification of routines, data structures, object classes, and variables
              that allows an application to make use of services provided by another software
              component, such as a library. APIs are often provided for a set of libraries included
              with the platform.</description>
          </entry>
          <entry>
            <term>Credential</term>
            <description>Data that establishes the identity of a user, e.g. a cryptographic key or
              password.</description>
          </entry>
          <entry>
            <term><abbr title="Data Execution Prevention">DEP</abbr></term>
            <description>An anti-exploitation feature of modern operating systems executing on
              modern computer hardware, which enforces a non-execute permission on pages of memory.
              DEP prevents pages of memory from containing both data and instructions, which makes
              it more difficult for an attacker to introduce and execute code.</description>
          </entry>
          <entry>
            <term>Developer</term>
            <description>An entity that writes application software. For the purposes of this
              document, vendors and developers are the same.</description>
          </entry>
	  <entry>
	    <term>Mobile Code</term>
	    <description> 
	      Software transmitted from a remote system for
	      execution within a limited execution environment on the local system.
	      Typically, there is no persistent installation and
	      execution begins without the user's consent or even notification.
	      Examples of mobile code technologies include JavaScript, Java applets, Adobe Flash, 
		  and Microsoft Silverlight.
	    </description>
	  </entry>
          <entry>
            <term><abbr title="Operating System">OS</abbr></term>
            <description>Software that manages hardware resources and provides services for
              applications.</description>
          </entry>
          <entry>
            <term><abbr title="Personally Identifiable Information">PII</abbr></term>
            <description>Any information about an individual maintained by an agency, including, but
              not limited to, education, financial transactions, medical history, and criminal or
              employment history and information which can be used to distinguish or trace an
              individual's identity, such as their name, social security number, date and place of
              birth, mother’s maiden name, biometric records, etc., including any other personal
              information which is linked or linkable to an individual. <cite linkend="bibOMB"
              /></description>
          </entry>
          <entry>
            <term>Platform</term>
            <description>The environment in which application software runs. 
              The platform can be an operating system, an execution environment which runs atop 
              an operating system, or some combination of these.
            </description>
          </entry>
          <entry>
            <term>Sensitive Data</term>
            <description> 
              Sensitive data may include all user or enterprise data or may be
              specific application data such as emails, messaging, documents,
              calendar items, and contacts.  Sensitive data must minimally include
              PII, credentials, and keys.  Sensitive data shall be identified in
              the application’s TSS by the <abbr linkend="ST"/> author. 
 	        </description>
          </entry>
          <entry>
            <term>Stack Cookie</term>
            <description>An anti-exploitation feature that places a value on the stack at the start
              of a function call, and checks that the value is the same at the end of the function
              call. This is also referred to as Stack Guard, or Stack Canaries.</description>
          </entry>
          <entry>
            <term>Vendor</term>
            <description>An entity that sells application software. For purposes of this document,
              vendors and developers are the same. Vendors are responsible for maintaining and
              updating application software.</description>
          </entry>
        </glossary>
      </subsection></section>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">The requirements in this
  	  document apply to application software which runs on mobile devices ("apps"), as well as on
  	  desktop and server platforms. Some application types are covered by
  	  more specific PPs, which may be expressed as Extended Packages of this PP.
  	  Such applications are subject to the requirements of both this PP and the
  	  Extended Package that addresses their special functionality.  PPs for some 
	  particularly specialized applications may not be expressed as Extended Packages at this time,
	  though the requirements in this document should be seen as objectives for those 
	  highly specialized applications.
	  <h:br/> 
	  Although the requirements in this document apply to a wide range of application
	  software, consult guidance from the relevant national schemes to
	  determine when formal Common Criteria evaluation is expected for a
	  particular type of application.  This may vary depending upon the nature
	  of the security functionality of the application.
	 <subsection title="TOE Boundary" id="TOEboundary">
		The application, which consists of the software provided by its vendor,
		is installed onto the
		filesystem provided by the operating system.  It executes on the platform, which
		may be an operating system (Figure 1), an execution environment,
		or some combination of these (Figure
		2).  Some assurance activities are specific to the particular platform
		on which the application runs, in order to provide precision and
		repeatability. Test activities are actively sought from platform
		vendors so that coverage across platforms is as complete and accurate
		as possible. This will also enable certification of applications on
		those platforms. 
		<h:br/>	
		Applications include a diverse range of software such as office suites, thin
		clients, <abbr title="Portable Document Format">PDF</abbr> readers,
		and downloadable smartphone apps. The TOE includes any software in the
		application installation package, even those pieces that may extend the
		functionality of the underlying platform, such as kernel drivers.  
		Many platforms come bundled with applications
		such as web browsers, email clients and media players and these too
		should be considered subject to the requirements defined in this
		document although the expectation of formal Common Criteria evaluation
		depends upon the national scheme.  <abbr title="Basic Input/Output
		System">BIOS</abbr> and other firmware, the operating system kernel,
		and other systems software (and drivers) provided as part of the
		platform are outside the scope of this document.  <figure
		entity="images/toe.png" title="Figure 1: TOE as an Application and
		Kernel Module Running on an Operating System" id="toe-as-apponos" />
		<figure entity="images/toeruntime.png" title="Figure 2: TOE as an
		Application Running in an Execution Environment Plus Native Code"
		id="toe-as-apponee" />

    </subsection></section>
    <section title="Use Cases" id="usecases">Requirements in this Protection Profile are designed to
      address the security problem in the following use cases. These use cases are intentionally
      very broad, as many specific use cases exist for application software. Many applications may
      be used in combinations of these broad use cases, and evaluation against Extended
	  Packages of this PP, when available, may be most appropriate for some application types. <usecases>
        <usecase title="Content Creation" id="contentcreation">
          <description>The application allows a user to create content, saving it to either local or
            remote storage.  Example content includes text documents, presentations, and images.
			</description>
        </usecase>
        <usecase title="Content Consumption" id="contentconsumption">
          <description>The application allows a user to consume content, retrieving it from either
            local or remote storage.  Example content includes web pages and video.</description>
        </usecase>
        <usecase title="Communication" id="interactivecomms">
          <description>The application allows for communication interactively or
            non-interactively with other users or applications over a communications channel.
			Example communications include instant messages, email, and voice.
          </description>
        </usecase>
      </usecases></section>
  </chapter>
  <chapter title="Conformance Claims" id="ccl">
    <cclaims>
      <cclaim id="Conformance Statement">
        <description>
      To be conformant to this PP, a <abbr linkend="ST"/> must demonstrate 
      Exact Conformance, a subset of Strict Conformance as defined in <cite linkend="bibCC"/> Part 1 
      (ASE_CCL). The <abbr linkend="ST"/> must include all components in this PP that are:
      <h:ul>
          <h:li>unconditional (which are always required)</h:li>
          <h:li>selection-based (which are required when certain <h:i>selections</h:i> are chosen in the unconditional requirements)</h:li>
      </h:ul>and may include components that are
      <h:ul>
          <h:li>optional or</h:li>
          <h:li>objective.</h:li>
      </h:ul>
	  <InsertAppendixExplainer/>
	  The <abbr linkend="ST"/> may iterate any of these components, but it must not include any additional 
	  component (e.g. from CC Part 2 or 3 or a PP not conformant with this one, or extended by the <abbr linkend="ST"/>) 
	  not defined in this PP or a PP conformant to this one.
	  See <secref linkend="TOEdescription"/> regarding more-specific PPs that may extend this one.
	</description>
      </cclaim>
      <cclaim id="CC Conformance Claims">
        <description>This PP is conformant to Parts 2 (extended) and 3 (extended) of Common Criteria
          Version 3.1, Revision 4. <cite linkend="bibCC"/>.</description>
      </cclaim>
      <cclaim id="PP Claim">
        <description>This PP does not claim conformance to any other Protection
          Profile.</description>
      </cclaim>
      <cclaim id="Package Claim">
        <description>This PP does not claim conformance to any packages.</description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Definition" id="spd">The security problem is described in terms
    of the threats that the <abbr linkend="TOE"/> is expected to address, assumptions about the
    operational environment, and any organizational security policies that the <abbr linkend="TOE"/>
    is expected to enforce.
    <section title="Threats" id="threats">
      <threats>
        <threat id="T.NETWORK_ATTACK">
          <description>An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may engage in communications with the application
            software or alter communications between the application software and other endpoints in
            order to compromise it.</description>
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.PROTECTED_COMMS as this
              provides for integrity of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.INTEGRITY">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.INTEGRITY as this provides
              for integrity of software that is installed onto the system from the
              network.</rationale>
          </objective-refer>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.MANAGEMENT as this
              provides for the ability to configure the application to defend against network attack.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.NETWORK_EAVESDROP">
          <description>An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may monitor and gain access to data exchanged between
            the application and other endpoints.</description>
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.PROTECTED_COMMS as this
              provides for confidentiality of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.QUALITY">
            <rationale>The objective O.QUALITY ensures use of mechanisms that provide 
              protection against network-based attack.</rationale>
          </objective-refer>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.MANAGEMENT as this
              provides for the ability to configure the application to protect the
              confidentiality of its transmitted data.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.LOCAL_ATTACK">
          <description>An attacker can act through unprivileged software on the same computing
            platform on which the application executes. Attackers may provide maliciously formatted
            input to the application in the form of files or other local
            communications.</description>
          <objective-refer ref="O.QUALITY">
			<rationale>The objective O.QUALITY protects against the use of
			mechanisms that weaken the <abbr linkend="TOE"/> with regard to
			attack by other software on the platform.</rationale>
          </objective-refer>
        </threat>
        <threat id="T.PHYSICAL_ACCESS">
          <description>An attacker may try to access sensitive data at rest.</description>
          <objective-refer ref="O.PROTECTED_STORAGE">
            <rationale>The objective O.PROTECTED_STORAGE protects against unauthorized attempts to access
              physical storage used by the <abbr linkend="TOE"/>.</rationale>
          </objective-refer>
        </threat>
      </threats>
    </section>
    <section title="Assumptions" id="assumptions">
      <assumptions>
        <assumption id="A.PLATFORM">
          <description>The <abbr linkend="TOE"/> relies upon a trustworthy computing platform for
            its execution. This includes the underlying platform and whatever runtime environment
            it provides to the <abbr linkend="TOE"/>.</description>
          <objective-refer ref="OE.PLATFORM">
            <rationale>The operational environment objective OE.PLATFORM is realized through
			  A.PLATFORM.</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PROPER_USER">
          <description>
	    The user of the application software is not willfully negligent or hostile,
            and uses the software in compliance with the applied enterprise security policy.
	  </description>
          <objective-refer ref="OE.PROPER_USER">
            <rationale>The operational environment objective OE.PROPER_USER 
			is realized through A.PROPER_USER.</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PROPER_ADMIN">
          <description>The administrator of the application software is not careless, willfully
            negligent or hostile, and administers the software within compliance of the applied
            enterprise security policy.</description>
          <objective-refer ref="OE.PROPER_ADMIN">
            <rationale>The operational environment objective OE.PROPER_ADMIN 
			is realized through A.PROPER_ADMIN.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </section>
    <section title="Organizational Security Policies" id="OSPs">
      There are no Organizational Security Policies for the application.
   <!--   <OSPs>
        <OSP id="P.ENTERPRISE">
          <description>The configuration of the application software must be capable of adhering to
            the enterprise security policy.</description>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The organizational security policy P.ENTERPRISE is enforced through the
              objective O.MANAGEMENT as this objective represents how the enterprise and user assert
              management over the <abbr linkend="TOE"/>.</rationale>
          </objective-refer>
        </OSP>
      </OSPs> -->
    </section>
  </chapter>
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO id="O.INTEGRITY">
		  <description>Conformant <abbr linkend="TOE"/>s ensure the integrity
		  of their installation and update packages, and also leverage
		  execution environment-based mitigations. Software is seldom if ever
		  shipped without errors, and the ability to deploy patches and updates
		  to fielded software with integrity is critical to enterprise network
		  security. Processor manufacturers, compiler developers, execution
		  environment vendors, and operating system vendors have developed
		  execution environment-based mitigations that increase the cost to
		  attackers by adding complexity to the task of compromising systems.
		  Application software can often take advantage of these mechanisms by
		  using <abbr linkend="API"/>s provided by the runtime environment or by
		  enabling the mechanism through compiler or linker
		  options.</description>
          <component-refer ref="fdp_dec_ext.1"/>
          <component-refer ref="fmt_cfg_ext.1"/>
          <component-refer ref="fpt_aex_ext.1"/>
          <component-refer ref="fpt_tud_ext.1"/>
        </SO>
        <SO id="O.QUALITY">
          <description>To ensure quality of implementation, conformant <abbr linkend="TOE"/>s
            leverage services and <abbr linkend="API"/>s provided by the runtime environment rather
            than implementing their own versions of these services and APIs. This is especially
            important for cryptographic services and other complex operations such as file and media
            parsing. Leveraging this platform behavior relies upon using only documented and supported APIs.
          </description>
          <component-refer ref="fmt_mec_ext.1"/>
          <component-refer ref="fpt_api_ext.1"/>
          <component-refer ref="fpt_lib_ext.1"/>
        </SO>
        <SO id="O.MANAGEMENT">
          <description>To facilitate management by users and the enterprise, conformant <abbr
              linkend="TOE"/>s provide consistent and supported interfaces for their
            security-relevant configuration and maintenance. This includes the deployment of
            applications and application updates through the use of platform-supported deployment
            mechanisms and formats, as well as providing mechanisms for configuration.  This also
            includes providing control to the user regarding disclosure of any PII.</description>
          <component-refer ref="fmt_smf.1"/>
          <component-refer ref="fpt_idv_ext.1"/>
          <component-refer ref="fpt_tud_ext.1.5"/>
          <component-refer ref="fpr_ano_ext.1"/>
        </SO>
        <SO id="O.PROTECTED_STORAGE">
          <description>
	    To address the issue of loss of confidentiality of user data in the event of 
	    loss of physical control of the storage medium, conformant <abbr linkend="TOE"/>s will 
	    use data-at-rest protection. This involves encrypting data and keys stored by the 
	    <abbr linkend="TOE"/> in order to prevent unauthorized access to this data.  This also
        includes unnecessary network communications whose consequence may be the loss of data.
          </description>
          <component-refer ref="fdp_dar_ext.1"/>
          <component-refer ref="fdp_dar_ext.1"/>
          <component-refer ref="fcs_sto_ext.1"/>
          <component-refer ref="fcs_rbg_ext.1"/>
        </SO>
        <SO id="O.PROTECTED_COMMS">
          <description> To address both passive (eavesdropping) and active (packet modification)
            network attack threats, conformant <abbr linkend="TOE"/>s will use a trusted channel for
            sensitive data. Sensitive data includes cryptographic keys, passwords, and any other
            data specific to the application that should not be exposed outside of the application. 
          </description>
          <component-refer ref="ftp_dit_ext.1"/>
          <component-refer ref="fcs_tlsc_ext.1"/>
          <component-refer ref="fcs_dtls_ext.1"/>
          <component-refer ref="fcs_rbg_ext.1"/>
        </SO>
      </SOs>
    </section>
    <section title="Security Objectives for the Operational Environment"
      id="SecurityObjectivesTOEorEnvironment">The following security objectives for the operational
      environment assist the <abbr linkend="TOE"/> in correctly providing its security
      functionality. These track with the assumptions about the environment. <SOEs>
        <SOE id="OE.PLATFORM">
          <description>The <abbr linkend="TOE"/> relies upon a trustworthy computing platform for
            its execution. This includes the underlying operating system and any discrete execution 
            environment provided to the <abbr linkend="TOE"/>.</description>
        </SOE>
        <SOE id="OE.PROPER_USER">
          <description>The user of the application software is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security
            policy.</description>
        </SOE>
        <SOE id="OE.PROPER_ADMIN">
          <description>The administrator of the application software is not careless, willfully
            negligent or hostile, and administers the software within compliance of the applied
            enterprise security policy.</description>
        </SOE>
      </SOEs></section>
    <section title="Security Objectives Rationale" id="SOR">This section describes how the
      assumptions, threats, and organizational security policies map to the security objectives.
      <InsertSPDCorrespondence/></section>
  </chapter>
  <chapter title="Security Requirements" id="req">This chapter describes the security requirements
    which have to be fulfilled by the <abbr linkend="TOE"/>. Those requirements comprise functional
    components from Part 2 and assurance components from Part 3 of <cite linkend="bibCC"/>. The
    following notations are used: <h:ul>
      <h:li>
        <h:b>Refinement</h:b> operation (denoted by <h:b>bold text</h:b>): is used to add details to a
        requirement, and thus further restricts a requirement.</h:li>
      <h:li>
        <h:b>Selection</h:b> (denoted by <h:i>italicized text</h:i>): is used to select one or more options
        provided by the [CC] in stating a requirement.</h:li>
      <h:li>
        <h:b>Assignment</h:b> operation (denoted by <h:span class="assignable-content">italicized text</h:span>): is used to assign a
        specific value to an unspecified parameter, such as the length of a password. Showing the
        value in square brackets indicates assignment.</h:li>
      <h:li>
        <h:b>Iteration</h:b> operation: are identified with a number inside parentheses (e.g.
        "(1)")</h:li>
    </h:ul>
    <section title="Security Functional Requirements" id="SFRs">The Security Functional Requirements
      included in this section are derived from Part 2 of the Common Criteria for Information
      Technology Security Evaluation, Version 3.1, Revision 4, with additional extended functional
      components. 
      <subsection title="Cryptographic Support (FCS)" id="fcs">
        <f-component id="fcs_rbg_ext.1" name="Random Bit Generation Services" status="threshold">
          <f-element id="fcs_rbg_ext.1.1">
            <title> The application shall
			  <selectables linebreak="yes">
                <selectable>use no DRBG functionality</selectable>
                <selectable>invoke platform-provided DRBG functionality</selectable>
                <selectable>implement DRBG functionality</selectable>
              </selectables> for its cryptographic operations. </title>
            <note role="application"> If 
              <h:i>implement DRBG functionality</h:i> is chosen, then additional <linkref linkend="FCS_RBG_EXT.2"/>
              elements shall be included in the <abbr linkend="ST"/>. In this requirement, cryptographic
              operations include all cryptographic key generation/derivation/agreement, IVs (for
              certain modes), as well as protocol-specific random values. </note>
            <aactivity>
              If <h:b>use no DRBG functionality</h:b> is selected, the evaluator shall inspect the 
			  application and its developer documentation and verify that the application needs no
              random bit generation services. 
			  <h:br/>
              If <h:b>implement DRBG functionality</h:b> is selected, the evaluator shall ensure
			  that additional <linkref linkend="FCS_RBG_EXT.2"/> elements are included in the <abbr linkend="ST"/>.
			  <h:br/>
			        If <h:b>invoke platform-provided DRBG functionality</h:b> is selected, the evaluator 
              performs the following activities.  The evaluator shall examine 
              the <abbr linkend="TSS"/> to confirm that it identifies all functions (as described by the
              SFRs included in the ST) that obtain random numbers from the platform RBG.  The evaluator 
              shall determine that for each of these functions, the <abbr linkend="TSS"/> states which 
              platform interface (API) is used to obtain the random numbers.  The evaluator shall confirm 
              that each of these interfaces corresponds to the acceptable interfaces listed for each platform 
              below.  The evaluator shall then decompile the application binary using an decompiler 
              suitable for the application (TOE).  The evaluator shall search the output of the 
              decompiler to determine that, for each API listed in the <abbr linkend="TSS"/>, that API 
              appears in the output.  If the representation of the API does not correspond directly to 
              the strings in the following list, the evaluator shall provide a mapping from the 
              decompiled text to its corresponding API, with a description of why the API text does 
              not directly correspond to the decompiled text and justification that the decompiled text 
              corresponds to the associated API. 
              <h:br/>
              It should be noted that there is no expectation that the evaluators attempt to confirm 
              that the APIs are being used “correctly” for the functions identified in the TSS; 
              the activity is to list the used APIs and then do an existence check via decompilation.
              <h:br/>
              The following are the per-platform list of acceptable APIs:
              
              <subaactivity platform="blackberry">
                The evaluator shall verify that the application invokes Security Builder Crypto GSE.
              </subaactivity>
              <subaactivity platform="android"> The evaluator shall verify
                that the application uses at least one of <h:code>javax.crypto.KeyGenerator</h:code> 
                class or the <h:code>java.security.SecureRandom</h:code> class or <h:code>/dev/random
                </h:code> or <h:code>/dev/urandom</h:code>.
              </subaactivity>
              <subaactivity platform="windows">The evaluator shall verify
               that BCryptGenRandom or CryptGenRandom <abbr linkend="API"/> is used for classic
                desktop applications. The evaluator shall verify that the

                System.Random <abbr linkend="API"/> is used for Windows Universal Applications. In
                future versions of this document, CryptGenRandom may be removed as an option as it is
                no longer the preferred API per vendor documentation. </subaactivity>
              <subaactivity platform="ios"> 
                The evaluator shall verify that the application invokes 
                <h:code>SecRandomCopyBytes</h:code> or uses <h:code>/dev/random</h:code> directly to acquire random.
				</subaactivity>
              <subaactivity platform="linux"> 
                The evaluator shall verify that the application collects random from <h:code>/dev/random</h:code>
				or <h:code>/dev/urandom</h:code>.
	      </subaactivity>
	      <subaactivity platform="Solaris">
                The evaluator shall verify that the application collects random from <h:code>/dev/random</h:code>.
	      </subaactivity>
              <subaactivity platform="OS X">
                The evaluator shall verify that the application uses <h:code>/dev/random</h:code> to
				acquire random.
	      </subaactivity>
		        If invocation of platform-provided functionality is achieved in another way, the evaluator 
				shall ensure the TSS describes how this is carried out, and how it is equivalent to the 
				methods listed here (e.g. higher-level API invokes identical low-level API).
            </aactivity>
          </f-element>
        </f-component>
         <f-component id="fcs_rbg_ext.2" name="Random Bit Generation from Application" status="sel-based">
           <selection-depends req="fcs_rbg_ext.1.1"/>
          <f-element id="fcs_rbg_ext.2.1">
            <title> The application shall perform all deterministic random bit generation (DRBG)
              services in accordance with 
                <selectable>NIST Special Publication 800-90A using <selectables>
                    <selectable>Hash_DRBG (any)</selectable>
                    <selectable>HMAC_DRBG (any)</selectable>
                    <selectable>CTR_DRBG (AES)</selectable>
                  </selectables>
                </selectable>.
            </title>
            <note role="application">This requirement shall be included in <abbr linkend="ST"/>s in which 
			  <h:i>implement DRBG functionality</h:i> is chosen in <linkref linkend="FCS_RBG_EXT.1.1"/>. 
			  The <abbr linkend="ST"/> author 
              should select the standard to which the RBG services comply (either SP 800-90A or FIPS 
              140-2 Annex C). 
              <h:br />
              SP 800-90A contains three different methods of generating random numbers; each of 
              these, in turn, depends on underlying cryptographic primitives 
              (hash functions/ciphers). The <abbr linkend="ST"/> author will select the function used (if SP 800-90A 
              is selected), and include the specific underlying cryptographic primitives used in the 
              requirement or in the TSS. While any of the identified hash functions (SHA-1, SHA-224, 
              SHA-256, SHA-384, SHA-512) are allowed for Hash_DRBG or HMAC_DRBG, only AES-based 
              implementations for CTR_DRBG are allowed.
            </note>
            <aactivity>The evaluator shall perform the following tests, depending on the standard
              to which the RBG conforms. 
              <h:br />
              Implementations Conforming to FIPS 140-2 Annex C. 
              <h:br />
              The reference for the tests contained in this section is The Random Number Generator
              Validation System (RNGVS). The evaluators shall conduct the following two tests. Note 
              that the "expected values" are produced by a reference implementation of the algorithm 
              that is known to be correct. Proof of correctness is left to each Scheme.
              <testlist>
                <test>The evaluators shall perform a Variable Seed Test. The evaluators shall
                  provide a set of 128 (Seed, DT) pairs to the <abbr linkend="TSF"/> RBG function, 
                  each 128 bits. The evaluators shall also provide a key (of the length appropriate 
                  to the AES algorithm) that is constant for all 128 (Seed, DT) pairs. The DT value 
                  is incremented by 1 for each set. The seed values shall have no repeats within
                  the set. The evaluators ensure that the values returned by the 
                  <abbr linkend="TSF"/> match the expected values.
                </test>
                <test>
                  The evaluators shall perform a Monte Carlo Test. For this test, they supply
                  an initial Seed and DT value to the <abbr linkend="TSF"/> RBG function; each of 
                  these is 128 bits. The evaluators shall also provide a key (of the length 
                  appropriate to the AES algorithm) that is constant throughout the test. The 
                  evaluators then invoke the <abbr linkend="TSF"/> RBG 10,000 times, with the DT 
                  value being incremented by 1 on each iteration, and the new seed for the 
                  subsequent iteration produced as specified in NIST-Recommended Random Number 
                  Generator Based on ANSI X9.31 Appendix A.2.4 Using the 3-Key Triple DES and AES 
                  Algorithms, Section 3. The evaluators ensure that the 10,000th value produced 
                  matches the expected value.
                </test>
              </testlist>
              Implementations Conforming to NIST Special Publication 800-90A
              <testlist>
                <test>
                  The evaluator shall perform 15 trials for the RNG implementation. If the RNG is
                  configurable, the evaluator shall perform 15 trials for each configuration. The
                  evaluator shall also confirm that the operational guidance contains appropriate
                  instructions for configuring the RNG functionality.
                  <h:br />
                  If the RNG has prediction resistance enabled, each trial consists of (1) 
                  instantiate DRBG, (2) generate the first block of random bits (3) generate a 
                  second block of random bits (4) uninstantiate. The evaluator verifies that the 
                  second block of random bits is the expected value. The evaluator shall generate 
                  eight input values for each trial. The first is a count (0 – 14). The next three 
                  are entropy input, nonce, and personalization string for the instantiate 
                  operation. The next two are additional input and entropy input for the first call 
                  to generate. The final two are additional input and entropy input for the second
                  call to generate. These values are randomly generated. “generate one block of 
                  random bits” means to generate random bits with number of returned bits equal to 
                  the Output Block Length (as defined in NIST SP 800-90A).
                  <h:br />
                  If the RNG does not have prediction resistance, each trial consists of (1) 
                  instantiate DRBG, (2) generate the first block of random bits (3) reseed, (4) 
                  generate a second block of random bits (5) uninstantiate. The evaluator verifies 
                  that the second block of random bits is the expected value. The evaluator shall 
                  generate eight input values for each trial. The first is a count (0 – 14). The 
                  next three are entropy input, nonce, and personalization string for the 
                  instantiate operation. The fifth value is additional input to the first call to
                  generate. The sixth and seventh are additional input and entropy input to the call 
                  to reseed. The final value is additional input to the second generate call.
                  <h:br />
                  The following paragraphs contain more information on some of the input values to 
                  be generated/selected by the evaluator.
                  <h:br />
                  <h:b>Entropy input:</h:b> the length of the entropy input value must equal the seed length.
                  <h:br />
                  <h:b>Nonce:</h:b> If a nonce is supported (CTR_DRBG with no Derivation Function does not use 
                  a nonce), the nonce bit length is one-half the seed length. 
                  <h:br />
                  <h:b>Personalization string:</h:b> The length of the personalization string must be 
                  less then or equal to seed length. If the implementation only supports one 
                  personalization string length, then the same length can be used for both values. 
                  If more than one string length is support, the evaluator shall use personalization 
                  strings of two different lengths. If the implementation does not use a 
                  personalization string, no value needs to be supplied. 
                  <h:br />
                  <h:b>Additional input:</h:b> the additional input bit lengths have the same defaults 
                  and restrictions as the personalization string lengths.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_rbg_ext.2.2">
            <title>The deterministic RBG shall be seeded by an entropy source that accumulates
              entropy from a platform-based DRBG and <selectables linebreak="yes">
                <selectable>a software-based noise source</selectable>
                <selectable>no other noise source</selectable>
              </selectables> with a minimum of <selectables linebreak="yes">
                <selectable>128 bits</selectable>
                <selectable>256 bits</selectable>
              </selectables> of entropy at least equal to the greatest security strength (according
              to NIST SP 800-57) of the keys and hashes that it will generate. </title>
            <note role="application">This requirement shall be included in <abbr linkend="ST"/>s in which 
			  <h:i>implement DRBG functionality</h:i> is chosen in <linkref linkend="FCS_RBG_EXT.1.1"/>. For the first
              selection in this requirement, the <abbr linkend="ST"/> author selects 'software-based noise source' if 
              any additional noise sources are used as input to the application's DRBG. Note that 
              the application must use the platform's DRBG to seed its DRBG. 
              <h:br />In the second selection in this requirement, the <abbr linkend="ST"/> author selects the 
              appropriate number of bits of entropy that corresponds to the greatest security 
              strength of the algorithms included in the <abbr linkend="ST"/>. Security strength is defined in Tables 
              2 and 3 of NIST SP 800-57A. For example, if the implementation includes 2048-bit RSA 
              (security strength of 112 bits) and AES 256 (security strength 256 bits),
	      then the <abbr linkend="ST"/> author would select 256 bits.
            </note>
            <aactivity>Documentation shall be produced - and the evaluator shall perform the
              activities - in accordance with <appref linkend="entropyappendix"/> and
              the <h:a href="https://www.niap-ccevs.org/Documents_and_Guidance/ccevs/Entropy%20Documentation%20and%20Assessment%20Clarification.pdf">Clarification to the Entropy Documentation and Assessment Annex</h:a>.
              <h:br />In the future, specific statistical testing (in line with NIST SP 800-90B) will 
              be required to verify the entropy estimates.
            </aactivity>
          </f-element>
        </f-component>


        <f-component id="fcs_ckm_ext.1" name="Cryptographic Key Generation Services" status="sel-based">
	  <selection-depends req="fcs_tlsc_ext.1.1"/>
          <f-element id="fcs_ckm_ext.1.1">
            <title>The application shall <selectables linebreak="yes">
	        <selectable>generate no asymmetric cryptographic keys</selectable>
                <selectable>invoke platform-provided functionality for asymmetric key generation</selectable>
                <selectable>implement asymmetric key generation</selectable>
              </selectables>.
            </title>
            <note role="application">If <h:i>implement asymmetric key generation</h:i> or 
			  <h:i>invoke platform-provided functionality for asymmetric key generation</h:i> is chosen, then
              additional <linkref linkend="FCS_CKM.1(1)"/> elements shall be included in the <abbr linkend="ST"/>.
            </note>
            <aactivity>
              The evaluator shall inspect the application and its developer documentation 
              to determine if the application needs asymmetric key generation services. If not, the 
              evaluator shall verify the <h:b>generate no asymmetric cryptographic keys</h:b> selection is present 
              in the <abbr linkend="ST"/>. Otherwise, the evaluation activities shall be performed as stated in the 
              selection-based requirements.
            </aactivity>
          </f-element>
        </f-component>

<!-- Just in case we need this.  I suspect we do not.

        <f-component id="fcs_ckm_ext.4" name="Cryptographic Key Zeroization">
          <f-element id="fcs_ckm_ext.4.1" status="sel-based">
            <title>The application shall zeroize all plaintext secret and private cryptographic keys and
			    cryptographic service providers when no longer required.
            </title>
			<note role="application">Any security related information (such as
            keys, authentication data, and passwords) must be zeroized when no
            longer in use to prevent the disclosure or modification of security
            critical data.  The zeroization indicated above applies to each
            intermediate storage area for plaintext key and cryptographic
            service provider (CSP) (i.e., any storage, such as memory buffers,
            that is included in the path of such data) upon the transfer of the
            key/CSP to another location.
            </note>
            <aactivity>
			  The evaluator shall check to ensure the TSS describes each of the
			  secret keys (keys used for symmetric encryption) and private
			  keys, as well as the CSPs used to generate key; when the keys are
			  zeroized (for example, immediately after use, on system shutdown,
			  etc.); and the type of zeroization procedure that is performed
			  (overwrite with zeros, overwrite three times with random pattern,
			  etc.). If different types of memory are used to store the
			  materials to be protected, the evaluator shall check to ensure
			  that the TSS describes the zeroization procedure in terms of the
			  memory in which the data are stored (for example, "secret keys
			  stored in volatile memory are zeroized by overwriting once with
			  zeros, while secret keys stored on non-volatile storage are
			  zeroized by overwriting three times with a random pattern that is
			  changed before each write"). If a read-back is done to verify the
			  zeroization, this shall be described as well.
              <br/>
			  For each key clearing situation described in the TSS the evaluator
			  shall repeat the following test.
              <testlist>￼￼￼￼
			  <test>The evaluator shall utilize appropriate combinations of
			  specialized operational environment and development tools
			  (debuggers, simulators, etc.) for the TOE and instrumented TOE
			  builds to test that keys are cleared correctly, including all
			  intermediate copies of the key that may have been created
			  internally by the TOE during normal cryptographic processing with
			  that key.  Cryptographic TOE implementations in software shall be
			  loaded and exercised under a debugger to perform such tests. The
			  evaluator shall perform the following test for each key subject
			  to clearing, including intermediate copies of keys that are
			  persisted encrypted by the TOE:

              <ul>
                <li>Load the instrumented TOE build in a debugger.</li>
                <li>Record the value of the key in the TOE subject to clearing.</li>
                <li>Cause the TOE to perform a normal cryptographic processing with the key from #1.</li>
                <li>Cause the TOE to clear the key.</li>
                <li>Cause the TOE to stop the execution but not exit.</li>
                <li>Cause the TOE to dump the entire memory footprint of the TOE into a binary file.</li>
                <li>Search the content of the binary file created in #4 for instances of the known key value from #1.</li>
              </ul>
			  The test succeeds if no copies of the key from #1 are found in
			  step #7 above and fails otherwise.  The evaluator shall perform
			  this test on all keys, including those that persist in encrypted
			  form, to ensure intermediate copies are cleared.
              </test>
			  <test>In cases where the TOE is implemented in firmware and
			  operates in a limited operating environment that does not allow
			  the use of debuggers, the evaluator shall utilize a simulator
			  for the TOE on a general purpose operating system. The evaluator
			  shall provide a rationale explaining the instrumentation of the
			  simulated test environment and justifying the obtained test
			  results.
			  </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
-->

        <f-component id="fcs_ckm.1(1)" name="Cryptographic Asymmetric Key Generation" status="sel-based">
          <selection-depends req="fcs_ckm_ext.1.1"/>
          <f-element id="fcs_ckm.1.1(1)">
            <title>
              The application shall generate asymmetric cryptographic keys in accordance 
              with a specified cryptographic key generation algorithm
              <selectables linebreak="yes">
                <selectable>
                  <h:b>[RSA schemes]</h:b> using cryptographic key sizes of <h:b>[2048-bit or greater]</h:b> that meet the 
                  following: 
                  <selectables linebreak="yes">
                    <selectable>
                      <h:b>FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.3</h:b>
                    </selectable>
                    <selectable>
                      <h:b>ANSI X9.31-1998, Section 4.1</h:b>
                    </selectable>
                  </selectables>
                </selectable>
                <selectable>
                  <h:b>[ECC schemes]</h:b> using <b>[“NIST curves” P-256, P-384 and
                  <selectables>
                    <selectable> P-521 </selectable>
                    <selectable> no other curves </selectable>
                  </selectables> 
                  ]</b> that meet the following: 
		  <h:b>[FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.4]</h:b>
                </selectable>
                <selectable>
                  <h:b>[FFC schemes]</h:b> using cryptographic key sizes of <h:b>[2048-bit or greater]</h:b> 
                  that meet the 
                  following: 
                  <h:b>[FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.1]</h:b>
                </selectable>
              </selectables>.
            </title>
            <note role="application">
              The <abbr linkend="ST"/> author shall select all key generation schemes used for key 
              establishment and entity authentication. When key generation is used for key 
              establishment, the schemes in <linkref linkend="FCS_CKM.2.1"/> and selected cryptographic protocols must 
              match the selection. When key generation is used for entity authentication, the public 
              key is expected to be associated with an X.509v3 certificate.
              <h:br />
              If the <abbr linkend="TOE"/> acts as a receiver in the RSA key establishment scheme, 
              the <abbr linkend="TOE"/> does not need to implement RSA key generation. 
              <h:br />
              The ANSI X9.31-1998 option will be removed from the selection in a future publication 
              of this document. Presently, the selection is not exclusively limited to the FIPS PUB 
              186-4 options in order to allow industry some further time to complete the transition 
              to the modern FIPS PUB 186-4 standard.
            </note>
            <aactivity>
              The evaluator shall ensure that the <abbr linkend="TSS"/> identifies the key sizes 
              supported by the <abbr linkend="TOE"/>. If the <abbr linkend="ST"/> specifies more 
              than one scheme, the evaluator shall examine the <abbr linkend="TSS"/> to verify that 
              it identifies the usage for each scheme.
              <h:br />
              The evaluator shall verify that the AGD guidance instructs the administrator how to 
              configure the <abbr linkend="TOE"/> to use the selected key generation scheme(s) and 
              key size(s) for all uses defined in this PP.
              <h:br />
              If the application <h:b>invokes platform-provided functionality for asymmetric key generation</h:b>,
			  then the evaluator shall examine the TSS to verify that it describes 
			  how the key generation functionality is invoked.
			  <h:br/> 
			  If the application <h:b>implements asymmetric key generation</h:b>, then the following test
			  activities shall be carried out.
              <h:br/>
              Assurance Activity Note: The following tests may require the developer to provide access 
              to a developer environment that provides the evaluator with tools that are typically available
			  to end-users of the application.
              <h:br />
              <h:b>Key Generation for FIPS PUB 186-4 RSA Schemes</h:b><h:p/>
              The evaluator shall verify the implementation of RSA Key Generation by the 
              <abbr linkend="TOE"/> using the Key Generation test. This test verifies the ability of 
              the <abbr linkend="TSF"/> to correctly produce values for the key components including 
              the public verification exponent e, the private prime factors p and q, the public 
              modulus n and the calculation of the private signature exponent d. Key Pair generation 
              specifies 5 ways (or methods) to generate the primes p and q. 
              These include:
              <h:ol>
                <h:li>
                  Random Primes:
                  <h:ul>
                    <h:li>Provable primes</h:li>
                    <h:li>Probable primes</h:li>
                  </h:ul>
                </h:li>
                <h:li>
                  Primes with Conditions:
                  <h:ul>
                    <h:li>Primes p1, p2, q1,q2, p and q shall all be provable primes</h:li>
                    <h:li>Primes p1, p2, q1, and q2 shall be provable primes and p and q shall be 
                      probable primes</h:li>
                    <h:li>Primes p1, p2, q1,q2, p and q shall all be probable primes</h:li>
                  </h:ul>
                </h:li>
              </h:ol>
              To test the key generation method for the Random Provable primes method and for all 
              the Primes with Conditions methods, the evaluator must seed the <abbr linkend="TSF"/> 
              key generation routine with sufficient data to deterministically generate the RSA key 
              pair. This includes the random seed(s), the public exponent of the RSA key, and the 
              desired key length. For each key length supported, the evaluator shall have the 
              <abbr linkend="TSF"/> generate 25 key pairs. The evaluator shall verify the 
              correctness of the <abbr linkend="TSF"/>’s implementation by comparing values 
              generated by the <abbr linkend="TSF"/> with those generated from a known good 
              implementation.
              <h:br />
              If possible, the Random Probable primes method should also be verified against a 
              known good implementation as described above. Otherwise, the evaluator shall have 
              the <abbr linkend="TSF"/> generate 10 keys pairs for each supported key length nlen 
              and verify:
              <h:ul>
                <h:li>n = p*q,</h:li>
                <h:li>p and q are probably prime according to Miller-Rabin tests,</h:li>
                <h:li>GCD(p-1,e) = 1,</h:li>
                <h:li>GCD(q-1,e) = 1,</h:li>
                <h:li>2^16 &lt;= e &lt;= 2^256 and e is an odd integer,</h:li>
                <h:li>|p-q| > 2^(nlen/2 - 100),</h:li>
                <h:li>p >= squareroot(2)*( 2^(nlen/2 -1) ),</h:li>
                <h:li>q >= squareroot(2)*( 2^(nlen/2 -1) ),</h:li>
                <h:li>2^(nlen/2) &lt; d &lt; LCM(p-1,q-1),</h:li>
                <h:li>e*d = 1 mod LCM(p-1,q-1).</h:li>
              </h:ul>
              <h:b>Key Generation for ANSI X9.31-1998 RSA Schemes</h:b><h:p/>
              If the <abbr linkend="TSF"/> implements the ANSI X9.31-1998 scheme, the evaluator 
              shall check to ensure that the <abbr linkend="TSS"/> describes how the key-pairs are 
              generated. In order to show that the <abbr linkend="TSF"/> 
              implementation complies with ANSI X9.31-1998, the evaluator shall ensure that the 
              <abbr linkend="TSS"/> contains the following information: 
              <ul>
                <li>
                  The <abbr linkend="TSS"/> shall list all sections of the standard to which the 
                  <abbr linkend="TOE"/> complies;</li>
                <li>
                  For each applicable section listed in the <abbr linkend="TSS"/>, for all 
                  statements that are not "shall" (that is, "shall not", "should", and "should not")
                  , if the <abbr linkend="TOE"/> implements such options it shall be described in 
                  the <abbr linkend="TSS"/>. If the included functionality is indicated as "shall 
                  not" or "should not" in the standard, the <abbr linkend="TSS"/> shall provide a 
                  rationale for why this will not adversely affect the security policy implemented 
                  by the <abbr linkend="TOE"/>;
                </li>
                <li>
                  For each applicable section of Appendix B, any omission of functionality related 
                  to "shall" or “should” statements shall be described.
                </li>
              </ul>
              <h:b>Key Generation for Elliptic Curve Cryptography (ECC)</h:b><h:p/>
              FIPS 186-4 ECC Key Generation Test
              For each supported NIST curve, i.e., P-256, P-384 and P-521, the evaluator shall
              require the implementation under test (IUT) to generate 10 private/public key pairs.
              The private key shall be generated using an approved random bit generator (RBG). To 
              determine correctness, the evaluator shall submit the generated key pairs to the 
              public key verification (PKV) function of a known good implementation.
              <h:br />
              FIPS 186-4 Public Key Verification (PKV) Test
              For each supported NIST curve, i.e., P-256, P-384 and P-521, the evaluator shall
              generate 10 private/public key pairs using the key generation function of a known 
              good implementation and modify five of the public key values so that they are 
              incorrect, leaving five values unchanged (i.e., correct). The evaluator shall obtain 
              in response a set of 10 PASS/FAIL values.
              <h:br />
              <h:b>Key Generation for Finite-Field Cryptography (FFC)</h:b><h:p/>
              The evaluator shall verify the implementation of the Parameters Generation and the 
              Key Generation for FFC by the <abbr linkend="TOE"/> using the Parameter Generation and 
              Key Generation test. This test verifies the ability of the <abbr linkend="TSF"/> to 
              correctly produce values for the field prime p, the cryptographic prime q (dividing 
              p-1), the cryptographic group generator g, and the calculation of the private key x 
              and public key y. The Parameter generation specifies 2 ways (or methods) to generate 
              the cryptographic prime q and the field prime p:
              <h:br />Cryptographic and Field Primes:
              <h:ul>
                <h:li>Primes q and p shall both be provable primes</h:li>
                <h:li>Primes q and field prime p shall both be probable primes</h:li>
              </h:ul>
              and two ways to generate the cryptographic group generator g:
              <h:br />
              Cryptographic Group Generator:
              <h:ul>
                <h:li>Generator g constructed through a verifiable process</h:li>
                <h:li>Generator g constructed through an unverifiable process.</h:li>
              </h:ul>
              The Key generation specifies 2 ways to generate the private key x:
              Private Key:
              <h:ul>
                <h:li>len(q) bit output of RBG where 1 &lt;=x &lt;= q-1</h:li>
                <h:li>len(q) + 64 bit output of RBG, followed by a mod q-1 operation where 
              1&lt;= x&lt;=q-1.</h:li>
              </h:ul>
              The security strength of the RBG must be at least that of the security offered by the 
              FFC parameter set.
              To test the cryptographic and field prime generation method for the provable primes 
              method and/or the group generator g for a verifiable process, the evaluator must seed 
              the <abbr linkend="TSF"/> parameter generation routine with sufficient data to 
              deterministically generate the parameter set.
              For each key length supported, the evaluator shall have the <abbr linkend="TSF"/> 
              generate 25 parameter sets and key pairs. The evaluator shall verify the correctness 
              of the <abbr linkend="TSF"/>’s implementation by comparing values generated by the 
              <abbr linkend="TSF"/> with those generated from a known good implementation. 
              Verification must also confirm
              <h:ul>
                <h:li>g != 0,1</h:li>
                <h:li>q divides p-1</h:li>
                <h:li>g^q mod p = 1</h:li>
                <h:li>g^x mod p = y</h:li>
              </h:ul>
              for each FFC parameter set and key pair.
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="FCS_CKM.1(2)" name="Cryptographic Symmetric Key Generation" status="optional">
          <f-element id="FCS_CKM.1.1(2)">
            <title>The application shall generate symmetric cryptographic keys using a Random Bit
              Generator as specified in <linkref linkend="FCS_RBG_EXT.1"/>  and specified
              cryptographic key sizes <selectables linebreak="yes">
                <selectable>128 bit</selectable>
                <selectable>256 bit</selectable>
               </selectables>. </title>
            <note role="application">Symmetric keys may be used to generate keys along the key
              chain.</note>
            <aactivity>
              <!-- Revised <tss>The evaluator shall review the TSS to determine that it describes how the
                functionality described by FCS_RBG_EXT.1 <cite linkend="bibAppPP"/> is invoked.<br/>
                If the email client is relying on random from the host platform, the evaluator shall
                verify the TSS includes the name/manufacturer of the external RBG. If different
                external RBGs are used for different platforms, the TSS identifies each one for each
                platform. <br/>If the email client is relying on random from the host platform, the
                evaluator shall verify the TSS describes the function call and parameters used when
                calling the external DRBG function. Also, the TSS includes a short description of
                the vendor's assumption for the amount of entropy seeding the external DRBG. The
                evaluator uses the description of the RBG functionality in FCS_RBG_EXT or
                documentation available for the operational environment to determine that the key
                size being requested is identical to the key size and mode to be used for the
                encryption/decryption of the user data (<linkref linkend="FCS_COP.1(f)" />. </tss> -->
              <tss>
		The evaluator shall review the 
		<abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> 
		to determine that it describes how the functionality described by FCS_RBG_EXT.1 
		is invoked.
		<h:br/> 
                If the application is relying on random bit generation from the
                host platform, the evaluator shall verify the 
		<abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> includes the
                name/manufacturer of the external RBG and describes the function call and parameters
                used when calling the external DRBG function. If different external RBGs are used
                for different platforms, the evaluator shall verify the TSS identifies each RBG for
                each platform. Also, the evaluator shall verify the TSS includes a short description
                of the vendor's assumption for the amount of entropy seeding the external DRBG. The
                evaluator uses the description of the RBG functionality in FCS_RBG_EXT or
                documentation available for the operational environment to determine that the key
                size being requested is identical to the key size and mode to be used for the
                encryption/decryption of the user data.
               </tss>
            </aactivity>
          </f-element>
        </f-component>


        <f-component id="fcs_ckm.2" name="Cryptographic Key Establishment" status="sel-based">
	  <selection-depends req="fcs_tlsc_ext.1.1"/>
          <f-element id="fcs_ckm.2.1">
            <title>
              The application shall
              <selectables>
                <selectable>
                  invoke platform-provided functionality
                </selectable>
                <selectable>
                  implement functionality
                </selectable>
              </selectables>
               to perform cryptographic key establishment in accordance with a specified 
              cryptographic key establishment method:<h:p/>
              
                  <h:b>[RSA-based key establishment schemes]</h:b> that meets the following: <h:b>[NIST 
                  Special Publication 800-56B, “Recommendation for Pair-Wise Key Establishment 
                  Schemes Using Integer Factorization Cryptography”]</h:b><h:p/>
             
              and
              <selectables linebreak="yes">
                <selectable>
                  <h:b>[Elliptic curve-based key establishment schemes]</h:b> that meets the 
                  following: <h:b>[NIST Special Publication 800-56A, “Recommendation for Pair-Wise Key Establishment 
                  Schemes Using Discrete Logarithm Cryptography”]</h:b>
                </selectable>
                <selectable>
                  <h:b>[Finite field-based key establishment schemes]</h:b> that meets the following: 
                  <h:b>[NIST Special Publication 800-56A, “Recommendation for Pair-Wise Key 
                  Establishment Schemes Using Discrete Logarithm Cryptography”]</h:b>
                </selectable>
                <selectable>
                  No other schemes
                </selectable>
              </selectables>.
            </title>
            <note role="application">
              The ST author shall select all key establishment schemes used for the selected cryptographic 
              protocols. FCS_TLSC_EXT.1 requires cipher suites that use RSA-based key establishment 
              schemes.
              <h:br />
              The RSA-based key establishment schemes are described in Section 9 of NIST SP 800-56B; 
              however, Section 9 relies on implementation of other sections in SP 800-56B. If the TOE acts 
              as a receiver in the RSA key establishment scheme, the TOE does not need to implement 
              RSA key generation.
              <h:br />
              The elliptic curves used for the key establishment scheme shall correlate with the curves 
              specified in <linkref linkend="FCS_CKM.1.1(1)"/>. 
              <h:br />
              The domain parameters used for the finite field-based key establishment scheme are specified 
              by the key generation according to <linkref linkend="FCS_CKM.1.1(1)"/>.
            </note>
            <aactivity>
              The evaluator shall ensure that the supported key establishment schemes correspond to the 
              key generation schemes identified in FCS_CKM.1.1. If the ST specifies more than one 
              scheme, the evaluator shall examine the TSS to verify that it identifies the usage for each 
              scheme.
              <h:br /> 
              The evaluator shall verify that the AGD guidance instructs the administrator how to configure 
              the TOE to use the selected key establishment scheme(s).
              <h:br />
              Assurance Activity Note: The following tests require the developer to provide access to a test 
              platform that provides the evaluator with tools that are typically not found on factory 
              products.
              <h:br />
              <h:b>Key Establishment Schemes</h:b><h:p/>
              The evaluator shall verify the implementation of the key establishment schemes supported by 
              the TOE using the applicable tests below. 
              <h:br />
              <h:b>SP800-56A Key Establishment Schemes</h:b><h:p/>
              The evaluator shall verify a TOE's implementation of SP800-56A key agreement schemes 
              using the following Function and Validity tests. These validation tests for each key agreement 
              scheme verify that a TOE has implemented the components of the key agreement scheme 
              according to the specifications in the Recommendation. These components include the 
              calculation of the DLC primitives (the shared secret value Z) and the calculation of the 
              derived keying material (DKM) via the Key Derivation Function (KDF). If key confirmation 
              is supported, the evaluator shall also verify that the components of key confirmation have 
              been implemented correctly, using the test procedures described below. This includes the 
              parsing of the DKM, the generation of MACdata and the calculation of MACtag.
              <h:br />
              <indent>
                <h:b>Function Test</h:b><h:p/>
                The Function test verifies the ability of the TOE to implement the key agreement 
                schemes correctly. To conduct this test the evaluator shall generate or obtain test vectors 
                from a known good implementation of the TOE supported schemes. For each supported 
                key agreement scheme-key agreement role combination, KDF type, and, if supported, 
                key confirmation role- key confirmation type combination, the tester shall generate 10 
                sets of test vectors. The data set consists of one set of domain parameter values (FFC) or 
                the NIST approved curve (ECC) per 10 sets of public keys. These keys are static, 
                ephemeral or both depending on the scheme being tested.
                <h:br />
                The evaluator shall obtain the DKM, the corresponding TOE’s public keys (static and/or 
                ephemeral), the MAC tag(s), and any inputs used in the KDF, such as the Other 
                Information <h:i>(OtherInfo)</h:i> and TOE id fields.
                <h:br />
                If the TOE does not use a KDF defined in SP 800-56A, the evaluator shall obtain only 
                the public keys and the hashed value of the shared secret.
                <h:br />
                The evaluator shall verify the correctness of the TSF’s implementation of a given 
                scheme by using a known good implementation to calculate the shared secret value, 
                derive the keying material DKM, and compare hashes or MAC tags generated from 
                these values.
                <h:br />
                If key confirmation is supported, the TSF shall perform the above for each implemented 
                approved MAC algorithm.
                <h:br />
                <h:b>Validity Test</h:b><h:p/>
                The Validity test verifies the ability of the TOE to recognize another party’s valid and 
                invalid key agreement results with or without key confirmation. To conduct this test, the 
                evaluator shall obtain a list of the supporting cryptographic functions included in the 
                SP800-56A key agreement implementation to determine which errors the TOE should 
                be able to recognize. The evaluator generates a set of 24 (FFC) or 30 (ECC) test vectors 
                consisting of data sets including domain parameter values or NIST approved curves, the 
                evaluator’s public keys, the TOE’s public/private key pairs, MACTag, and any inputs 
                used in the KDF, such as the OtherInfo and TOE id fields.
                <h:br />
                The evaluator shall inject an error in some of the test vectors to test that the TOE 
                recognizes invalid key agreement results caused by the following fields being incorrect: 
                the shared secret value Z, the DKM, the OtherInfo field, the data to be 
                MACed, or the generated MACTag. If the TOE contains the full or partial (only ECC) 
                public key validation, the evaluator will also individually inject errors in both parties’ 
                static public keys, both parties’ ephemeral public keys and the TOE’s static private key 
                to assure the TOE detects errors in the public key validation function and/or the partial 
                key validation function (in ECC only). At least two of the test vectors shall remain 
                unmodified and therefore should result in valid key agreement results (they should 
                pass).
                <h:br />
                The TOE shall use these modified test vectors to emulate the key agreement scheme 
                using the corresponding parameters. The evaluator shall compare the TOE’s results with 
                the results using a known good implementation verifying that the TOE detects these 
                errors.
                <h:br />
              </indent>
              <h:b>SP800-56B Key Establishment Schemes</h:b><h:p/>
              The evaluator shall verify that the TSS describes whether the TOE acts as a sender, a 
              recipient, or both for RSA-based key establishment schemes.
              <h:br />
              If the TOE acts as a sender, the following assurance activity shall be performed to ensure the 
              proper operation of every TOE supported combination of RSA-based key establishment 
              scheme:
              <h:br />
              <indent>
                To conduct this test the evaluator shall generate or obtain test vectors from a known 
                good implementation of the TOE supported schemes. For each combination of 
                supported key establishment scheme and its options (with or without key confirmation 
                if supported, for each supported key confirmation MAC function if key confirmation 
                is supported, and for each supported mask generation function if KTS-OAEP is 
                supported), the tester shall generate 10 sets of test vectors. Each test vector shall 
                include the RSA public key, the plaintext keying material, any additional input 
                parameters if applicable, the MacKey and MacTag if key confirmation is 
                incorporated, and the outputted ciphertext. For each test vector, the evaluator shall 
                perform a key establishment encryption operation on the TOE with the same inputs 
                (in cases where key confirmation is incorporated, the test shall use the MacKey from 
                the test vector instead of the randomly generated MacKey used in normal operation) 
                and ensure that the outputted ciphertext is equivalent to the ciphertext in the test 
                vector.
              </indent>
              <h:br />
              If the TOE acts as a receiver, the following assurance activities shall be performed to ensure 
              the proper operation of every TOE supported combination of RSA-based key establishment 
              scheme:
              <h:br />
              <indent>
                To conduct this test the evaluator shall generate or obtain test vectors from a known 
                good implementation of the TOE supported schemes. For each combination of 
                supported key establishment scheme and its options (with our without key 
                confirmation if supported, for each supported key confirmation MAC function if key 
                confirmation is supported, and for each supported mask generation function if KTS-OAEP is 
                supported), the tester shall generate 10 sets of test vectors. Each test vector 
                shall include the RSA private key, the plaintext keying material (KeyData), any 
                additional input parameters if applicable, the MacTag in cases where key 
                confirmation is incorporated, and the outputted ciphertext. For each test vector, the 
                evaluator shall perform the key establishment decryption operation on the TOE and 
                ensure that the outputted plaintext keying material (KeyData) is equivalent to the 
                plaintext keying material in the test vector. In cases where key confirmation is 
                incorporated, the evaluator shall perform the key confirmation steps and ensure that 
                the outputted MacTag is equivalent to the MacTag in the test vector.
              </indent>
              <h:br />
              The evaluator shall ensure that the TSS describes how the TOE handles decryption errors. In 
              accordance with NIST Special Publication 800-56B, the TOE must not reveal the particular 
              error that occurred, either through the contents of any outputted or logged error message or 
              through timing variations. If KTS-OAEP is supported, the evaluator shall create separate 
              contrived ciphertext values that trigger each of the three decryption error checks described in 
              NIST Special Publication 800-56B section 7.2.2.3, ensure that each decryption attempt 
              results in an error, and ensure that any outputted or logged error message is identical for each. 
              If KTS-KEM-KWS is supported, the evaluator shall create separate contrived ciphertext 
              values that trigger each of the three decryption error checks described in NIST Special 
              Publication 800-56B section 7.2.3.3, ensure that each decryption attempt results in an error, 
              and ensure that any outputted or logged error message is identical for each.
            </aactivity>
          </f-element>
        </f-component>


<!-- 

Commenting out: the fundamental question is how to handle requirements for more general
functionality (such as these)
        <f-component id="fcs_cop_ext.1" name="Encryption/Decryption Services">
          <f-element id="fcs_cop_ext.1.1">
            <title>The application shall <selectables linebreak="yes">
                <selectable>perform no encryption/decryption</selectable>
                <selectable>invoke platform-provided encryption/decryption functionality</selectable>
                <selectable>implement encryption/decryption functionality</selectable>
              </selectables> 
	      .
	    </title>
            <note role="application">
			  The selection <i>invoke platform-provided encryption/decryption services</i> is to be
              chosen in cases where the application uses platform APIs to perform these operations.
              If <i>implement encryption/decryption functionality</i> is selected, then
              additional requirements from <linkref linkend="FCS_COP.1(1)"/> shall be included in
              the <abbr linkend="ST"/>.  
            </note>
            <aactivity>
              If <b>perform no encryption/decryption</b> is selected, the evaluator shall inspect the 
			  application and its developer documentation and verify that the application needs no
              encryption/decryption services. 
			  <br/>
              If <b>implement encryption/decryption functionality</b> is selected, the evaluator shall ensure
			  that additional <linkref linkend="FCS_COP.1(1)"/> elements are included in the <abbr linkend="ST"/>.
			  <br/>
			  If <b>invoke platform-provided encryption/decryption functionality </b> is selected, 
			  the evaluator shall examine the TSS of the
              application to verify that it describes how the platform's encryption/decryption
              functionality is invoked for each operation for which it is used by the application. 
			</aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_cop_ext.2" name="Cryptographic Hashing Services">
          <f-element id="fcs_cop_ext.2.1">
            <title>The application shall <selectables linebreak="yes">
                <selectable>perform no cryptographic hashing</selectable>
                <selectable>invoke platform-provided cryptographic hashing</selectable>
                <selectable>implement cryptographic hashing</selectable>
              </selectables> 
	      .
	    </title>
            <note role="application">
			  The selection <i>invoke platform-provided cryptographic hashing</i> is to be
              chosen in cases where the application uses platform APIs to perform cryptographic
              hashing. If <i>implement cryptographic hashing</i> is selected, then
              additional requirements from <linkref linkend="FCS_COP.1(2)"/> shall be included in
              the <abbr linkend="ST"/>.
            </note>
            <aactivity>
              If <b>perform no cryptographic hashing</b> is selected, the evaluator shall inspect the 
			  application and its developer documentation and verify that the application needs no
              cryptographic hashing services. 
			  <br/>
              If <b>implement cryptographic hashing</b> is selected, the evaluator shall ensure
			  that additional <linkref linkend="FCS_COP.1(2)"/> elements are included in the <abbr linkend="ST"/>.
			  <br/>
			  If <b>invoke platform-provided cryptographic hashing</b> is selected, 
			  the evaluator shall examine the TSS of the
              application to verify that it describes how the platform's hashing
              functionality is invoked for each operation for which it is used in the application, including
			  digest sizes used.
			</aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_cop_ext.3" name="Cryptographic Signing Services">
          <f-element id="fcs_cop_ext.3.1">
            <title>The application shall 
			  <selectables linebreak="yes">
                <selectable>perform no cryptographic signing</selectable>
                <selectable>invoke platform-provided cryptographic signing</selectable>
                <selectable>implement cryptographic signing</selectable>
              </selectables> 
	        .
	        </title>
            <note role="application">The selection <i>invoke platform-provided cryptographic signing</i> 
			  is to be used in cases where the application uses platform APIs to perform cryptographic
              signing. If <i>implement cryptographic signing</i> is selected, then
              additional requirements from <linkref linkend="FCS_COP.1(3)"/> shall be included in
              the <abbr linkend="ST"/>.
            </note>
            <aactivity>
              If <b>perform no cryptographic signing</b> is selected, the evaluator shall inspect the 
			  application and its developer documentation and verify that the application needs no
              cryptographic hashing services. 
			  <br/>
              If <b>implement cryptographic signing</b> is selected, the evaluator shall ensure
			  that additional <linkref linkend="FCS_COP.1(3)"/> elements are included in the <abbr linkend="ST"/>.
			  <br/>
			  If <b>invoke platform-provided cryptographic cryptographic signing</b> is selected, 
			  the evaluator shall examine the TSS of the
              application to verify that it describes how the platform's digital signature
              functionality is invoked for each operation for which it is used in the application, 
			  including digest sizes used.
              </aactivity>
          </f-element>
        </f-component>
-->
        <f-component id="fcs_cop.1(1)" name="Cryptographic Operation - Encryption/Decryption" status="sel-based">
          <selection-depends req="fcs_tlsc_ext.1.1"/>
	  <selection-depends req="fcs_sto_ext.1.1"/>
          <f-element id="fcs_cop.1.1(1)">
            <title>The application shall perform encryption/decryption in accordance with a specified 
        cryptographic algorithm  
		<h:br/>
        <h:ul>
          <h:li>AES-CBC (as defined in NIST SP 800-38A) mode;</h:li>
        </h:ul>
        and
		<selectables linebreak="yes">
		  <selectable>AES-GCM (as defined in NIST SP 800-38D)</selectable>
		  <selectable>no other modes</selectable>
	    </selectables>
            and cryptographic key sizes 256-bit and 
		<selectables>
		  <selectable>128-bit</selectable>
		  <selectable>no other key sizes</selectable>
	    </selectables>
		.
		</title>
            <note role="application">
                For the first selection, the ST author should choose
                the mode or modes in which AES operates. For the second selection, the ST author should
                choose the key sizes that are supported by this functionality. 128-bit key size 
                is required in order to comply with <linkref linkend="FCS_TLSC_EXT.1"/> and
				<linkref linkend="FCS_CKM.1(1)"/>, if those are selected.
				<h:br/>
            </note>
            <aactivity>
			The evaluator checks the AGD documents to determine that any configuration that 
			is required to be done to configure the functionality for the required modes
			and key sizes is present. The evaluator shall perform all of the 
			following tests for each algorithm implemented by the TSF and used to
			satisfy the requirements of this PP:
			<h:br/>
              <h:b>AES-CBC Known Answer Tests</h:b>
              <h:p />There are four Known Answer Tests (KATs), described below. In
              all KATs, the plaintext, ciphertext, and IV values shall be 128-bit
              blocks. The results from each test may either be obtained by the
              evaluator directly or by supplying the inputs to the implementer
              and receiving the results in response. To determine correctness,
              the evaluator shall compare the resulting values to those obtained
              by submitting the same inputs to a known good implementation. 
              <h:ul>
                <h:li>KAT-1. To test the encrypt functionality of AES-CBC, the
                evaluator shall supply a set of 10 plaintext values and obtain
                the ciphertext value that results from AES-CBC encryption of the
                given plaintext using a key value of all zeros and an IV of all
                zeros. Five plaintext values shall be encrypted with a 128-bit
                all-zeros key, and the other five shall be encrypted with a
                256-bit all- zeros key. To test the decrypt functionality of
                AES-CBC, the evaluator shall perform the same test as for
                encrypt, using 10 ciphertext values as input and AES-CBC
                decryption.</h:li>
                <h:li>KAT-2. To test the encrypt functionality of AES-CBC, the
                evaluator shall supply a set of 10 key values and obtain the
                ciphertext value that results from AES-CBC encryption of an
                all-zeros plaintext using the given key value and an IV of all
                zeros. Five of the keys shall be 128-bit keys, and the other five
                shall be 256-bit keys. To test the decrypt functionality of
                AES-CBC, the evaluator shall perform the same test as for
                encrypt, using an all-zero ciphertext value as input and AES-CBC
                decryption.</h:li>
                <h:li>KAT-3. To test the encrypt functionality of AES-CBC, the
                evaluator shall supply the two sets of key values described below
                and obtain the ciphertext value that results from AES encryption
                of an all-zeros plaintext using the given key value and an IV of
                all zeros. The first set of keys shall have 128 128-bit keys, and
                the second set shall have 256 256-bit keys. Key i in each set
                shall have the leftmost i bits be ones and the rightmost N-i bits
                be zeros, for i in [1,N]. To test the decrypt functionality of
                AES-CBC, the evaluator shall supply the two sets of key and
                ciphertext value pairs described below and obtain the plaintext
                value that results from AES-CBC decryption of the given
                ciphertext using the given key and an IV of all zeros. The first
                set of key/ciphertext pairs shall have 128 128-bit key/ciphertext
                pairs, and the second set of key/ciphertext pairs shall have 256
                256-bit key/ciphertext pairs. Key i in each set shall have the
                leftmost i bits be ones and the rightmost N-i bits be zeros, for
                i in [1,N]. The ciphertext value in each pair shall be the value
                that results in an all-zeros plaintext when decrypted with its
                corresponding key.</h:li>
                <h:li>KAT-4. To test the encrypt functionality of AES-CBC, the
                evaluator shall supply the set of 128 plaintext values described
                below and obtain the two ciphertext values that result from
                AES-CBC encryption of the given plaintext using a 128-bit key
                value of all zeros with an IV of all zeros and using a 256-bit
                key value of all zeros with an IV of all zeros, respectively.
                Plaintext value i in each set shall have the leftmost i bits be
                ones and the rightmost 128-i bits be zeros, for i in
                [1,128].</h:li>
              </h:ul>To test the decrypt functionality of AES-CBC, the evaluator
              shall perform the same test as for encrypt, using ciphertext values
              of the same form as the plaintext in the encrypt test as input and
              AES-CBC decryption. 
              <h:br />
              <h:b>AES-CBC Multi-Block Message Test</h:b>
              <h:p />The evaluator shall test the encrypt functionality by
              encrypting an i-block message where 1 &lt; i &lt;= 10. The
              evaluator shall choose a key, an IV and plaintext message of length
              i blocks and encrypt the message, using the mode to be tested, with
              the chosen key and IV. The ciphertext shall be compared to the
              result of encrypting the same plaintext message with the same key
              and IV using a known good implementation. The evaluator shall also
              test the decrypt functionality for each mode by decrypting an
              i-block message where 1 &lt; i &lt;=10. The evaluator shall choose
              a key, an IV and a ciphertext message of length i blocks and
              decrypt the message, using the mode to be tested, with the chosen
              key and IV. The plaintext shall be compared to the result of
              decrypting the same ciphertext message with the same key and IV
              using a known good implementation. AES-CBC Monte Carlo Tests The
              evaluator shall test the encrypt functionality using a set of 200
              plaintext, IV, and key 3- tuples. 100 of these shall use 128 bit
              keys, and 100 shall use 256 bit keys. The plaintext and IV values
              shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be
              run as follows: 
              <h:pre>
              # Input: PT, IV, Key
              for i = 1 to 1000:
                if i == 1:
                      CT[1] = AES-CBC-Encrypt(Key, IV, PT)
                      PT = IV
                else:
                  CT[i] = AES-CBC-Encrypt(Key, PT) 
                  PT = CT[i-1]
              </h:pre>The ciphertext computed in the 1000th iteration (i.e.,
              CT[1000]) is the result for that trial. This result shall be
              compared to the result of running 1000 iterations with the same
              values using a known good implementation.
              <h:br />The evaluator shall test the decrypt functionality using the
              same test as for encrypt, exchanging CT and PT and replacing
              AES-CBC-Encrypt with AES-CBC-Decrypt. 
              <h:br />
              <h:b>AES-GCM Monte Carlo Tests</h:b>
              <h:p />The evaluator shall test the authenticated encrypt
              functionality of AES-GCM for each combination of the following
              input parameter lengths: 
              <h:ul>
                <h:li>128 bit and 256 bit keys</h:li>
                <h:li>Two plaintext lengths. One of the plaintext lengths shall be
                a non-zero integer multiple of 128 bits, if
                supported. The other plaintext length shall not be an integer
                multiple of 128 bits, if supported.</h:li>
                <h:li>Three AAD lengths. One AAD length shall be 0, if supported.
                One AAD length shall be a non-zero integer
                multiple of 128 bits, if supported. One AAD length shall not be
                an integer multiple of 128 bits, if
                supported.</h:li>
                <h:li>Two IV lengths. If 96 bit IV is supported, 96 bits shall be
                one of the two IV lengths tested.</h:li>
              </h:ul>The evaluator shall test the encrypt functionality using a set
              of 10 key, plaintext, AAD, and IV tuples for each combination of
              parameter lengths above and obtain the ciphertext value and tag
              that results from AES-GCM authenticated encrypt. Each supported tag
              length shall be tested at least once per set of 10. The IV value
              may be supplied by the evaluator or the implementation being
              tested, as long as it is known. 
              <h:br />The evaluator shall test the decrypt functionality using a
              set of 10 key, ciphertext, tag, AAD, and IV 5-tuples for each
              combination of parameter lengths above and obtain a Pass/Fail
              result on authentication and the decrypted plaintext if Pass. The
              set shall include five tuples that Pass and five that Fail. 
              <h:br />The results from each test may either be obtained by the
              evaluator directly or by supplying the inputs to the implementer
              and receiving the results in response. To determine correctness,
              the evaluator shall compare the resulting values to those obtained
              by submitting the same inputs to a known good
              implementation.
            </aactivity>
          </f-element>
        </f-component> 
        <f-component id="fcs_cop.1(2)" name="Cryptographic Operation - Hashing" status="sel-based">
          <selection-depends req="fcs_tlsc_ext.1.1"/>
          <f-element id="fcs_cop.1.1(2)">
            <title>The application shall perform cryptographic hashing services in accordance with a specified 
        cryptographic algorithm 
	      <selectables linebreak="yes">
	  <selectable>SHA-1</selectable>
		<selectable>SHA-256</selectable>
		<selectable>SHA-384</selectable>
		<selectable>SHA-512</selectable>
		<selectable>no other algorithms</selectable>
	      </selectables>
              and message digest sizes <selectables linebreak="yes">
                <selectable>160</selectable>
                <selectable>256</selectable>
                <selectable>384</selectable>
                <selectable>512</selectable>
                <selectable>no other message digest sizes</selectable>
              </selectables> bits that meet the following: FIPS Pub 180-4.
            </title>
            <note role="application">
              	Per NIST SP 800-131A, SHA-1 for generating digital signatures is no
              	longer allowed, and SHA-1 for verification of digital signatures is strongly discouraged as
              	there may be risk in accepting these signatures.
              	<h:br/>
                SHA-1 is currently required in order to comply with <linkref linkend="FCS_TLSC_EXT.1"/>. If
                FCS_TLSC_EXT.1.1 is included in the ST, the hashing algorithms selection for FCS_COP.1(2)
                must match the hashing algorithms used in the mandatory and selected cipher suites of
                FCS_TLSC_EXT.1.1. Vendors are strongly encouraged to implement updated protocols that
              	support the SHA-2 family; until updated protocols are supported, this PP allows support for
              	SHA-1 implementations in compliance with SP 800-131A.
              	<h:br/>
              	The intent of this requirement is to specify the hashing function. The hash selection must
              	support the message digest size selection. The hash selection should be consistent with the
              	overall strength of the algorithm used (for example, SHA 256 for 128-bit keys).
            </note>
            <aactivity>
            The evaluator shall check that the association of the hash function with other
            application cryptographic functions (for example, the digital signature verification
            function) is documented in the TSS.
            <h:br/>
            The <abbr linkend="TSF"/> hashing functions can be implemented in one of two 
            modes. The first mode is the byte-oriented mode. In this mode the <abbr linkend="TSF"/> 
            hashes only messages that are an integral number of bytes in length; i.e., the length 
            (in bits) of the message to be hashed is divisible by 8. The second mode is the 
            bit-oriented mode. In this mode the <abbr linkend="TSF"/> hashes messages of arbitrary 
            length. As there are different tests for each mode, an indication is given in the 
            following sections for the bit-oriented vs. the byte-oriented testmacs. The evaluator 
            shall perform all of the following tests for each hash algorithm implemented by the 
            <abbr linkend="TSF"/> and used to satisfy the requirements of this PP.
            <h:br/>
            The following tests require the developer to provide access to a test application
            that provides the evaluator with tools that are typically not found in the production
            application.
               <testlist>
                <test>Short Messages Test - Bit oriented Mode The evaluators devise an input set
                  consisting of m+1 messages, where m is the block length of the hash algorithm. The
                  length of the messages range sequentially from 0 to m bits. The message text shall
                  be pseudorandomly generated. The evaluators compute the message digest for each of
                  the messages and ensure that the correct result is produced when the messages are
                  provided to the <abbr linkend="TSF"/>. </test>
                <test>Short Messages Test - Byte oriented Mode The evaluators devise an input set
                  consisting of m/8+1 messages, where m is the block length of the hash algorithm.
                  The length of the messages range sequentially from 0 to m/8 bytes, with each
                  message being an integral number of bytes. The message text shall be
                  pseudorandomly generated. The evaluators compute the message digest for each of
                  the messages and ensure that the correct result is produced when the messages are
                  provided to the <abbr linkend="TSF"/>. </test>
                <test>Selected Long Messages Test - Bit oriented Mode The evaluators devise an input
                  set consisting of m messages, where m is the block length of the hash algorithm.
                  The length of the ith message is 512 + 99*i, where 1 ≤ i ≤ m. The message text
                  shall be pseudorandomly generated. The evaluators compute the message digest for
                  each of the messages and ensure that the correct result is produced when the
                  messages are provided to the <abbr linkend="TSF"/>. </test>
                <test>Selected Long Messages Test - Byte oriented Mode The evaluators devise an
                  input set consisting of m/8 messages, where m is the block length of the hash
                  algorithm. The length of the ith message is 512 + 8*99*i, where 1 ≤ i ≤ m/8. The
                  message text shall be pseudorandomly generated. The evaluators compute the message
                  digest for each of the messages and ensure that the correct result is produced
                  when the messages are provided to the <abbr linkend="TSF"/>. </test>
                <test>Pseudorandomly Generated Messages Test This test is for byte-oriented
                  implementations only. The evaluators randomly generate a seed that is n bits long,
                  where n is the length of the message digest produced by the hash function to be
                  tested. The evaluators then formulate a set of 100 messages and associated digests
                  by following the algorithm provided in Figure 1 of [SHAVS]. The evaluators then
                  ensure that the correct result is produced when the messages are provided to the
                  <abbr linkend="TSF"/>. </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component> 
        <f-component id="fcs_cop.1(3)" name="Cryptographic Operation - Signing"  status="sel-based">
          <selection-depends req="fcs_tlsc_ext.1.1"/>
          <f-element id="fcs_cop.1.1(3)">
            <title>The application shall perform cryptographic signature services (generation and
              verification) in accordance with a specified cryptographic algorithm <selectables
                linebreak="yes">
                <selectable><h:b>RSA schemes</h:b> using cryptographic key sizes of 2048-bit or greater that meet the 
                 following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Section 4
		</selectable>
                <selectable><h:b>ECDSA schemes</h:b> using “NIST curves” P-256, P-384 and 
                   <selectables>
                    <selectable>P-521</selectable>
                    <selectable>no other curves</selectable>
                  </selectables>
                  that meet the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Section 5
                </selectable>
              </selectables>
              .
            </title>
            <note role="application">
            	The ST Author should choose the algorithm implemented to perform
		digital signatures; if more than one algorithm is available, this requirement should be iterated
		to specify the functionality. For the algorithm chosen, the ST author should make the
		appropriate assignments/selections to specify the parameters that are implemented for that
		algorithm. RSA signature generation and verification is currently required in order to comply
		with <linkref linkend="FCS_TLSC_EXT.1"/>.
            </note>
            <aactivity>The evaluator shall perform the following activities based on the selections
              in the <abbr linkend="ST"/>.
            <h:br/>
            The following tests require the developer to provide access to a test application
            that provides the evaluator with tools that are typically not found in the production
            application.
            <h:br/>
              ECDSA Algorithm Tests
              <testlist>
                <test>ECDSA FIPS 186-4 Signature Generation Test. For each
                  supported NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the
                  evaluator shall generate 10 1024-bit long messages and obtain for each message a
                  public key and the resulting signature values R and S. To determine correctness,
                  the evaluator shall use the signature verification function of a known good
                  implementation. 
                </test>
                <test>
                  ECDSA FIPS 186-4 Signature Verification Test. For each supported
                  NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the evaluator
                  shall generate a set of 10 1024-bit message, public key and signature tuples and
                  modify one of the values (message, public key or signature) in five of the 10
                  tuples. The evaluator shall obtain in response a set of 10 PASS/FAIL values.
                </test>
                </testlist>
                RSA Signature Algorithm Tests
                <testlist>
                <test>Signature Generation Test. The evaluator shall
                  verify the implementation of RSA Signature Generation by the <abbr linkend="TOE"/>
                  using the Signature Generation Test. To conduct this test the evaluator must 
                  generate or obtain 10 messages from a trusted reference implementation for each 
                  modulus size/SHA combination supported by the <abbr linkend="TSF"/>. The evaluator 
                  shall have the <abbr linkend="TOE"/> use their private key and modulus value to 
                  sign these messages. The evaluator shall verify the correctness of the 
                  <abbr linkend="TSF"/>’s signature using a known good implementation and the 
                  associated public keys to verify the signatures.
                 </test>
                  <test>Signature Verification Test. The 
                  evaluator shall perform the Signature Verification test to verify the ability of 
                  the <abbr linkend="TOE"/> to recognize another party’s valid and invalid 
                  signatures. The evaluator shall inject errors into the test vectors produced 
                  during the Signature Verification Test by introducing errors in some of the public 
                  keys, e, messages, IR format, and/or signatures. The <abbr linkend="TOE"/> attempts 
                  to verify the signatures and returns success or failure.
                  </test>
              </testlist>
            </aactivity>
          </f-element>
          </f-component> 
        <f-component id="fcs_cop.1(4)" name="Cryptographic Operation - Keyed-Hash Message Authentication" status="sel-based">
          <selection-depends req="fcs_tlsc_ext.1.1"/>
          <f-element id="fcs_cop.1.1(4)">
            <title>The application shall perform keyed-hash message authentication in accordance with a 
			specified cryptographic algorithm
			<h:ul>
			<h:li>HMAC-SHA-256</h:li>
			</h:ul>
			and
			<selectables linebreak="yes">
                <selectable>SHA-1</selectable>
                <selectable>SHA-384</selectable>
                <selectable>SHA-512</selectable>
                <selectable>no other algorithms</selectable>
            </selectables>
			with key sizes <assignable>key size (in bits) used in HMAC</assignable> 
			and message digest sizes 256 and 
			<selectables>
                <selectable>160</selectable>
                <selectable>384</selectable>
                <selectable>512</selectable>
                <selectable>no other size</selectable>
            </selectables>
            bits that meet the following: FIPS Pub 198-1 <h:i>The Keyed-Hash Message Authentication Code</h:i>
			and FIPS Pub 180-4 <h:i>Secure Hash Standard</h:i>.
            </title>
            <note role="application">
			  The intent of this requirement is to specify the keyed-hash
			  message authentication function used for key
			  establishment purposes for the various cryptographic protocols
			  used by the application (e.g., trusted channel). The hash selection must
			  support the message digest size selection. The hash selection
			  should be consistent with the overall strength of the algorithm
			  used for <linkref linkend="FCS_COP.1(1)"/>. HMAC-SHA256 is required in order to comply
			  with the required cipher suites in <linkref linkend="FCS_TLSC_EXT.1" />.
            </note>
            <aactivity>The evaluator shall perform the following activities based on the selections
              in the <abbr linkend="ST"/>.
            <h:br/>
            For each of the supported parameter sets, the evaluator shall compose 15 sets of test data.
			Each set shall consist of a key and message data.  The evaluator shall have the TSF generate
			HMAC tags for these sets of test data.  The resulting MAC tags shall be compared to the 
			result of generating HMAC tags with the same key and IV using a known-good implementation.
            </aactivity>
          </f-element>
          </f-component> 
        <f-component id="fcs_sto_ext.1" name="Storage of Credentials" status="threshold">
          <f-element id="fcs_sto_ext.1.1">
            <title>The application shall 
              <selectables linebreak="yes">
                <selectable>not store any credentials</selectable>
                <selectable>invoke the functionality provided by the platform to securely store 
                  <assignable>list of credentials</assignable>
                </selectable>
                <selectable>implement functionality to securely store
                  <assignable>list of credentials</assignable>
                </selectable>
              </selectables>
               to non-volatile memory.</title>
            <note role="application">This requirement ensures that persistent credentials (secret 
              keys, PKI private keys, or passwords) are stored securely.  
              <h:br/>
			  The assurance activity implicitly restricts which selections can be made, on per-platform basis.  
			  For example, if a platform provides hardware-backed protection for credential storage, then
			  the third selection cannot be indicated.
              <h:br/>
              If <h:i>implement functionality to securely store</h:i> credentials is selected, then the
              following components must be included in the <abbr linkend="ST"/>: <linkref linkend="FCS_COP.1(1)"/>.
              If other cryptographic operations are used to implement the secure storage of credentials, 
              the corresponding requirements must be included in the ST.
            </note>
            <aactivity>The evaluator shall check the TSS to ensure that it lists all persistent 
              credentials (secret keys, PKI private keys, or passwords) needed to meet the 
              requirements in the <abbr linkend="ST"/>. For each of these items, the evaluator shall 
              confirm that the TSS lists for what purpose it is used, and how it is stored. 
              <h:br/>
              For all credentials for which the application invokes platform-provided
              functionality, the evaluator shall perform the following actions which vary per platform.
              <subaactivity platform="blackberry">The evaluator shall verify that the application 
                uses the BlackBerry KeyStore and Security Builder APIs to store credentials.
              </subaactivity>
              <subaactivity platform="android">The evaluator shall verify that the application uses
	      the Android <h:code>KeyStore</h:code> or the Android <h:code>KeyChain</h:code> to store certificates.  
              </subaactivity>
              <subaactivity platform="windows">The evaluator shall verify that all certificates are
                stored in the Windows Certificate Store. The evaluator shall verify that other
                credentials, like passwords, are stored in the Windows Credential Manager or stored 
                using the Data Protection API (DPAPI). For Windows Universal Applications, the evaluator shall 
                verify that the application is using the ProtectData class and storing credentials 
                in IsolatedStorage.
              </subaactivity>
              <subaactivity platform="ios">
		The evaluator shall verify that all credentials are stored
                within a <h:code>Keychain</h:code>.  
	      </subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall verify that all keys are stored using Linux 
		<h:code>keyrings</h:code>.
	      </subaactivity>
              <subaactivity platform="Solaris">
            		The evaluator shall verify that all keys are stored using Solaris 
            		<h:code>Key Management Framework (KMF)</h:code>.
              </subaactivity>
              <subaactivity platform="OS X">The evaluator shall verify that all credentials are 
                stored within <h:code>Keychain</h:code>.</subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_tlsc_ext.1" name="TLS Client Protocol" status="sel-based">
          <selection-depends req="ftp_dit_ext.1.1"/>
          <f-element id="fcs_tlsc_ext.1.1">
            <title> The application shall 
              <selectables>
                <selectable>invoke platform-provided <abbr title="Transport Layer Security">TLS</abbr> 1.2</selectable>
                <selectable>implement <abbr title="Transport Layer Security">TLS</abbr> 1.2 (RFC 5246)
                </selectable>
              </selectables> supporting the following cipher suites: <h:p/>Mandatory Cipher Suites:
              TLS_RSA_WITH_AES_128_CBC_SHA as defined in RFC 5246 <h:p/>Optional Cipher Suites:
                <selectables linebreak="yes">
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>no other cipher suite</selectable>
              </selectables>
	           .
            </title>
            <note role="application">The cipher suites to be tested in the evaluated configuration 
              are limited by this requirement. The <abbr title="Security Target" linkend="ST">ST
              </abbr> author should select the optional cipher suites that are supported; if there 
              are no cipher suites supported other than the mandatory suites, then “None” should be 
              selected. It is necessary to limit the cipher suites that can be used in an evaluated 
              configuration administratively on the server in the test environment. The Suite B 
              algorithms listed above (RFC 6460) are the preferred algorithms for implementation. 
              TLS_RSA_WITH_AES_128_CBC_SHA is required in order to ensure compliance with RFC 5246. 
             <h:br />
              These requirements will be revisited as new 
              <abbr title="Transport Layer Security">TLS</abbr> versions are standardized by the 
              IETF.
             <h:br />
              If any cipher suites are selected using ECDHE, then 
			  <linkref linkend="FCS_TLSC_EXT.4"/> is required.
             <h:br />
              If <h:i>implement TLS 1.2 (RFC 5246)</h:i> is selected, then 
			  <linkref linkend="FCS_CKM.2"/>, 
			  <linkref linkend="FCS_CKM_EXT.1"/>, 
			  <linkref linkend="FCS_COP.1(1)"/>, 
			  <linkref linkend="FCS_COP.1(2)"/>, 
			  <linkref linkend="FCS_COP.1(3)"/>, and
			  <linkref linkend="FCS_COP.1(4)"/>
			  are required.
            </note>
            <aactivity>
              The evaluator shall check the description of the implementation of this protocol in 
              the <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> to ensure that 
              the cipher suites supported are specified. The evaluator shall check the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> to ensure that the 
              cipher suites specified include those listed for this component. The evaluator shall 
              also check the operational guidance to ensure that it contains instructions on 
              configuring the <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> so that 
              TLS conforms to the description in the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr>. The evaluator shall 
              also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall establish a 
                  <abbr title="Transport Layer Security">TLS</abbr> connection using each of the 
                  cipher suites specified by the requirement. This connection may be established as 
                  part of the establishment of a higher-level protocol, e.g., as part of an EAP 
                  session. It is sufficient to observe the successful negotiation of a cipher suite 
                  to satisfy the intent of the test; it is not necessary to examine the 
                  characteristics of the encrypted traffic in an attempt to discern the cipher suite 
                  being used (for example, that the cryptographic algorithm is 128-bit AES and not 
                  256-bit AES).
                </test>
                <test>
                  The evaluator shall attempt to establish the connection using a server with a 
                  server certificate that contains the Server Authentication purpose in the 
                  extendedKeyUsage field and verify that a connection is established. The evaluator 
                  will then verify that the client rejects an otherwise valid server certificate 
                  that lacks the Server Authentication purpose in the extendedKeyUsage field and a 
                  connection is not established. Ideally, the two certificates should be identical 
                  except for the extendedKeyUsage field.
                </test>
                <test>
                  The evaluator shall send a server certificate in the 
                  <abbr title="Transport Layer Security">TLS</abbr> connection that does not 
                  match the server-selected cipher suite (for example, send a ECDSA certificate while 
                  using the TLS_RSA_WITH_AES_128_CBC_SHA cipher suite or send a RSA certificate while 
                  using one of the ECDSA cipher suites.) The evaluator shall verify that the 
                  <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> disconnects after 
                  receiving the server’s Certificate handshake message.
                </test>
                <test>
                  The evaluator shall configure the server to select the TLS_NULL_WITH_NULL_NULL 
                  cipher suite and verify that the client denies the connection.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic: 
                  <testlist>
                    <test>
                      Change the <abbr title="Transport Layer Security">TLS</abbr> version selected 
                      by the server in the Server Hello to a non-supported 
                      <abbr title="Transport Layer Security">TLS</abbr> version (for example 1.3 
                      represented by the two bytes 03 04) and verify that the client rejects the 
                      connection.
                    </test>
                    <test>
                      Modify at least one byte in the server’s nonce in the Server Hello handshake 
                      message, and verify that the client rejects the Server Key Exchange handshake 
                      message (if using a DHE or ECDHE cipher suite) or that the server denies the 
                      client’s Finished handshake message.
                    </test>
                    <test>
                      Modify the server’s selected cipher suite in the Server Hello handshake 
                      message to be a cipher suite not presented in the Client Hello handshake 
                      message. The evaluator shall verify that the client rejects the connection 
                      after receiving the Server Hello.
                    </test>
                    <test>
                      Modify the signature block in the Server’s Key Exchange handshake message, and 
                      verify that the client rejects the connection after receiving the Server Key 
                      Exchange message.
                    </test>
                    <test>
                      Modify a byte in the Server Finished handshake message, and verify that the 
                      client sends a fatal alert upon receipt and does not send any application 
                      data.
                    </test>
                    <test>
                      Send an garbled message from the Server after the Server has issued the 
                      ChangeCipherSpec message and verify that the client denies the connection.
                    </test>
                  </testlist>
                </test>
              </testlist>
            </aactivity>
            </f-element>
          <f-element id="fcs_tlsc_ext.1.2">
            <title>
              The application shall verify that the presented identifier matches the reference
              identifier according to RFC 6125.
            </title>
            <note role="application">
              The rules for verification of identity are described in Section 6 of RFC 6125. The 
              reference identifier is established by the user (e.g. entering a URL into a web 
              browser or clicking a link), by configuration (e.g. configuring the name of a mail 
              server or authentication server), or by an application (e.g. a parameter of an API) 
              depending on the application service. Based on a singular reference identifier’s 
              source domain and application service type (e.g. HTTP, SIP, LDAP), the client 
              establishes all reference identifiers which are acceptable, such as a Common Name for 
              the Subject Name field of the certificate and a (case-insensitive) DNS name, URI name, 
              and Service Name for the Subject Alternative Name field. The client then compares this 
              list of all acceptable reference identifiers to the presented identifiers in the 
              <abbr title="Transport Layer Security">TLS</abbr> server’s certificate.
             <h:br />
              The preferred method for verification is the Subject Alternative Name using DNS names, 
              URI names, or Service Names. Verification using the Common Name is required for the 
              purposes of backwards compatibility. Additionally, support for use of IP addresses in 
              the Subject Name or Subject Alternative name is discouraged as against best practices 
              but may be implemented.  Finally, the client should avoid constructing reference 
              identifiers using wildcards. However, if the presented identifiers include wildcards, 
              the client must follow the best practices regarding matching; these best practices are 
              captured in the assurance activity.
            </note>
            <aactivity>
              The evaluator shall ensure that the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes the 
              client’s method of establishing all reference identifiers from the 
              application-configured reference identifier, including which types of reference 
              identifiers are supported (e.g. Common Name, DNS Name, URI Name, Service Name, or other 
              application-specific Subject Alternative Names) and whether IP addresses and wildcards 
              are supported.  The evaluator shall ensure that this description identifies whether 
              and the manner in which certificate pinning is supported or used by the 
              <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr>.
             <h:br />
              The evaluator shall verify that the AGD guidance includes instructions for setting the 
              reference identifier to be used for the purposes of certificate validation in 
              <abbr title="Transport Layer Security">TLS</abbr>.
             <h:br />
              The evaluator shall configure the reference identifier according to the AGD guidance 
              and perform the following tests during a 
              <abbr title="Transport Layer Security">TLS</abbr> connection:
              <testlist>
                <test>
                  The evaluator shall present a server certificate that does not contain an 
                  identifier in either the Subject Alternative Name (SAN) or Common Name (CN) that 
                  matches the reference identifier. The evaluator shall verify that the connection 
                  fails.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that matches 
                  the reference identifier, contains the SAN extension, but does not contain an 
                  identifier in the SAN that matches the reference identifier.  The evaluator shall 
                  verify that the connection fails. The evaluator shall repeat this test for each 
                  supported SAN type.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that matches 
                  the reference identifier and does not contain the SAN extension. The evaluator 
                  shall verify that the connection succeeds.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that does not 
                  match the reference identifier but does contain an identifier in the SAN that 
                  matches.  The evaluator shall verify that the connection succeeds.
                </test>
                <test>
                  The evaluator shall perform the following wildcard tests with each supported type 
                  of reference identifier: 
                  <testlist>
                    <test>The evaluator shall present a server certificate containing a wildcard 
                      that is not in the left-most label of the presented identifier 
                      (e.g. foo.*.example.com) and verify that the connection fails.
                    </test>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard in the 
                      left-most label but not preceding the public suffix (e.g. *.example.com). 
                      The evaluator shall configure the reference identifier with a single left-most 
                      label (e.g. foo.example.com) and verify that the connection succeeds. The 
                      evaluator shall configure the reference identifier without a left-most label 
                      as in the certificate (e.g. example.com) and verify that the connection fails. 
                      The evaluator shall configure the reference identifier with two left-most 
                      labels (e.g. bar.foo.example.com) and verify that the connection fails.
                    </test>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard in the 
                      left-most label immediately preceding the public suffix (e.g. *.com). The 
                      evaluator shall configure the reference identifier with a single left-most 
                      label (e.g. foo.com) and verify that the connection fails. The evaluator shall 
                      configure the reference identifier with two left-most labels 
                      (e.g. bar.foo.com) and verify that the connection fails.
                    </test>
                  </testlist></test>
                <test>
                  [conditional] If URI or Service name reference identifiers are supported, the 
                  evaluator shall configure the <abbr title="Domain Name System">DNS</abbr> name and 
                  the service identifier.  The evaluator shall present a server certificate 
                  containing the correct <abbr title="Domain Name System">DNS</abbr> name and 
                  service identifier in the URIName or SRVName fields of the SAN and verify that the 
                  connection succeeds.  The evaluator shall repeat this test with the wrong service 
                  identifier (but correct <abbr title="Domain Name System">DNS</abbr> name) and 
                  verify that the connection fails.
                </test>
                <test>
                  [conditional] If pinned certificates are supported the evaluator shall present a 
                  certificate that does not match the pinned certificate and verify that the 
                  connection fails.
                </test>
              </testlist></aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.3">
            <title>The application shall establish a trusted channel only if the peer certificate is 
              valid.
            </title>
            <note role="application">
              Validity is determined by the identifier verification, certificate path, the 
              expiration date, and the revocation status in accordance with RFC 5280. Certificate 
              validity shall be tested in accordance with testing performed for <linkref linkend="FIA_X509_EXT.1"/>.
             <h:br />
              For <abbr title="Transport Layer Security">TLS</abbr> connections, this channel shall 
              not be established if the peer certificate is invalid. The HTTPS protocol 
              (<linkref linkend="FCS_HTTPS_EXT.1"/>) requires different behavior, though HTTPS is implemented over 
              <abbr title="Transport Layer Security">TLS</abbr>. This element addresses non-HTTPS
              <abbr title="Transport Layer Security">TLS</abbr> connections.
            </note>
            <aactivity>
              The evaluator shall use <abbr title="Transport Layer Security">TLS</abbr> as a 
              function to verify that the validation rules in <linkref linkend="FIA_X509_EXT.1.1"/> are adhered to and 
              shall perform the following additional test:
              <testlist>
                <test>
                  The evaluator shall demonstrate that a peer using a certificate without a valid
                  certification path results in an authenticate failure. Using the administrative
                  guidance, the evaluator shall then load the trusted CA certificate(s) needed to
                  validate the peer's certificate, and demonstrate that the connection succeeds. The
                  evaluator then shall delete one of the CA certificates, and show that the
                  connection fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
	</f-component>
        <f-component id="fcs_tlsc_ext.2" name="TLS Client Protocol" status="optional">
            <f-element id="fcs_tlsc_ext.2.1">
            <title>
              The application shall support mutual authentication using X.509v3 certificates.
            </title>
            <note role="application">
              The use of X.509v3 certificates for <abbr title="Transport Layer Security">TLS</abbr> 
              is addressed in <linkref linkend="FIA_X509_EXT.2.1"/>. This requirement adds that a 
              client must be capable of presenting a certificate to a 
              <abbr title="Transport Layer Security">TLS</abbr> server for 
              <abbr title="Transport Layer Security">TLS</abbr> mutual authentication.
            </note>
            <aactivity>
              The evaluator shall ensure that the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> description required 
              per <linkref linkend="FIA_X509_EXT.2.1"/> includes the use of client-side certificates for TLS mutual 
              authentication.
             <h:br />
              The evaluator shall verify that the AGD guidance required per <linkref linkend="FIA_X509_EXT.2.1"/> 
              includes instructions for configuring the client-side certificates for 
              <abbr title="Transport Layer Security">TLS</abbr> mutual authentication.
             <h:br />
              The evaluator shall also perform the following test:
              <testlist>
                <test>
                  The evaluator shall perform the following modification to the traffic:
                  <h:ul>
                    <h:li>
                      Configure the server to require mutual authentication and then modify a byte 
                      in a CA field in the Server’s Certificate Request handshake message. The 
                      modified CA field must not be the CA used to sign the client’s certificate. 
                      The evaluator shall verify the connection is unsuccessful.
                    </h:li>
                  </h:ul>
                </test>
              </testlist>
            </aactivity>
          </f-element>
	</f-component>
       	<f-component id="fcs_tlsc_ext.3" name="TLS Client Protocol" status="objective">
	  <!-- 
	       This component is objective but also selection-based, which means...? Okay, it's
	       not a problem until we have a selection-based component that is also objective with a 
	       targetdate.
	  -->
          <!-- <selection-depends req="ftp_dit_ext.1.1"/> -->
          <f-element id="fcs_tlsc_ext.3.1">
            <title>
              The application shall present the signature_algorithms extension in the Client Hello 
              with the supported_signature_algorithms value containing the following hash 
              algorithms: 
              <selectables>
                <selectable>SHA256</selectable>
                <selectable>SHA384</selectable>
                <selectable>SHA512</selectable>
              </selectables> and no other hash algorithms.
            </title>
            <note role="application">
              This requirement limits the hashing algorithms supported for the purpose of digital 
              signature verification by the client and limits the server to the supported hashes for 
              the purpose of digital signature generation by the server. The signature_algorithm 
              extension is only supported by <abbr title="Transport Layer Security">TLS</abbr> 1.2.
            </note>
            <aactivity>
              The evaluator shall verify that 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes the 
              signature_algorithm extension and whether the required behavior is performed by 
              default or may be configured. If the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> indicates that the 
              signature_algorithm extension must be configured to meet the requirement, the 
              evaluator shall verify that AGD guidance includes configuration of the 
              signature_algorithm extension.
             <h:br /> 
              The evaluator shall also perform the following test:
              <testlist>
                <test>
                  The evaluator shall configure the server to send a certificate in the 
                  <abbr title="Transport Layer Security">TLS</abbr> connection that is not supported 
                  according to the Client’s HashAlgorithm enumeration within the 
                  signature_algorithms extension (for example, send a certificate with a SHA-1 
                  signature). The evaluator shall verify that the 
                  <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> disconnects after 
                  receiving the server’s Certificate handshake message.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
    
	<f-component id="fcs_tlsc_ext.4" name="TLS Client Protocol" status="sel-based">
          <selection-depends req="fcs_tlsc_ext.1.1"/>
          <selection-depends req="fcs_tlss_ext.1.1"/>
          <f-element id="fcs_tlsc_ext.4.1">
            <title>
              The application shall present the supported Elliptic Curves Extension in the Client 
              Hello with the following NIST curves: 
              <selectables>
                <selectable>secp256r1</selectable>
                <selectable>secp384r1</selectable>
                <selectable>secp521r1</selectable>
              </selectables> and no other curves.
            </title>
            <note role="application">
              This requirement limits the elliptic curves allowed for authentication and key 
              agreement to the NIST curves from <linkref linkend="FCS_COP.1(3)"/> and <linkref linkend="FCS_CKM.1(1)"/> and <linkref linkend="FCS_CKM.2"/>. This 
              extension is required for clients supporting Elliptic Curve cipher suites.
            </note>
            <aactivity>
              The evaluator shall verify that 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> describes the 
              supported Elliptic Curves Extension and whether the required behavior is performed by 
              default or may be configured. If the 
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> indicates that the 
              supported Elliptic Curves Extension must be configured to meet the requirement, the 
              evaluator shall verify that AGD guidance includes configuration of the supported 
              Elliptic Curves Extension.
             <h:br />
              The evaluator shall also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall configure the server to perform an ECDHE key exchange message 
                  in the <abbr title="Transport Layer Security">TLS</abbr> connection using a 
                  non-supported ECDHE curve (for example, P-192) and shall verify that the 
                  <abbr title="Target of Evaluation" linkend="TOE">TOE</abbr> disconnects after 
                  receiving the server's Key Exchange handshake message.
                </test>
              </testlist>
            </aactivity>
          </f-element>
	</f-component>

        <f-component id="fcs_tlss_ext.1" name="TLS Server Protocol" status="sel-based">
          <selection-depends req="ftp_dit_ext.1.1"/> 
          <f-element id="fcs_tlss_ext.1.1">
            <title> The application shall 
              <selectables>
                <selectable>invoke platform-provided <h:abbr title="Transport Layer Security">TLS</h:abbr> 1.2</selectable>
                <selectable>
		  <requires req="fcs_ckm.2.1"/>
		  implement <h:abbr title="Transport Layer Security">TLS</h:abbr> 1.2 (RFC 5246)
                </selectable>
              </selectables> supporting the following cipher suites: <h:p/>Mandatory Cipher Suites:
              TLS_RSA_WITH_AES_128_CBC_SHA as defined in RFC 5246 <h:p/>Optional Cipher Suites:
              <selectables linebreak="yes">
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>no other cipher suite</selectable>
              </selectables>
              .
            </title>
            <note role="application">The cipher suites to be tested in the evaluated configuration 
              are limited by this requirement. The <h:abbr title="Security Target" linkend="ST">ST
              </h:abbr> author should select the optional cipher suites that are supported; if there 
              are no cipher suites supported other than the mandatory suites, then “None” should be 
              selected. It is necessary to limit the cipher suites that can be used in an evaluated 
              configuration administratively on the server in the test environment. The Suite B 
              algorithms listed above (RFC 6460) are the preferred algorithms for implementation. 
              TLS_RSA_WITH_AES_128_CBC_SHA is required in order to ensure compliance with RFC 5246. 
              <h:br />
              These requirements will be revisited as new 
              <h:abbr title="Transport Layer Security">TLS</h:abbr> versions are standardized by the 
              IETF.
              <h:br />
              If any cipher suites are selected using ECDHE, then 
              <linkref linkend="FCS_TLSC_EXT.4"/> is required.
              <h:br />
              If <h:i>implement TLS 1.2 (RFC 5246)</h:i> is selected, then 
              <linkref linkend="FCS_CKM.2.1"/>, 
              <linkref linkend="FCS_COP.1.1(1)"/>, 
              <linkref linkend="FCS_COP.1.1(2)"/>, 
              <linkref linkend="FCS_COP.1.1(3)"/>, and
              <linkref linkend="FCS_COP.1.1(4)"/>
              are required.
            </note>
            <aactivity>
              The evaluator shall check the description of the implementation of this protocol in 
              the <h:abbr title="TOE Summary Specification" linkend="TSS">TSS</h:abbr> to ensure that 
              the cipher suites supported are specified. The evaluator shall check the 
              <h:abbr title="TOE Summary Specification" linkend="TSS">TSS</h:abbr> to ensure that the 
              cipher suites specified include those listed for this component. The evaluator shall 
              also check the operational guidance to ensure that it contains instructions on 
              configuring the <h:abbr title="Target of Evaluation" linkend="TOE">TOE</h:abbr> so that 
              TLS conforms to the description in the 
              <h:abbr title="TOE Summary Specification" linkend="TSS">TSS</h:abbr>. The evaluator shall 
              also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall establish a 
                  <h:abbr title="Transport Layer Security">TLS</h:abbr> connection using each of the 
                  cipher suites specified by the requirement. This connection may be established as 
                  part of the establishment of a higher-level protocol, e.g., as part of an EAP 
                  session. It is sufficient to observe the successful negotiation of a cipher suite 
                  to satisfy the intent of the test; it is not necessary to examine the 
                  characteristics of the encrypted traffic in an attempt to discern the cipher suite 
                  being used (for example, that the cryptographic algorithm is 128-bit AES and not 
                  256-bit AES).
                </test>
                <test>
                  The evaluator shall send a Client Hello to the server with a list of
                  ciphersuites that does not contain any of the ciphersuites in the server’s ST
                  and verify that the server denies the connection. Additionally, the evaluator
                  shall send a Client Hello to the server containing only the
                  TLS_NULL_WITH_NULL_NULL ciphersuite and verify that the server
                  denies the connection.
                </test>
                <test>
                  The evaluator shall use a client to send a key exchange message in
                  the TLS connection that does not match the server-selected ciphersuite
                  (for example, send an ECDHE key exchange while using the
                  TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite or send a RSA key
                  exchange while using one of the ECDSA ciphersuites.) The evaluator shall
                  verify that the application disconnects after receiving the key exchange
                  message.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic: 
                  <testlist>
                    <test>
                      Change the <h:abbr title="Transport Layer Security">TLS</h:abbr> version selected 
                      by the server in the Server Hello to a non-supported 
                      <h:abbr title="Transport Layer Security">TLS</h:abbr> version (for example 1.3 
                      represented by the two bytes 03 04) and verify that the client rejects the 
                      connection.
                    </test>
                    <test>
                      Modify at least one byte in the client’s nonce in the Client Hello handshake 
                      message, and verify that the server rejects the client's Certificate Verify handshake message
                      (if using mutual authentication) or that the server denies the client's 
                      Finished handshake message.
                    </test>
                    <test>
                      Modify the signature block in the Client’s Key Exchange handshake message, and 
                      verify that the server rejects the client's Certificate Verify handshake message
                      (if using mutual authentication) or that the server denies the client's 
                      Finished handshake message.
                    </test>
                    <test>
                      Modify a byte in the Clint Finished handshake message, and verify that the
                      server rejects the connection and does not send any application data. 
                    </test>
                    <test>
                      After generating a fatal alert by sending a Finished message from the client
                      before the client send a ChangeCipherSpec message, send a Client Hello with 
                      the session identifier from the previous test, and verify that the server 
                      denies the connection. 
                    </test>
                    <test>
                      Send an garbled message from the client after the client has issued the 
                      ChangeCipherSpec message and verify that the Server denies the connection.
                    </test>
                  </testlist>
                </test>
              </testlist>
            </aactivity>
          </f-element>   
          <f-element id="fcs_tlss_ext.1.2">
            <title>The application shall deny connections from clients requesting 
              SSL 2.0, SSL 3.0, TLS 1.0, TLS 1.1, and
              <selectables>
                <selectable>TLS 1.2</selectable>
                <selectable>none</selectable>
              </selectables>
              .
            </title>
            <note role="application">All SSL versions and TLS 1.0 and 1.1 are denied. Any TLS version 
              not selected in <linkref linkend="FCS_TLSS_EXT.1.1"/> should be selected here.
            </note>
            <aactivity>
              The evaluator shall verify that the TSS contains a description of the denial
              of old SSL and TLS versions, and any configuration necessary to meet the 
              requirement must be contained in the AGD guidance. 
              <testlist>
                <test>
                  The evaluator shall send a Client Hello requesting a connection with 
                  version SSL 2.0 and verify that the server denies the connection. The 
                  evaluator shall repeat this test with SSL 3.0, TLS 1.0, TLS 1.1, and
                  TLS 1.2 if it was selected. 
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlss_ext.1.3">
            <title>The application shall generate key establishment parameters using RSA
              with size 2048 bits and
              <selectables>
                <selectable>3072 bits</selectable>
                <selectable>4096 bits</selectable>
                <selectable>no other sizes</selectable>
              </selectables>
              and 
              <selectables>
                <selectable>over NIST curves 
                  <selectables>
                    <selectable>secp256r</selectable>
                    <selectable>secp384r</selectable>
                  </selectables> and no other curves</selectable>
                <selectable>Diffe-Hellman parameters of size 2048 and
                  <selectables>
                    <selectable>3072 bits</selectable>
                    <selectable>no other size</selectable>
                  </selectables>
                </selectable>
                <selectable>no other</selectable>
              </selectables>
            </title>
            <note role="application">
              If the ST lists a DHE ciphersuite in <linkref linkend="FCS_TLSS_EXT.1.1"/>,
              the ST must include the Diffie-Hellman selection in the requirement
            </note>
            <aactivity>
              The evaluator shall verify that the TSS describes the key agreement parameters
              of the server key exchange message. 
              <h:br /> 
              The evaluator shall verify that any configuration guidance necessary to meet 
              the requirement must be contained in the AGD guidance. 
              <testlist>
                <test>
                  The evaluator shall attempt a connection using an ECDHE ciphersuite and
                  a configured curve and, using a packet analyzer, verify that the key 
                  agreement parameters in the Key Exchange message are the ones configured. 
                  (Determining that the size matches the expected size for the configured curve 
                  is sufficient.) The evaluator shall repeat this test for each supported NIST 
                  Elliptic Curve and each supported Diffie-Hellman key size.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlss_ext.1.4">
            <title>The application shall support mutual authentication of 
              TLS clients using X.509v3 certificates.
            </title>
          </f-element>
          <f-element id="fcs_tlss_ext.1.5">
            <title>The application shall not establish a trusted channel 
              if the peer certificate is invalid. 
            </title>
            <note role="application">
              The use of X.509v3 certificates for TLS is addressed in 
	      <linkref linkend="FIA_X509_EXT.2.1"/>
              This requirement adds that this use must include support for client-side 
              certificates for TLS mutual authentication. Validity is determined by the 
              certificate path, the expiration date, and the revocation status in 
              accordance with RFC 5280. Certificate validity shall be tested in accordance 
              with testing performed for <linkref linkend="FIA_X509_EXT.1"/>.
            </note>
            <aactivity>
              The evaluator shall ensure that the TSS description required per FIA_X509_EXT.2.1 
              includes the use of client-side certificates for TLS mutual authentication. 
              <h:br /> 
              The evaluator shall verify that the AGD guidance required per FIA_X509_EXT.2.1
              includes instructions for configuring the client-side certificates for TLS mutual
              authentication. 
              <testlist>
                <test>
                  The evaluator shall configure the server to send a certificate request
                  to the client and shall attempt a connection without sending a certificate from
                  the client. The evaluator shall verify that the connection is denied.
                </test>
                <test>
                  The evaluator shall configure the server to send a certificate request
                  to the client without the supported_signature_algorithm used by the client’s
                  certificate. The evaluator shall attempt a connection using the client
                  certificate and verify that the connection is denied.
                </test>
                <test>
                  The evaluator shall demonstrate that using a certificate without a
                  valid certification path results in the function failing. Using the
                  administrative guidance, the evaluator shall then load a certificate or
                  certificates needed to validate the certificate to be used in the function, and
                  demonstrate that the function succeeds. The evaluator then shall delete one
                  of the certificates, and show that the function fails.
                </test>
                <test>
                  The evaluator shall configure the client to send a certificate that does
                  not chain to one of the Certificate Authorities (either a Root or Intermediate
                  CA) in the server’s Certificate Request message. The evaluator shall verify
                  that the attempted connection is denied.
                </test>
                <test>
                  The evaluator shall configure the client to send a certificate with the
                  Client Authentication purpose in the extendedKeyUsage field and verify that
                  the server accepts the attempted connection. The evaluator shall repeat this
                  test without the Client Authentication purpose and shall verify that the server
                  denies the connection. Ideally, the two certificates should be identical except
                  for the Client Authentication purpose.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic:
                  a) Configure the server to require mutual authentication and then
                  modify a byte in the client’s certificate. The evaluator shall verify
                  that the server rejects the connection.
                  b) Configure the server to require mutual authentication and then
                  modify a byte in the client’s Certificate Verify handshake message.
                  The evaluator shall verify that the server rejects the connection.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlss_ext.1.6">
            <title>The application shall not establish a trusted channel if 
              the distinguished name (DN) or Subject Alternative Name (SAN) 
              contained in a certificate does not match the expected identifier 
              for the peer.  
            </title>
            <note role="application">
              The peer identifier may be in the Subject field or the Subject 
              Alternative Name extension of the certificate. The expected 
              identifier may either be configured, may be compared to the 
              Domain Name, IP address, username, or email address used by 
              the peer, or may be passed to a directory server for comparison. 
              Matching should be performed by a bit-wise comparison. 
            </note>
            <aactivity>
              If the TOE implements mutual authentication, the evaluator shall 
              verify that the TSS describes how the DN and SAN in the certificate 
              is compared to the expected identifier. 
              <h:br />
              If the DN is not compared automatically to the Domain Name, 
              IP address, username, or email address, the evaluator shall 
              ensure that the AGD guidance includes configuration of the 
              expected identifier or the directory server for the connection. 
              <testlist>
                <test>
                  The evaluator shall send a client certificate with an 
                  identifier that does not match an expected identifier 
                  and verify that the server denies the connection. 
                </test>
              </testlist>
             
            </aactivity>
          </f-element>
          
        </f-component>

        
        <f-component id="fcs_dtls_ext.1" name="DTLS Implementation" status="sel-based">
          <selection-depends req="ftp_dit_ext.1.1"/>
          <f-element id="fcs_dtls_ext.1.1">
            <title>The application shall implement the DTLS protocol in accordance with
              DTLS 1.2 (RFC 6347).
            </title>
            <aactivity>
              <testlist>
                <test>
                  The evaluator shall attempt to establish a connection with a DTLS server, observe 
                  the traffic with a packet analyzer, and verify that the connection succeeds and 
                  that the traffic is identified as DTLS.
                </test>
                <h:br />
                Other tests are performed in conjunction with the Assurance Activity listed for 
                <linkref linkend="FCS_TLSC_EXT.1"/>.
                </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_dtls_ext.1.2">
            <title>The application shall implement the requirements in TLS (<linkref linkend="FCS_TLSC_EXT.1"/>) for the
              DTLS implementation, except where variations are allowed according to DTLS 1.2 
              (RFC 6347).
            </title>
            <note role="application">
              Differences between DTLS 1.2 and TLS 1.2 are outlined in RFC 6347; otherwise the 
              protocols are the same. In particular, for the applicable security characteristics 
              defined for the <abbr linkend="TSF"/>, the two protocols do not differ. Therefore, all 
              application notes and assurance activities that are listed for 
              <abbr title="Transport Layer Security">TLS</abbr> apply to the DTLS implementation.
            </note>
            <aactivity>
	      The evaluator shall perform the assurance activities listed for <linkref linkend="FCS_TLSC_EXT.1"/>.
	    </aactivity>
          </f-element>
          <f-element id="fcs_dtls_ext.1.3">
            <title>The application shall not establish a trusted communication channel if the peer 
              certificate is deemed invalid. 
            </title>
            <note role="application">
              Validity is determined by the certificate path, the expiration date, and the 
              revocation status in accordance with RFC 5280.
            </note>
            <aactivity>
                Certificate validity shall be tested in accordance with testing performed for 
                <linkref linkend="FIA_X509_EXT.1"/>, and the evaluator shall perform the following test.
                <testlist>
                <test>
                  The evaluator shall demonstrate that using a certificate without a valid 
                  certification path results in the function failing. Using the administrative 
                  guidance, the evaluator shall then load a certificate or certificates to the 
                  Trust Anchor Database needed to validate the certificate to be used in the 
                  function, and demonstrate that the function succeeds. The evaluator then shall 
                  delete one of the certificates, and show that the function fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_https_ext.1" name="HTTPS Protocol" status="sel-based">
          <selection-depends req="ftp_dit_ext.1.1"/>
          <f-element id="fcs_https_ext.1.1">
            <title>
              The application shall implement the HTTPS protocol that complies with RFC 2818.
            </title>
            <aactivity>
              The evaluator shall attempt to establish an HTTPS connection with a webserver, 
              observe the traffic with a packet analyzer, and verify that the connection succeeds 
              and that the traffic is identified as 
              <abbr title="Transport Layer Security">TLS</abbr> or HTTPS.
            </aactivity>
          </f-element>
          <f-element id="fcs_https_ext.1.2">
            <title>The application shall implement HTTPS using 
              <abbr title="Transport Layer Security">TLS</abbr> (<linkref linkend="FCS_TLSC_EXT.1"/>).
            </title>
            <aactivity>
              Other tests are performed in conjunction with <linkref linkend="FCS_TLSC_EXT.1"/>.
            </aactivity>
          </f-element>
          <f-element id="fcs_https_ext.1.3">
            <title> The application shall notify the user and 
              <selectables>
                <selectable>
                  not establish the connection
                </selectable>
                <selectable>
                  request application authorization to establish the connection
                </selectable>
                <selectable>
                  no other action
                </selectable>
              </selectables>
                if the peer certificate is deemed invalid. 
            </title>
            <note role="application">
              Validity is determined by the certificate path, the expiration date, and the 
              revocation status in accordance with RFC 5280.
            </note>
            <aactivity>
              Certificate validity shall be tested in accordance with testing performed for 
              <linkref linkend="FIA_X509_EXT.1"/>, and the evaluator shall perform the following test:
              <testlist>
                <test>
                  The evaluator shall demonstrate that using a certificate without a valid 
                  certification path results in an application notification. Using the 
                  administrative guidance, the evaluator shall then load a certificate or 
                  certificates to the Trust Anchor Database needed to validate the certificate to be 
                  used in the function, and demonstrate that the function succeeds. The evaluator 
                  then shall delete one of the certificates, and show that the application is 
                  notified of the validation failure.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>

      <subsection title="User Data Protection (FDP)" id="fdp">
        <f-component id="fdp_dec_ext.1" name="Access to Platform Resources" status="threshold">
          <f-element id="fdp_dec_ext.1.1">
            <title> The application shall restrict its access to
              <selectables linebreak="yes">
                <selectable>no hardware resources</selectable>
                <selectable>network connectivity</selectable>
                <selectable>camera</selectable>
                <selectable>microphone</selectable>
                <selectable>location services</selectable>
                <selectable><abbr title="Near-Field Communication">NFC</abbr></selectable>
                <selectable><abbr title="Universal Serial Bus">USB</abbr></selectable>
                <selectable>Bluetooth</selectable>
                <selectable><assignable>list of additional hardware resources</assignable></selectable>
              </selectables>.
            </title>
            <note role="application">
              The intent is for the evaluator to ensure that the selection captures all
              hardware resources which the application accesses, and that these are 
			  restricted to those which are justified.
			  On some platforms, the application must explicitly solicit permission 
			  in order to access hardware resources.
			  Seeking such permissions, even if the application does not later make use of the
			  hardware resource, should still be considered access.
			  Selections should be expressed in a manner consistent with how the application expresses
			  its access needs to the underlying platform.  For example,
			  the platform may provide <h:i>location services</h:i> which implies the potential use of a variety
			  of hardware resources (e.g. satellite receivers, WiFi, cellular radio)
			  yet <h:i>location services</h:i> is the proper selection.  This is because use of these resources
			  can be inferred, but also because the actual usage may vary based on the particular platform.
              Resources that do not need to be explicitly identified are
              those which are ordinarily used by any application such as central processing units,
			  main memory, displays, input devices (e.g. keyboards, mice), and
			  persistent storage devices provided by the platform.
            </note>
            <aactivity>
                The evaluator shall perform the platform-specific actions below and inspect user
                documentation to determine the application's access to hardware
                resources.  The evaluator shall ensure that this is consistent with the selections
				indicated.  The evaluator shall review documentation provided by the application
	            developer and for each resource which it accesses, identify the
	            justification as to why access is required.  
              <subaactivity platform="blackberry">
                The evaluator shall install the
                application and run it for the first time. The evaluator shall verify that the
                selection captures all hardware resources it would like to access. Note: If the
                user goes to: <h:code>App permissions > Settings > Security and Privacy > Application
                Permissions > Select application in question</h:code>, it will list which platform resource
                are approved/denied and can be changed.
              </subaactivity>
              <subaactivity platform="android">
                The evaluator shall inspect permissions presented at 
                installation time (Android 5.1 and below) or on-access 
                (Android 6.0 and above) for each hardware resource an app intends 
                to access.  
              </subaactivity>
              <subaactivity platform="windows">For Windows Universal Applications the evaluator shall check the
                WMAppManifest.xml file for a list of required hardware capabilities. The evaluator
                shall verify that the user is made aware of the required hardware capabilities when
                the application is first installed. This includes permissions such as
                ID_CAP_ISV_CAMERA, ID_CAP_LOCATION, ID_CAP_NETWORKING, ID_CAP_MICROPHONE,
                ID_CAP_PROXIMITY and so on.
		A complete list of Windows App permissions can be found
                at: 
		<h:ul><h:li>
		  <h:a href="http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx">
                    http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx
		  </h:a>
		</h:li></h:ul>
		        For Windows Desktop Applications the evaluator shall identify in either the
                application software or its documentation the list of the required
                sensitive information repositories. 
                </subaactivity>
                <subaactivity platform="ios">The evaluator shall verify that either the
                  application or the documentation provides a list of the
                  hardware resources it accesses. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall verify that either the
                application software or its documentation provides a list of the
                hardware resources it accesses. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall verify that either the
                application software or its documentation provides a list of the
                hardware resources it accesses. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall verify that either the application
                software or its documentation provides a list of the hardware
                resources it accesses.</subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fdp_dec_ext.1.2">
            <title>The application shall restrict its access to
                <selectables linebreak="yes">
                <selectable>no sensitive information repositories</selectable>
                <selectable>address book</selectable>
                <selectable>calendar</selectable>
                <selectable>call lists</selectable>
                <selectable>system logs</selectable>
                <selectable><assignable>list of additional sensitive information 
                  repositories</assignable>
                </selectable>
              </selectables>
	      .
            </title>
            <note role="application"> 
              <h:i>Sensitive information repositories</h:i> are defined as those collections of sensitive data that 
              could be expected to be shared among some applications, users, or user roles, but to which not all
              of these would ordinarily require access.
	    </note>
            <aactivity>
                The evaluator shall perform the platform-specific actions below and inspect user
                documentation to determine the application's access to sensitive information
				repositories.  The evaluator shall ensure that this is consistent with the selections
				indicated.  The evaluator shall review documentation provided by the application
	            developer and for each sensitive information respository which it accesses, identify the
	            justification as to why access is required.  
	      <subaactivity platform="blackberry">The evaluator shall
                install the application and run it for the first time. The evaluator shall identify
                the sensitive information repositories to which it solicits access.
	      </subaactivity>
              <subaactivity platform="android">
                The evaluator shall inspect permissions presented at 
                installation time (Android 5.1 and below) or on-access 
                (Android 6.0 and above) for each sensitive information repository an app intends 
                to access.  
              </subaactivity>
              <subaactivity platform="windows">For Windows Universal Applications the evaluator shall check the
                WMAppManifest.xml file for a list of required capabilities. The evaluator shall
                identify the required information repositories when the
                application is first installed. This includes permissions such as
                ID_CAP_CONTACTS,ID_CAP_APPOINTMENTS,ID_CAP_MEDIALIB and so on. A complete list of
                Windows App permissions can be found at: 
		<h:ul><h:li>
		  <h:a href="http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx">
                    http://msdn.microsoft.com/en-US/library/windows/apps/jj206936.aspx
		  </h:a>
		</h:li></h:ul>
		        For Windows Desktop Applications the evaluator shall identify in either the
                application software or its documentation the list of 
                sensitive information repositories it accesses. 
			  </subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that either the application
                software or its documentation provides a list of
                the sensitive information repositories it accesses.</subaactivity>
              <subaactivity platform="linux"> The evaluator shall verify that either the 
                application software or its documentation provides a list of 
                sensitive information repositories it accesses.
              </subaactivity>
              <subaactivity platform="Solaris">The evaluator shall verify that either the
                application software or its documentation provides a list of
                sensitive information repositories it accesses. </subaactivity>
              <subaactivity platform="OS X">The evaluator shall verify that either the application
                software or its documentation provides a list of
                sensitive information repositories it accesses.</subaactivity>
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="fdp_net_ext.1" name="Network Communications" status="threshold">
          <f-element id="fdp_net_ext.1.1">
            <title>The application shall restrict network communication to 
              <selectables linebreak="yes">
                <selectable>no network communication</selectable>
                <selectable>user-initiated communication for 
				  <assignable>list of functions 
                  for which the user can initiate network communication</assignable></selectable>
                <selectable>respond to <assignable>list of remotely initiated communication </assignable></selectable>
                <selectable><assignable>list of application-initiated network communication</assignable></selectable>
              </selectables>
              . 
            </title>
            <note role="application">
              This requirement is intended to restrict both inbound and
              outbound network communications to only those required, or to network
              communications that are user initiated.
              It does not apply to network communications in which the application may generically 
			  access the filesystem which may result in the platform accessing remotely mounted
			  drives/shares.
            </note>
            <aactivity>The evaluator shall perform the following tests:
	    <testlist>
	      <test>
		The evaluator shall run the application.  While the application is running,
		the evaluator shall sniff network traffic ignoring all non-application 
		associated traffic
		and verify that any network communications witnessed are documented in the TSS or are user-initiated. 
	      </test>
	      <test>
		The evaluator shall run the application.  After the application initializes, the
		evaluator shall run network port scans to verify that any ports
		opened by the application have been captured in the <abbr linkend="ST"/> for the third
		selection and its assignment.  This includes
		connection-based protocols (e.g. TCP, DCCP) as well as connectionless protocols
		(e.g. UDP).
	      </test>
	    </testlist>
            <subaactivity platform="android">
              If "no network communication" is selected, the evaluator shall ensure that the application's
              AndroidManifest.xml file does not contain a &lt;uses-permission&gt; or &lt;uses-permission-sdk-23&gt; tag
              containing android:name="android.permission.INTERNET".
              In this case,
              it is not necessary to perform the above Tests 1 and 2, as the platform will not allow the
              application to perform any network communication.
            </subaactivity>
	    </aactivity>
	  </f-element>
      </f-component>



        <f-component id="fdp_dar_ext.1" name="Encryption Of Sensitive Application Data" status="threshold">
          <f-element id="fdp_dar_ext.1.1">
            <title>The application shall 
	      <selectables linebreak="yes">
                <selectable>leverage platform-provided functionality to encrypt sensitive data</selectable>
                <selectable>implement functionality to encrypt sensitive data</selectable>
                <selectable>not store any sensitive data</selectable>
              </selectables>
              in non-volatile memory.
            </title>
            <note role="application">
			  If <h:i>implement functionality to encrypt sensitive data</h:i> is selected, then
              evaluation is required against the 
              <h:a href="https://www.niap-ccevs.org/pp/"><h:i>Application Software Protection Profile Extended Package: File Encryption</h:i></h:a>.
			  <h:br/>
              Any file that may potentially contain sensitive data (to include temporary files)
              shall be protected.  The only exception is if the user intentionally exports the sensitive data
              to non-protected files. 
	    </note>
            <!-- this language is intentionally different from the MDPP's FDP_DAR -->
            <aactivity>The evaluator shall inventory the filesystem locations where the application
			  may write data.  The evaluator shall run the application and attempt to store sensitive data.
              The evaluator shall then inspect those areas of the filesystem to note where
			  data was stored (if any), and determine whether it has been encrypted. 
              <h:br/>
              If <h:b>not store any sensitive data</h:b> is selected, the evaluator shall inspect the TSS and
              ensure that it describes how sensitive data cannot be written to non-volatile memory.  The evaluator
              shall also ensure that this is consistent with the filesystem test above.
			  <h:br/>
			  If <h:b>implement functionality to encrypt sensitive data</h:b> is selected, then
              evaluation is required against the 
              <h:b><h:i>Application Software Protection Profile Extended Package: File Encryption</h:i></h:b>. The evaluator
              shall ensure that such evaluation is underway.
              <h:br/>
              If <h:b>leverage platform-provided functionality</h:b> is selected, the
              evaluation activities will be performed as stated in the following
              requirements, which vary on a per-platform basis:
			  <subaactivity platform="blackberry">The evaluator shall inspect the TSS and ensure that it describes how
                the application 
                uses the Advanced Data at Rest Protection <abbr linkend="API"/> and how the application
                uses the appropriate domain to store and protect each data file.</subaactivity>
              <subaactivity platform="android">
		        The evaluator shall inspect the TSS and verify that it describes how files containing sensitive data are 
                stored with the <h:code>MODE_PRIVATE</h:code> flag set.
	          </subaactivity>
              <subaactivity platform="windows">The Windows platform currently does not provide data-at-rest
                encryption services which depend upon invocation by application developers. The evaluator shall
                verify that the Operational User Guidance makes the need to activate platform encryption, 
                such as BitLocker or Encrypting File System (EFS), clear to the end user.
              </subaactivity>
              <subaactivity platform="ios">The evaluator shall inspect the TSS and ensure that it describes how the 
                application uses the Complete Protection, Protected Unless Open, or Protected Until 
                First User Authentication Data Protection Class for each data file stored locally. 
              </subaactivity>
              <subaactivity platform="linux">
               The Linux platform currently does not provide data-at-rest encryption services which depend
               upon invocation by application developers.  The evaluator shall verify that
               the Operational User Guidance makes the need to activate platform encryption clear 
               to the end user.
	      </subaactivity>
              <subaactivity platform="Solaris">
               The Solaris platform currently does not provide data-at-rest encryption services which depend
               upon invocation by application developers.  The evaluator shall verify that
               the Operational User Guidance makes the need to activate platform encryption clear 
               to the end user.
	      </subaactivity>
              <subaactivity platform="OS X">
               The Mac OS X platform currently does not provide data-at-rest encryption services which depend
               upon invocation by application developers.  The evaluator shall verify that
               the Operational User Guidance makes the need to activate platform encryption clear
               to the end user.
	      </subaactivity>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Identification and Authentication (FIA)" id="fia">
        <f-component id="fia_x509_ext.1" name="X.509 Certificate Validation" status="sel-based">
          <selection-depends req="ftp_dit_ext.1.1"/>
          <f-element id="fia_x509_ext.1.1">
            <title>
              The application shall 
              <selectables>
                <selectable>
                  invoked platform-provided functionality
                </selectable>
                <selectable>
                  implement functionality
                </selectable>
              </selectables>
              to validate certificates in accordance with the following rules:
              <ul>
                <li>
                  RFC 5280 certificate validation and certificate path validation.
                </li>
                <li>
                  The certificate path must terminate with a trusted CA certificate.
                </li>
                <li>
                  The application shall validate a certificate path by ensuring the presence of the 
                  basicConstraints extension and that the CA flag is set to TRUE for all CA 
                  certificates.
                </li>
                <li>
                  The application shall validate the revocation status of the certificate using 
                  <selectables>
                    <selectable>
                      the Online Certificate Status Protocol (OCSP) as specified in RFC 2560
                    </selectable>
                    <selectable>
                      a Certificate Revocation List (CRL) as specified in RFC 5759
                    </selectable>
                    <selectable>
                     an OCSP TLS Status Request Extension (i.e., OCSP stapling) as specified in RFC 6066
                    </selectable>
                  </selectables>
                  .
                </li>
                <li>
                  The application shall validate the extendedKeyUsage field according to the 
                  following rules:
                  <ul>
                    <li>
                      Certificates used for trusted updates and executable code integrity 
                      verification shall have the Code Signing purpose 
                      (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.
                    </li>
                    <li>
                      Server certificates presented for 
                      <abbr title="Transport Layer Security">TLS</abbr> shall have the Server 
                      Authentication purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the 
                      extendedKeyUsage field.
                    </li>
                    <li>
                      Client certificates presented for 
                      <abbr title="Transport Layer Security">TLS</abbr> shall have the Client 
                      Authentication purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the 
                      extendedKeyUsage field.
                    </li>
                    <li>
                      S/MIME certificates presented for email encryption and signature shall have 
                      the Email Protection purpose (id-kp 4 with OID 1.3.6.1.5.5.7.3.4) in the 
                      extendedKeyUsage field.
                    </li>
                    <li>
                      OCSP certificates presented for OCSP responses shall have the OCSP Signing 
                      purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the extendedKeyUsage field.
                    </li>
                    <li>
                      Server certificates presented for EST shall have the CMC Registration 
                      Authority (RA) purpose (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28) in the 
                      extendedKeyUsage field.
                    </li>
                  </ul>
                </li>
              </ul>
            </title>
            <note role="application">
	      <linkref linkend="FIA_X509_EXT.1.1"/> 
	      lists the rules for validating certificates.
	      The <abbr linkend="ST"/> author shall select whether revocation status is verified using OCSP or CRLs. 
	      <linkref linkend="FIA_X509_EXT.2"/> 
              requires that certificates are used for HTTPS, TLS and DTLS; this use requires that the 
              extendedKeyUsage rules are verified.
              <h:br />
              Regardless of the selection of <h:i>implement functionality</h:i> or <h:i>invoke platform-provided functionality</h:i>,
              the validation is expected to end in a trusted root CA certificate in a root 
              store managed by the platform.
            </note>
            <aactivity>
              The evaluator shall ensure the <abbr linkend="TSS"/> describes where the check of 
              validity of the certificates takes place. The evaluator ensures the 
              <abbr linkend="TSS"/> also provides a description of the certificate path validation 
              algorithm.
              <h:br /> 
              The tests described must be performed in conjunction with the other certificate 
              services assurance activities, including the functions in <linkref linkend="FIA_X509_EXT.2.1"/>. The tests 
              for the extendedKeyUsage rules are performed in conjunction with the uses that require 
              those rules. If the application supports chains of length four or greater, 
	      the evaluator shall create a chain of at least four certificates: the 
              node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.
	      If the application supports a maximum trust depth of two, then a chain with
	      no Intermediate CA should instead be created.
              <testlist>
                <test>
                  The evaluator shall demonstrate that validating a certificate without a valid 
                  certification path results in the function failing. The evaluator shall then load 
                  a certificate or certificates as trusted CAs needed to validate the certificate to 
                  be used in the function, and demonstrate that the function succeeds. The evaluator 
                  shall then delete one of the certificates, and show that the function fails.
                </test>
                <test>
                  The evaluator shall demonstrate that validating an expired certificate results in 
                  the function failing.
                </test>
                <test>
                  The evaluator shall test that the <abbr linkend="TOE"/> can properly handle 
                  revoked certificates-–conditional on whether CRL, OCSP, or OCSP Stapling is selected;
                  if multiple methods are selected, then the following tests shall be performed 
		  for each method:
		  <h:ul>
		    <h:li>
		      The evaluator shall test revocation of the node certificate. 
		    </h:li>
		    <h:li>
		      The evaluator shall also test revocation of an intermediate CA certificate 
		      (i.e. the intermediate CA certificate should be revoked by the root CA), 
		      if intermediate CA certificates are supported. 
		    </h:li>
		  </h:ul>
		  The evaluator shall ensure that a valid certificate is used, and that the 
                  validation function succeeds. The evaluator then attempts the test with a 
                  certificate that has been revoked (for each method chosen in the selection) to 
                  ensure when the certificate is no longer valid that the validation function fails.
                </test>
                <test>
                  If OCSP is selected, the evaluator shall configure the OCSP server or use a 
                  man-in-the-middle tool to present a certificate that does not have the OCSP 
                  signing purpose and verify that validation of the OCSP response fails. If CRL is 
                  selected, the evaluator shall configure the CA to sign a CRL with a certificate 
                  that does not have the cRLsign key usage bit set, and verify that validation of 
                  the CRL fails.
                </test>
                <test>
                  The evaluator shall modify any byte in the first eight bytes of the certificate 
                  and demonstrate that the certificate fails to validate. (The certificate will fail 
                  to parse correctly.)
                </test>
                <test>
                  The evaluator shall modify any byte in the last byte of the certificate and 
                  demonstrate that the certificate fails to validate. (The signature on the 
                  certificate will not validate.)
                </test>
                <test>
                  The evaluator shall modify any byte in the public key of the certificate and 
                  demonstrate that the certificate fails to validate. (The signature on the 
                  certificate will not validate.)
                </test>
              </testlist> 
            </aactivity>
          </f-element>
          <f-element id="fia_x509_ext.1.2">
            <title>
              The application shall treat a certificate as a CA certificate only if the 
              basicConstraints extension is present and the CA flag is set to TRUE.
            </title>
            <note role="application">
              This requirement applies to certificates that are used and processed by the 
              <abbr linkend="TSF"/> and restricts the certificates that may be added as trusted CA 
              certificates.
            </note>
            <aactivity>
              The tests described must be performed in conjunction with the other certificate 
              services assurance activities, including the functions in <linkref linkend="FIA_X509_EXT.2.1"/>. 
	      If the application supports chains of length four or greater, 
	      the evaluator shall create a chain of at least four certificates: the 
              node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.
	      If the application supports a maximum trust depth of two, then a chain with
	      no Intermediate CA should instead be created.
              <testlist>
                <test>
                  The evaluator shall construct a certificate path, such that the certificate of the 
                  CA issuing the <abbr linkend="TOE"/>'s certificate does not contain the 
                  basicConstraints extension. The validation of the certificate path fails.
                </test>
                <test>
                  The evaluator shall construct a certificate path, such that the certificate of the 
                  CA issuing the <abbr linkend="TOE"/>'s certificate has the CA flag in the 
                  basicConstraints extension not set. The validation of the certificate path fails.
                </test>
                <test>
                  The evaluator shall construct a certificate path, such that the certificate of the 
                  CA issuing the <abbr linkend="TOE"/>'s certificate has the CA flag in the 
                  basicConstraints extension set to TRUE. The validation of the certificate path 
                  succeeds.
                </test>
              </testlist> 
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fia_x509_ext.2" name="X.509 Certificate Authentication" status="sel-based">
          <selection-depends req="ftp_dit_ext.1.1"/>
          <f-element id="fia_x509_ext.2.1">
            <title>
              The application shall use X.509v3 certificates as defined by RFC 5280 to support 
              authentication for 
              <selectables>
                 <selectable>
                  HTTPS
                </selectable>
                <selectable>
                  TLS
                </selectable>
                <selectable>
                  DTLS
                </selectable>
              </selectables>. 
            </title>
            <note role="application">
              The <abbr linkend="ST"/> author's selection shall match the selection in 
              <linkref linkend="FTP_DIT_EXT.1.1"/>.
            </note>
            <!-- 
            <aactivity>
              Currently no AAs available.
            </aactivity>
            -->
          </f-element>
          <f-element id="fia_x509_ext.2.2">
            <title>
              When the application cannot establish a connection to determine the validity of a 
              certificate, the application shall  
              <selectables>
                <selectable>
                  allow the administrator to choose whether to accept the certificate in these cases
                </selectable>
                <selectable>
                  accept the certificate
                </selectable>
                <selectable>
                  not accept the certificate
                </selectable>
              </selectables>. 
            </title>
            <note role="application">
              Often a connection must be established to perform a verification of the revocation 
              status of a certificate - either to download a CRL or to perform OCSP. The selection 
              is used to describe the behavior in the event that such a connection cannot be 
              established (for example, due to a network error). If the <abbr linkend="TOE"/> has 
              determined the certificate valid according to all other rules in <linkref linkend="FIA_X509_EXT.1"/>, 
              the behavior indicated in the selection shall determine the validity. The 
              <abbr linkend="TOE"/> must not accept the certificate if it fails any of the other 
              validation rules in <linkref linkend="FIA_X509_EXT.1"/>.
            </note>
            <aactivity>
              The evaluator shall check the <abbr linkend="TSS"/> to ensure that it describes how 
              the <abbr linkend="TOE"/> chooses which certificates to use, and any necessary 
              instructions in the administrative guidance for configuring the operating environment 
              so that the <abbr linkend="TOE"/> can use the certificates.
              <h:br />
              The evaluator shall examine the <abbr linkend="TSS"/> to confirm that it describes the 
              behavior of the <abbr linkend="TOE"/> when a connection cannot be established during 
              the validity check of a certificate used in establishing a trusted channel. The 
              evaluator shall verify that any distinctions between trusted channels are described. 
              If the requirement that the administrator is able to specify the default action, then 
              the evaluator shall ensure that the operational guidance contains instructions on how 
              this configuration action is performed.
              <h:br />
              The evaluator shall perform the following test for each trusted channel:
              <testlist>
                <test>
                  The evaluator shall demonstrate that using a valid certificate that requires 
                  certificate validation checking to be performed in at least some part by 
                  communicating with a non-<abbr linkend="TOE"/> IT entity. The evaluator shall then 
                  manipulate the environment so that the <abbr linkend="TOE"/> is unable to verify 
                  the validity of the certificate, and observe that the action selected in 
                  <linkref linkend="FIA_X509_EXT.2.2"/> is performed. If the selected action is 
                  administrator-configurable, then the evaluator shall follow the operational 
                  guidance to determine that all supported administrator-configurable options behave 
                  in their documented manner.
                </test>
                <test>
                  The evaluator shall demonstrate that an invalid certificate that requires 
                  certificate validation checking to be performed in at least some part by 
                  communicating with a non-<abbr linkend="TOE"/> IT entity cannot be accepted. 
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Security Management (FMT)" id="fmt">
        <f-component id="fmt_mec_ext.1" name="Supported Configuration Mechanism" status="threshold">
          <f-element id="fmt_mec_ext.1.1">
            <title> 
	      The application shall invoke the mechanisms recommended by the platform
              vendor for storing and setting configuration options.
	    </title>
            <note role="application"> Configuration options that are stored remotely are not subject
              to this requirement. </note>
            <aactivity>
              The evaluator shall review the TSS to identify the application's configuration options
              (e.g. settings) and determine whether these are stored and set using the mechanisms
              supported by the platform. At a minimum the TSS shall list settings related to any SFRs
              and any settings that are mandated in the operational guidance in response to an SFR.
              The method of doing so varies per platform. 
	      <subaactivity platform="blackberry">
		The evaluator shall run the application and make security-related changes to its configuration.
		The evaluator shall check that at least one file in the app folder of the application 
		working directory was modified to reflect the change made.
              </subaactivity>
              <subaactivity platform="android">
		The evaluator shall run the application and make security-related changes to its configuration.
		The evaluator shall check that at least one XML file at location
		<path>/data/data/<i>package</i>/shared_prefs/</path>
		reflects the changes made to the configuration to verify that the application used
		<h:code>SharedPreferences</h:code> and/or <h:code>PreferenceActivity</h:code> classes
                for storing configuration data, where <h:i>package</h:i> is the Java package
		of the application.
	      </subaactivity>
              <subaactivity platform="windows">The evaluator shall determine and verify that Windows
                Universal Applications use either the Windows.UI.ApplicationSettings namespace or
                the IsolatedStorageSettings namespace for storing application specific settings.
                For Classic Desktop applications, the evaluator shall run the application while 
		monitoring it with the SysInternal tool <util>ProcMon</util> and 
		make changes to its configuration. 
		The evaluator shall verify that <util>ProcMon</util> logs show corresponding changes to the
		the Windows Registry.
	      </subaactivity>
              <subaactivity platform="ios">The evaluator shall verify that the app uses the
                  <h:code>user defaults system</h:code> or <h:code>key-value store</h:code> for storing all
                settings.</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the application while monitoring it with the utility <util>strace</util>.
		The evaluator shall make security-related changes to its configuration.
		The evaluator shall verify that <util>strace</util> logs corresponding changes to configuration 
		files that reside in /etc (for system-specific configuration) or 
		in the user's home directory (for user-specific configuration).
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the application while monitoring it with the utility 
		<util>dtrace</util>.
		The evaluator shall make security-related changes to its configuration.
		The evaluator shall verify that <util>dtrace</util> logs corresponding changes to 
		configuration 
		files that reside in /etc (for system-specific configuration) or 
		in the user's home directory(for user-specific configuration).
	      </subaactivity>
              <subaactivity platform="OS X">
               The evaluator shall verify that the application stores and retrieves settings
               using the <h:code>NSUserDefaults</h:code> class.
	      </subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fmt_cfg_ext.1" name="Secure by Default Configuration" status="threshold">
          <f-element id="fmt_cfg_ext.1.1">
            <title>
	      The application shall provide only enough functionality to set new credentials when 
              configured with default credentials or no credentials.
	    </title>
            <note role="application">
	      Default credentials are credentials (e.g., passwords, keys) that are automatically 
	      (without user interaction) loaded onto the platform during application installation.
	      Credentials that are generated during installation using requirements laid out in 
	      <linkref linkend="FCS_RBG_EXT.1"/> are not by definition default credentials.
	    </note>
            <aactivity>
             The evaluator shall check the TSS to determine if the application requires any type
             of credentials and if the application installs with default credentials. If the
             application uses any default credentials the evaluator shall run the following tests.
             <testlist>
                <test>
                  The evaluator shall install and run the application without generating or loading 
		  new credentials and verify that only the minimal
                  application functionality required to set new credentials is available.
                </test>
                <test>
                  The evaluator shall attempt to clear all credentials and verify that only
		  the minimal application functionality required to set new credentials is available.
                </test>
                <test>
                  The evaluator shall run the application, establish new credentials and
                  verify that the original default credentials no longer provide access to
                  the application.
                </test>
             </testlist>
	    </aactivity>
          </f-element>
          <f-element id="fmt_cfg_ext.1.2">
            <title>The application shall be configured by default with file permissions which protect
              it and its data from unauthorized access.</title>
            <note role="application">
	      The precise expectations for file permissions vary per platform
              but the general intention is that a trust boundary protects the application and its
              data.
	    </note>
            <aactivity>The evaluator shall install and run the application. The evaluator shall
              inspect the filesystem of the platform (to the extent possible) for any files created
              by the application and ensure that their permissions are adequate to protect them.
              The method of doing so varies per platform.
              <subaactivity platform="blackberry">
		The evaluator shall run 
        	<h:code>ls -alR|grep -E '^.......(r|-w|--x)'</h:code> inside the application's 
		data directories to ensure that all files are not world-accessible 
		(either read, write, or execute).
		The command should not print any files.
		The evaluator shall also verify that no sensitive data is written to
                external storage which could be read/modified by any other application.
                </subaactivity>
              <subaactivity platform="android">
		The evaluator shall run 
        	<h:code>ls -alR|grep -E '^.......(r|-w|--x)'</h:code> inside the application's 
		data directories to ensure that all files are not world-accessible 
		(either read, write, or execute).
		The command should not print any files.
		The evaluator shall also verify that no sensitive data is written to
                external storage as this data can be read/modified by any application containing the
                READ_EXTERNAL_STORAGE and/or WRITE_EXTERNAL_STORAGE permissions.</subaactivity>
              <subaactivity platform="windows">The evaluator shall run the SysInternals tools,
                Process Monitor and Access Check (or tools of equivalent capability, like 
                icacls.exe) for Classic Desktop applications to verify that files written to disk 
                during an applications installation have the correct file permissions, such that a 
                standard user cannot modify the application or its data files. For Windows Universal 
                Applications the evaluator shall consider the requirement met because of the AppContainer 
                sandbox.
              </subaactivity>
              <subaactivity platform="ios">The evaluator shall determine whether the application
                leverages the appropriate Data Protection Class for each data file stored
                locally.</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the command 
		<h:code>find . -perm /007</h:code> 
		inside the application's data directories to ensure that all files are 
		not world-accessible (either read, write, or execute).
		The command should not print any files.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the command
		<h:code>find . \( -perm -001 -o -perm -002 -o -perm -004 \)</h:code>
		inside the application's data directories to ensure that all files are not 
		world-accessible (either read, write, or execute). 
		The command should not print any files.
	      </subaactivity>
              <subaactivity platform="OS X">
		The evaluator shall run the command <h:code>find . -perm +007</h:code> inside
		the application's data directories to ensure that all files are not world-accessible 
		(either read, write, or execute).
		The command should not print any files.
	      </subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fmt_smf.1" name="Specification of Management Functions" status="threshold">
          <f-element id="fmt_smf.1.1">
            <title> The <abbr linkend="TSF"/> shall be capable of performing the following
              management functions 
              <selectables linebreak="yes">
                <selectable>no management functions</selectable>
                <selectable> enable/disable the transmission of any information describing the
                  system's hardware, software, or configuration
                </selectable>
                <selectable> enable/disable the transmission of any PII
                </selectable>
                <selectable> enable/disable transmission of any application state (e.g. crashdump)
                  information</selectable>
                <selectable> enable/disable network backup functionality to <assignable> list of 
                  enterprise or commercial cloud backup systems</assignable>
		</selectable>
                <selectable> <assignable> list of other management functions to be provided by the 
                  <abbr linkend="TSF" /></assignable></selectable> 
              </selectables>
              .
            </title>
            <note role="application">
	      this requirement stipulates that an application needs to provide the ability to 
	      enable/disable only those functions that it actually implements. the application
	      is not responsible for controlling the behavior of the platform or other applications.
	    </note>
            <aactivity>The evaluator shall verify that every management function 
              mandated by the PP is described in the operational guidance and that the description 
              contains the information required to perform the management duties associated with the 
              management function. The evaluator shall test the application's ability to provide the 
              management functions by configuring the application and testing each option selected 
              from above. The evaluator is expected to test these functions in all the ways in which 
              the <abbr linkend="ST"/> and guidance documentation state the configuration can be 
              managed.
            </aactivity>
          </f-element>
        </f-component>
      </subsection>

      <subsection title="Privacy" id="fpr">
      <f-component id="fpr_ano_ext.1" name="User Consent for Transmission of Personally Identifiable Information" status="threshold">
          <f-element id="fpr_ano_ext.1.1">
            <title>
	      The application shall 
	      <selectables linebreak="yes">
		<selectable>
		  not transmit <abbr linkend="PII"/> over a network
		</selectable>
		<selectable>
		  require user approval before executing
		  <assignable> 
		    list of functions that transmit <abbr linkend="PII"/> over a network
		  </assignable>
		</selectable>
	      </selectables>
	      .
	    </title>
            <note role="application">
	      This requirement applies only to PII that is specifically requested by the application;
	      it does not apply if the user volunteers PII without prompting from the application 
	      into a general (or inappropriate) data field.
	      A dialog box that declares intent to send PII presented to the user 
	      at the time the application is started is sufficient to meet this requirement. 
	    </note>
            <aactivity>The evaluator shall inspect the TSS documentation to identify functionality in the
              application where PII can be transmitted, and perform the following tests.
              <testlist>
                <test>
                  The evaluator shall run the application and exercise the functionality responsibly
                  for transmitting PII and verify that user approval is required before transmission
                  of the PII.
                </test>
                <!-- Removing this test for now. 
                <test>
                  The evaluator shall sniff network traffic while running the application 
                  and verify that no PII is transmitted without user approval.
		              If the application communicates over TLS, the evaluator shall use
		              man-in-the-middle tools to expose encrypted traffic before sniffing.
                </test>
                -->
              </testlist>
           </aactivity>
          </f-element>
        </f-component>
      </subsection>

      <subsection title="Protection of the TSF (FPT)" id="fpt">
        <f-component id="fpt_api_ext.1" name="Use of Supported Services and APIs" status="threshold">
          <f-element id="fpt_api_ext.1.1">
            <title>The application shall use only documented platform <abbr linkend="API"
            />s.</title>
            <note role="application">
              The definition of <h:i>documented</h:i> may vary depending upon whether the application is provided by
              a third party (who relies upon documented platform APIs) or by a platform vendor 
              who may be able to guarantee support for platform APIs.
	    </note>
            <aactivity>
              The evaluator shall verify that the TSS lists the platform <abbr linkend="API"/>s 
              used in the application.
              The evaluator shall then compare the list with the supported <abbr linkend="API"/>s
              (available through e.g. developer accounts, platform developer groups) and ensure that all 
              <abbr linkend="API"/>s listed in the TSS are supported.
            </aactivity>
          </f-element>
	</f-component>
        <f-component id="fpt_api_ext.2" name="Use of Supported Services and APIs" status="objective">
          <f-element id="fpt_api_ext.2.1">
            <title> The application 
              <selectables>
                <selectable>shall use platform-provided libraries</selectable>
                <selectable>does not implement functionality</selectable>
                </selectables>
                 for parsing <assignable> list of formats parsed that are included in the 
                 IANA MIME media types</assignable>.
            </title>
            <note role="application">
	      The IANA MIME types are listed at
              <h:a href='http://www.iana.org/assignments/media-types'>
		http://www.iana.org/assignments/media-types
	      </h:a> 
	      and include many image, audio, video, and content file formats. 
	      This requirement does not apply if providing parsing services is the purpose of the 
        application.
	    </note>
            <aactivity>
	      The evaluator shall verify that the TSS lists the IANA MIME media types
	      (as described by <h:a href='http://www.iana.org/assignments/media-types'>
	      http://www.iana.org/assignments/media-types</h:a> )
	      for all formats the application processes
	      and that it maps those formats to parsing services provided by the platform.
	    </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_aex_ext.1" name="Anti-Exploitation Capabilities" status="threshold">
          <f-element id="fpt_aex_ext.1.1">
            <title> The application shall not request to map memory at an explicit address
              except for <assignable>list of explicit exceptions</assignable>.
              <note role="application"> Requesting a memory mapping at an explicit address
                subverts address space layout randomization (<abbr linkend="ASLR"/>). </note>
            </title>
            <aactivity> The evaluator shall ensure that the <abbr linkend="TSS"/> 
              describes the compiler flags used to enable <abbr linkend="ASLR"/> when the
              application is compiled. The evaluator shall perform either a static or dynamic
              analysis to determine that no memory mappings are placed at an explicit and
              consistent address. The method of doing so varies per platform. 
	      <subaactivity platform="blackberry"> The evaluator shall run
                the same application on two different BlackBerry systems and run a tool that will
                list all memory mapped addresses for the application. The evaluator shall then
                verify the two different instances share no mapping locations. </subaactivity>
              <subaactivity platform="android">The evaluator shall run the same application on two
                different Android systems. Connect via ADB and inspect /proc/PID/maps. Ensure the
                two different instances share no mapping locations.</subaactivity>
              <subaactivity platform="windows"> The evaluator shall run the same application on two
                different Windows systems and run a tool that will list all memory mapped addresses
                for the application. The evaluator shall then verify the two different instances
                share no mapping locations. The Microsoft sysinternals tool, VMMap, could be used to
                view memory addresses of a running application.  The evaluator shall use a tool
                such as Microsoft's BinScope Binary Analyzer to confirm that the application has
                ASLR enabled.
              </subaactivity>
              <subaactivity platform="ios">
		The evaluator shall perform a static analysis to search
                for any mmap calls (or <abbr linkend="API"/> calls that call mmap), and ensure that
                no arguments are provided that request a mapping at a fixed address.
	      </subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the same application on two different Linux systems. 
		The evaluator shall then compare their memory maps using 
		<h:code>pmap -x <h:i>PID</h:i> </h:code>
		to ensure the two different instances share no mapping locations.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the same application on two different Solaris systems. 
		The evaluator shall then compare their memory maps using 
		<h:code>pmap -x <h:i>PID</h:i> </h:code>
		to ensure the two different instances share no mapping locations.
	      </subaactivity>
              <subaactivity platform="OS X">
		The evaluator shall run the same application on two different Mac OS X systems. 
		The evaluator shall then compare their memory maps using 
		<h:code>vmmap <h:i>PID</h:i></h:code>
		to ensure the two different instances share no mapping locations.
	      </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fpt_aex_ext.1.2">
            <title>
	      The application shall 
	      <selectables linebreak="yes">
		<selectable> 
		  not allocate any memory region with both write and execute permissions 
	        </selectable>
		<selectable>
		  allocate memory regions with write and execute permissions for only
		  <assignable> list of functions performing just-in-time compilation</assignable>
		</selectable>
	      </selectables>
	      .
	    </title>
            <note role="application"> Requesting a memory mapping with both write and execute
              permissions subverts the platform protection provided by <abbr linkend="DEP"/>. 
	      If the application performs no just-in-time compiling, then the first selection must be chosen.
	    </note>
            <aactivity> 
	      The evaluator shall verify that no memory mapping requests are made with write and execute permissions.
	      The method of doing so varies per platform.
              <subaactivity platform="blackberry">
                The evaluator shall perform static analysis on the
                application to verify that <h:ul>
                  <h:li> mmap is never invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </h:li>
                  <h:li> mprotect is never invoked.</h:li>
                </h:ul> 
              </subaactivity>
              <subaactivity platform="android"> The evaluator shall perform static analysis on the
                application to verify that <h:ul>
                  <h:li> mmap is never invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </h:li>
                  <h:li> mprotect is never invoked.</h:li>
                </h:ul> </subaactivity>
              <subaactivity platform="windows"> The evaluator shall use a tool such as Microsoft's 
                BinScope Binary Analyzer to confirm that the application passes the NXCheck. The 
                evaluator may also ensure that the <h:code>/NXCOMPAT</h:code> flag was used during 
                compilation to verify that DEP protections are enabled for the application. 
              </subaactivity>
              <subaactivity platform="ios"> The evaluator shall perform static analysis on the
                application to verify that mprotect is never invoked with the PROT_EXEC permission. 
              </subaactivity>
              <subaactivity platform="linux"> The evaluator shall perform static analysis on the
                application to verify that both <h:ul>
                  <h:li> mmap is never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </h:li>
                  <h:li> mprotect is never invoked with the PROT_EXEC permission.</h:li>
                </h:ul>  </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall perform static analysis on the
                application to verify that both <h:ul>
                  <h:li> mmap is never be invoked with both the PROT_WRITE and PROT_EXEC permissions,
                    and </h:li>
                  <h:li> mprotect is never invoked with the PROT_EXEC permission.</h:li>
                </h:ul></subaactivity>
              <subaactivity platform="OS X"> The evaluator shall perform static analysis on the
                application to verify that mprotect is never invoked with the PROT_EXEC permission.
              </subaactivity>
            </aactivity>
          </f-element>
          <!--      <f-element id="fpt_aex_ext.1.3">
        <title>The application shall not implement its own dynamic memory allocation
        functionality, unless that functionality also includes corruption
        detection.</title>
      </f-element> 
       Note: We have no AA, nor much traction here - and push-back from vendors.
       Maybe this is best considered for a future version.
-->
          <f-element id="fpt_aex_ext.1.3">
            <title>The application shall be compatible with security features provided by the
              platform vendor.</title>
            <note role="application">This requirement is designed to ensure that platform security 
              features do not need to be disabled in order for the application to run.</note>
            <aactivity>
	      The evaluator shall configure the platform in the ascribed manner and 
	      carry out one of the prescribed tests:
	      <subaactivity platform="blackberry">The evaluator shall ensure that the
                application can successfully run on the latest version of the BlackBerry OS. 
              </subaactivity>
              <subaactivity platform="android">The evaluator shall ensure that the application can
	      successfully run on the latest version of Android.
	      </subaactivity>
              <subaactivity platform="windows">For both classic desktop and Windows Universal 
                Applications, the evaluator shall configure the latest version of Microsoft's
                Enhanced Mitigation Experience Toolkit (EMET) to protect the application. The
                evaluator shall then run the application and verify that the application does not 
                crash while protected by EMET. 
              </subaactivity>
              <subaactivity platform="ios">The evaluator shall ensure that the application can
                successfully run on the latest version of iOS. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall ensure that the application can
                successfully run on a system with SELinux enabled and enforcing.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall ensure that the application can run with 
		Solaris Trusted Extensions enabled and enforcing.
	      </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall ensure that the application can
                successfully run on the latest version of OS X. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fpt_aex_ext.1.4">
            <title>
              The application shall not write user-modifiable files to directories that contain 
              executable files unless explicitly directed by the user to do so.
	    </title>
	    <note role="application">
	      Executables and user-modifiable files may not share the same parent directory, but
	      may share directories above the parent.
	    </note>
            <aactivity>
	      The evaluator shall run the application and determine where it writes its files.
	      For files where the user does not choose the destination, the evaluator shall 
	      check whether the destination directory contains executable files.
	      This varies per platform: 
	      <subaactivity platform="blackberry">
		The evaluator shall consider the requirement met because the platform forces
                applications to write all data within the application working directory
                (sandbox).
	      </subaactivity>
              <subaactivity platform="android"> 
		The evaluator shall run the program, mimicking normal usage, and note where all files are written. 
		The evaluator shall ensure that there are no executable files stored under <path>/data/data/<i>package</i>/</path> where <h:i>package</h:i> is the Java package of the application.
              </subaactivity>
              <subaactivity platform="windows">For Windows Universal Applications the evaluator shall consider
                the requirement met because the platform forces applications to write all data
                within the application working directory (sandbox). For Windows Desktop Applications
                the evaluator shall run the program, mimicking normal usage, and note where all
                files are written. The evaluator shall ensure that there are no executable files
                stored in the same directories to which the application wrote and no data files
                in the application’s install directory.</subaactivity>
              <subaactivity platform="ios">The evaluator shall consider the requirement met because
                the platform forces applications to write all data within the application working
                directory (sandbox).</subaactivity>
              <subaactivity platform="linux"> 
		The evaluator shall run the program, mimicking normal usage, 
		and note where all files are written. 
		The evaluator shall ensure that there are no executable files stored in the 
		same directories to which the application wrote.
	      </subaactivity>
              <subaactivity platform="Solaris">
		The evaluator shall run the program, mimicking normal usage, 
		and note where all files are written. 
		The evaluator shall ensure that there are no executable files stored in the 
		same directories to which the application wrote.
	      </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall run the program, mimicking normal
                usage, and note where all files are written. The evaluator shall ensure that there
                are no executable files stored in the same directories to which the application
                wrote. </subaactivity>
            </aactivity></f-element>
          <f-element id="fpt_aex_ext.1.5">
            <title>The application shall be compiled with stack-based buffer overflow protection
              enabled.</title>
            <aactivity>The evaluator shall ensure that the <abbr linkend="TSS"/> section of the <abbr linkend="ST"/>
              describes the compiler flag used to enable stack-based buffer overflow protection in
              the application. The evaluator shall perform a static analysis to verify that
              stack-based buffer overflow protection is present. The method of doing so varies per
              platform: 
	      <subaactivity platform="blackberry"> The evaluator shall ensure that the
              <h:code>-fstack-protector-strong</h:code> or <h:code>-fstack-protector-all</h:code>
	      flags are used. 
	      The <h:code>-fstack-protector-all</h:code> flag is preferred but 
	      <h:code>-fstack-protector-strong</h:code> is acceptable. 
              </subaactivity>
              <subaactivity platform="android"> Applications that are entirely Java run in the Java
                machine and do not need traditional stack protection. For applications using Java
                Native Interface (JNI), the evaluator shall ensure that the
                  <h:code>-fstack-protector-strong</h:code> or <h:code>-fstack-protector-all</h:code> flags
                are used. The <h:code>-fstack-protector-all</h:code> flag is preferred but
                  <h:code>-fstack-protector-strong</h:code> is acceptable. </subaactivity>
              <subaactivity platform="windows">The evaluator shall review the TSS and verify that
                the <h:code>/GS</h:code> flag was used during compilation. The evaluator shall run a tool,
                like <util>BinScope</util>, that can verify the correct usage of <h:code>/GS</h:code>
              </subaactivity>
              <subaactivity platform="ios">
                If the application is compiled using GCC or Xcode, the
                evaluator shall ensure that the <h:code>-fstack-protector-strong</h:code> or
                <h:code>-fstack-protector-all</h:code> flags are used. The
                <h:code>-fstack-protector-all</h:code> flag is preferred but
                <h:code>-fstack-protector-strong</h:code> is acceptable.
    If the application is built using any other compiler, then the evaluator shall determine that 
    appropriate stack-protection has been used during the build process.
              </subaactivity>
              <subaactivity platform="linux">
		If the application is compiled using GCC, the
                evaluator shall ensure that the <h:code>-fstack-protector-strong</h:code> or
                <h:code>-fstack-protector-all</h:code> flags are used. The
                <h:code>-fstack-protector-all</h:code> flag is preferred but
                <h:code>-fstack-protector-strong</h:code> is acceptable. If the application is built
                using clang, it must be compiled and linked with the
                <h:code>-fsanitize=address</h:code> flag.
		If the application is built using any other compiler, then the evaluator shall determine that appropriate stack-protection has been used during the build process.
	      </subaactivity>
              <subaactivity platform="Solaris">
	      	If the application is compiled using GCC, the
                evaluator shall ensure that the <h:code>-fstack-protector-strong</h:code> or
                <h:code>-fstack-protector-all</h:code> flags are used. The
                <h:code>-fstack-protector-all</h:code> flag is preferred but
                <h:code>-fstack-protector-strong</h:code> is acceptable. If the application is built
                using clang, it must be compiled and linked with the
                <h:code>-fsanitize=address</h:code> flag.
		If the application is built using any other compiler, then the evaluator shall determine that appropriate stack-protection has been used during the build process.
	      </subaactivity>
              <subaactivity platform="OS X">
                If the application is compiled using GCC or Xcode, the
                evaluator shall ensure that the <h:code>-fstack-protector-strong</h:code> or
                <h:code>-fstack-protector-all</h:code> flags are used. The
                <h:code>-fstack-protector-all</h:code> flag is preferred but
                <h:code>-fstack-protector-strong</h:code> is acceptable.
    If the application is built using any other compiler, then the evaluator shall determine that 
    appropriate stack-protection has been used during the build process.
              </subaactivity>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_tud_ext.1" name="Integrity for Installation and Update" status="threshold">
          <!-- TO DO: Cite references. -->
          <f-element id="fpt_tud_ext.1.1">
            <title>The application shall <selectables>
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables> to check for updates and patches to the application software. </title>
            <note role="application">This requirement is about the ability to "check" for updates.
              The actual installation of any updates should be done by the platform. This requirement
              is intended to ensure that the application can check for updates provided by the vendor,
              as updates provided by another source may contain malicious code.
            </note>
            <aactivity>
	      The evaluator shall check for an update using procedures described in the documentation
	      and verify that the application does not issue an error.
	      If it is updated or if it reports that no update is available this requirement is considered to be met.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.2">
            <title>The application shall be distributed using the format of the platform-supported
              package manager. </title>
            <aactivity> The evaluator shall verify that application updates are distributed in the
              format supported by the platform. This varies per platform: <subaactivity
                platform="blackberry"> The evaluator shall ensure that the application is packaged
                in the Blackberry (BAR) format. </subaactivity>
              <subaactivity platform="android"> The evaluator shall ensure that the application is
                packaged in the Android application package (APK) format. </subaactivity>
              <subaactivity platform="windows"> The evaluator shall ensure that the application is
                packaged in the standard Windows Installer (.MSI) format, the Windows Application 
                Software (.EXE) format signed using the Microsoft Authenticode process, or the 
                Windows Universal Application package (.APPX) format. See 
                https://msdn.microsoft.com/en-us/library/ms537364(v=vs.85).aspx for details 
                regarding Authenticode signing.  
              </subaactivity>
              <subaactivity platform="ios"> The evaluator shall ensure that the application is
                packaged in the IPA format. </subaactivity>
              <subaactivity platform="linux"> The evaluator shall ensure that the application is
                packaged in the format of the package management infrastructure of the chosen
                distribution. For example, applications running on Red Hat and Red Hat derivatives
                should be packaged in RPM format. Applications running on Debian and Debian
                derivatives should be packaged in <h:code>deb</h:code> format. </subaactivity>
              <subaactivity platform="Solaris"> The evaluator shall ensure that the application is
                packaged in the PKG format. </subaactivity>
              <subaactivity platform="OS X"> The evaluator shall ensure that application is packaged
                in the DMG format, the PKG format, or the MPKG format. </subaactivity>
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.3">
            <title>The application shall be packaged such that its removal results in the deletion 
              of all traces of the application, with the exception of configuration settings, output
              files, and audit/log events.</title>
            <note role="application">Applications bundled with the system/firmware image are not
              subject to this requirement if the user is unable to remove the application through
              means provided by the OS.</note>
            <aactivity>
	      The evaluator shall record the path of every file on the entire 
	      filesystem prior to installation of the application, and 
	      then install and run the application.
	      Afterwards, the evaluator shall then uninstall the application, and
	      compare the resulting filesystem to the initial record to verify 
	      that no files, other than configuration,
	      output, and audit/log files, have been added to the filesystem.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.4">
            <title> The application shall not download, modify, replace or update its own binary
              code. </title>
            <note role="application">This requirement applies to the code of the application; it
              does not apply to mobile code technologies that are designed for download and
              execution by the application. </note>
            <aactivity>The evaluator shall verify that the application's executable files are
              not changed by the application. The evaluator shall complete the following test:
              <testlist>
                <test>The evaluator shall install the application and then
                locate all of its executable files.  The evaluator shall then,
                for each file, save off either a hash of the file or a copy of
                the file itself.  The evaluator shall then run the application
                and exercise all features of the application as described in
                the TSS. The evaluator shall then compare each executable file
                with the either the saved hash or the saved copy of the files.
                The evaluator shall verify that these are identical.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.5">
            <title>The application shall <selectables atleastone="yes">
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables>
              to query the current version of the application software.
            </title>
            <aactivity>The evaluator shall query the application for the current version of the software
              according to the operational user guidance (AGD_OPE.1) and shall verify that the
              current version matches that of the documented and installed version.
            </aactivity>
          </f-element>
          <f-element id="fpt_tud_ext.1.6">
            <title>
			  The application installation package and its updates shall be digitally signed 
			  such that its platform can cryptographically verify them prior to installation.
            </title>
            <note role="application">The specifics of the verification of installation packages
			  and updates involves requirements on the platform (and not the
              application), so these are not fully specified here. </note>
            <aactivity>
			  The evaluator shall verify that the TSS identifies how the application
			  installation package and updates to it  
			  are signed by an authorized source. The definition of an
			  authorized source must be contained in the TSS.
			  The evaluator shall also ensure that the TSS (or the operational
			  guidance) describes how candidate updates are obtained.
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_lib_ext.1" name="Use of Third Party Libraries" status="threshold">
          <f-element id="fpt_lib_ext.1.1">
            <title> The application shall be packaged with only
	      <assignable>list of third-party libraries</assignable>. 
	    </title>
        <note role="application"> 
	     The intention of this requirement is for the evaluator to discover and document whether the 
         application is including unnecessary or unexpected third-party libraries.  This includes
		 adware libraries which could present a privacy threat, as well as ensuring
		 documentation of such libraries in case vulnerabilities are later discovered.
        </note>
      <aactivity> 
	      The evaluator shall install the application and survey its installation directory for 
          dynamic libraries. 
          The evaluator shall verify that libraries found to be packaged with or employed by the 
          application are limited to those in the assignment.
	    </aactivity>
          </f-element>
        </f-component>
        <f-component id="fpt_idv_ext.1" name="Software Identification and Versions" status="objective">
          <f-element id="fpt_idv_ext.1.1">
            <title>The application shall include <abbr title="Software Identification">SWID</abbr>
              tags that comply with the minimum requirements for
              <abbr title="Software Identification">SWID</abbr> tag from ISO/IEC 19770-2:2009
              standard.</title>
            <note role="application">Valid SWID tags must contain a SoftwareIdentity
              element and an Entity element as defined in the ISO/IEC 19770-2:2009
              standard. SWID tags must be stored with a .swidtag file
              extensions as defined in the ISO/IEC 19770-2:2009.
            </note>
            <aactivity>The evaluator shall install the application, then check for the
              existence of SWID tags in a .swidtag file. The evaluator shall open the
              file and verify that is contains at least a SoftwareIdentity element and
              an Entity element.</aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Trusted Path/Channel (FTP)" id="ftp">
        <f-component id="ftp_dit_ext.1" name="Protection of Data in Transit" status="threshold">
          <f-element id="ftp_dit_ext.1.1">
            <title>The application shall 
	    <selectables linebreak="yes">
        <selectable>not transmit any data</selectable>
        <selectable>not transmit any sensitive data</selectable>
        <selectable>encrypt all transmitted sensitive data with
          <selectables atleastone="yes">
            <selectable><abbr title="Hypertext Transfer Protocol Secure">HTTPS</abbr></selectable>
		        <selectable><abbr title="Transport Layer Security">TLS</abbr></selectable>
		        <selectable><abbr title="Datagram Transport Layer Security">DTLS</abbr></selectable>
      			<selectable>SSH as conforming to the <h:a href="https://www.niap-ccevs.org/pp/"><h:i>Extended Package for Secure Shell</h:i></h:a></selectable>
		      </selectables>
        </selectable>
        <selectable>encrypt all transmitted data with
          <selectables atleastone="yes">
            <selectable><abbr title="Hypertext Transfer Protocol Secure">HTTPS</abbr></selectable>
            <selectable><abbr title="Transport Layer Security">TLS</abbr></selectable>
            <selectable><abbr title="Datagram Transport Layer Security">DTLS</abbr></selectable>
            <selectable><abbr title="Secure Shell">SSH</abbr></selectable>
		      </selectables>
        </selectable>
      </selectables>
	    between itself and another trusted IT product.
	    </title>
      <note role="application">
	      Extended packages may override this requirement to provide for other protocols.
	      Encryption is not required for applications transmitting data that is not sensitive. 
		  <h:br/>
		  <h:p>
		  If <h:i>TLS</h:i> is selected, then evaluation of elements from 
		  <linkref linkend="FCS_TLSC_EXT.1"/> is required.</h:p>
		  <h:p>
		  If <h:i>HTTPS</h:i> is selected, then evaluation of elements from 
		  <linkref linkend="FCS_HTTPS_EXT.1"/> is required.</h:p> 
		  <h:p>
		    If <h:i>DTLS</h:i> is selected, then evaluation of elements from 
		  <linkref linkend="FCS_DTLS_EXT.1"/> is required.
		  </h:p>
		  <h:p>
		    If <h:i>SSH</h:i> is selected, the TSF shall be validated against the <h:i>Extended Package
      		    for Secure Shell</h:i>.
		  </h:p>

	    </note>  
      <aactivity>
        The evaluator shall perform the following tests.
        <testlist>
          <test>
            The evaluator shall exercise the application (attempting to transmit data; for example 
            by connecting to remote systems or websites) while capturing packets from the 
            application. The evaluator shall verify from the packet capture that the traffic is 
            encrypted with <abbr title="Hypertext Transfer Protocol Secure">HTTPS</abbr>, 
            <abbr title="Transport Layer Security">TLS</abbr> or 
            <abbr title="Datagram Transport Layer Security">DTLS</abbr> in accordance with the 
            selection in the <abbr linkend="ST"/>.
          </test>
          <test>
            The evaluator shall exercise the application (attempting to transmit data; for example by 
    	      connecting to remote systems or websites) while capturing packets from the application.
    	      The evaluator shall review the packet capture and verify that no sensitive data is transmitted 
    	      in the clear.
	        </test>
          <test>
            The evaluator shall inspect the TSS to determine if user credentials are
            transmitted. If credentials are transmitted the evaluator shall set the
            credential to a known value. The evaluator shall capture packets from the application
            while causing credentials to be transmitted as described in the TSS.
            The evaluator shall perform a string search
            of the captured network packets and verify that the plaintext credential previously
            set by the evaluator is not found.
          </test>
        </testlist>
        <subaactivity platform="android">
          If "not transmit any data" is selected, the evaluator shall ensure that the application's
          AndroidManifest.xml file does not contain a &lt;uses-permission&gt; or &lt;uses-permission-sdk-23&gt; tag
          containing android:name="android.permission.INTERNET".
          In this case,
          it is not necessary to perform the above Tests 1, 2, or 3, as the platform will not allow the
          application to perform any network communication.
          <!-- TODO: The current wording here adds additional work when "encrypt all transmitted data"
               is selected. It'd be preferable if we can instead simplify evaluation in that case, to encourage
               app developers to select it, so this is commented out for now.
               If "encrypt all transmitted data" is selected, the evaluator
               shall ensure that the application's manifest declares usesCleartextTraffic="false". It is
               still necessary to perform the above tests, as this manifest entry is only enforced on
               a best effort basis by the platform. -->
        </subaactivity>
        <subaactivity platform="ios">
          If "encrypt all transmitted data" is selected, the evaluator shall ensure that the
          application's Info.plist file does not contain the NSAllowsArbitraryLoads or
          NSExceptionAllowsInsecureHTTPLoads keys, as these keys disable iOS's Application
          Transport Security feature.
          <!-- TODO: Check the strength of iOS's App Transport Security enforcement (if apps
               can't easily bypass it, then we can skip performing Tests 1, 2, 3 on iOS when
               App Transport Security isn't explicitly disabled (assuming use of iOS 9 or greater)). -->
        </subaactivity>
      </aactivity>
          </f-element>
        </f-component>
      </subsection>
    </section>
    <section title="Security Assurance Requirements" id="SARs">The Security Objectives for the <abbr
        linkend="TOE"/> in <secref linkend="req"/> were constructed to address threats identified in
      <secref linkend="threats"/>. The Security Functional Requirements (<abbr linkend="SFR"/>s)
      in <secref linkend="SFRs"/> are a formal
      instantiation of the Security Objectives. The PP identifies the Security Assurance Requirements
      (<abbr linkend="SAR"/>s) to frame the
      extent to which the evaluator assesses the documentation applicable for the evaluation and
      performs independent testing.
      <h:br/>
      This section lists the set of <abbr linkend="SAR"/>s from CC part 3 that are required in
      evaluations against this
      PP. Individual Assurance Activities (AAs) to be performed are specified both
      in <secref linkend="req"/> as well as in this section.
      <h:br/>
      The general model for evaluation of <abbr linkend="TOE"/>s against STs written to conform to
      this PP is as follows:
      <h:br/>
      After the <abbr linkend="ST"/> has been approved for evaluation, the <abbr class="expanded"
      title="Information Technology Security Evaluation Facility">ITSEF</abbr> will obtain the
      <abbr linkend="TOE"/>, supporting
      environmental IT, and the administrative/user guides for the TOE. The ITSEF is expected to
      perform actions mandated by the Common Evaluation Methodology (CEM) for the ASE and
      ALC SARs. The ITSEF also performs the Assurance Activities contained within <secref linkend="req"/>,
      which are intended to be an interpretation of the other CEM assurance requirements as they
      apply to the specific technology instantiated in the TOE. The Assurance Activities that are
      captured in <secref linkend="req"/> also provide clarification as to what the developer needs
      to provide to demonstrate the TOE is compliant with the PP.
     
      <subsection title="Class ASE: Security Target" id="ase">As per ASE activities defined in <cite
          linkend="bibCEM"/>.</subsection>
      <subsection title="Class ADV: Development" id="adv">The information about the <abbr
          linkend="TOE"/> is contained in the guidance documentation available to the end user as
        well as the <abbr linkend="TSS"/> portion of the <abbr linkend="ST"/>. The <abbr linkend="TOE"/> developer 
        must concur with the description of the product that is contained in the TSS as it relates 
        to the functional requirements. The Assurance Activities contained in 
        <secref linkend="SFRs"/> should provide the <abbr linkend="ST"/> authors with sufficient information to 
        determine the appropriate content for the TSS section. 
        <a-component id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)">The functional
          specification describes the <abbr title="TSF Interface">TSFI</abbr>s. It is not necessary
          to have a formal or complete specification of these interfaces. Additionally, because
            <abbr linkend="TOE"/>s conforming to this PP will necessarily have interfaces to the
          Operational Environment that are not directly invokable by <abbr linkend="TOE"/> users, 
          there is little point specifying that such interfaces be described in and of themselves 
          since only indirect testing of such interfaces may be possible. For this PP, the 
          activities for this family should focus on understanding the interfaces presented in the 
          <abbr linkend="TSS"/> in response to the functional requirements and the interfaces 
          presented in the AGD documentation. No additional “functional specification” documentation 
          is necessary to satisfy the assurance activities specified. The interfaces that need to be 
          evaluated are characterized through the information needed to perform the assurance 
          activities listed, rather than as an independent, abstract list. 
	  <group type="dev-action">
          <a-element id="ADV_FSP.1.1D">
            <title>The developer shall provide a functional specification.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2D">
            <title>The developer shall provide a tracing from the functional specification to the
              SFRs.</title>
            <note role="application">As indicated in the introduction to this section, the
              functional specification is comprised of the information contained in the AGD_OPE and
              AGD_PRE documentation. The developer may reference a website accessible to application
              developers and the evaluator. The assurance activities in the functional requirements
              point to evidence that should exist in the documentation and <abbr linkend="TSS"/>
              section; since these are directly associated with the SFRs, the tracing in element
              ADV_FSP.1.2D is implicitly already done and no additional documentation is
              necessary.</note>
          </a-element>
    </group>
    <group type="con-pres">          <a-element id="ADV_FSP.1.1C">
            <title>The functional specification shall describe the purpose and method of use for
              each SFR-enforcing and SFR-supporting <abbr title="TSF Interface">TSFI</abbr>.</title>
          </a-element>
          <a-element id="ADV_FSP.1.2C">
            <title>The functional specification shall identify all parameters associated with each
              SFR-enforcing and SFR-supporting <abbr title="TSF Interface">TSFI</abbr>.</title>
          </a-element>
          <a-element id="ADV_FSP.1.3C">
            <title>The functional specification shall provide rationale for the implicit
              categorization of interfaces as SFR-non-interfering.</title>
          </a-element>
          <a-element id="ADV_FSP.1.4C">
            <title>The tracing shall demonstrate that the SFRs trace to <abbr title="TSF Interface"
                >TSFI</abbr>s in the functional specification.</title>
          </a-element>
      </group>
      <group type="eval-action">          
	<a-element id="ADV_FSP.1.1E">
          <title>The evaluator shall confirm that the information provided meets all requirements
          for content and presentation of evidence.</title>
        </a-element>
        <a-element id="ADV_FSP.1.2E">
          <title>The evaluator shall determine that the functional specification is an accurate
          and complete instantiation of the SFRs.</title>
	  <aactivity>There are no specific assurance activities associated with these SARs, except
            ensuring the information is provided. The functional specification documentation is
            provided to support the evaluation activities described in <secref linkend="SFRs"/>, and
            other activities described for AGD, ATE, and AVA SARs. The requirements on the content
            of the functional specification information is implicitly assessed by virtue of the
            other assurance activities being performed; if the evaluator is unable to perform an
            activity because there is insufficient interface information, then an adequate
            functional specification has not been provided.</aactivity>
	</a-element>
      </group>

        </a-component>
      </subsection>
      <subsection id="agd" title="Class AGD: Guidance Documentation">The guidance documents will be
        provided with the <abbr linkend="ST"/>. Guidance must include a description of how the IT personnel verifies
        that the Operational Environment can fulfill its role for the security functionality. The
        documentation should be in an informal style and readable by the IT personnel. Guidance must
        be provided for every operational environment that the product supports as claimed in the
        <abbr linkend="ST"/>. This guidance includes instructions to successfully install the <abbr linkend="TSF"/> in
        that environment; and Instructions to manage the security of the <abbr linkend="TSF"/> as a 
        product and as a component of the larger operational environment. Guidance pertaining to 
        particular security functionality is also provided; requirements on such guidance are 
        contained in the assurance activities specified with each requirement. 
        <a-component id="agd_ope.1" name="Operational User Guidance (AGD_OPE.1)">
<group type="dev-action">          <a-element id="AGD_OPE.1.1D">
            <title>The developer shall provide operational user guidance.</title>
            <note role="application">The operation user guidance does not have to be contained in a
              single document. Guidance to users, administrators and application developers can be
              spread among documents or web pages. Where appropriate, the guidance documentation is
              expressed in the eXtensible Configuration Checklist Description Format (XCCDF) to
              support security automation. Rather than repeat information here, the developer should
              review the assurance activities for this component to ascertain the specifics of the
              guidance that the evaluator will be checking for. This will provide the necessary
              information for the preparation of acceptable guidance.</note>
          </a-element>
    </group>
    <group type="con-pres">          <a-element id="AGD_OPE.1.1C">
            <title>The operational user guidance shall describe, for each user role, the
              user-accessible functions and privileges that should be controlled in a secure
              processing environment, including appropriate warnings.</title>
            <note role="application">User and administrator are to be considered in the definition
              of user role.</note>
          </a-element>
          <a-element id="AGD_OPE.1.2C">
            <title>The operational user guidance shall describe, for each user role, how to use the
              available interfaces provided by the <abbr linkend="TOE"/> in a secure manner.</title>
          </a-element>
          <a-element id="AGD_OPE.1.3C">
            <title>The operational user guidance shall describe, for each user role, the available
              functions and interfaces, in particular all security parameters under the control of
              the user, indicating secure values as appropriate.</title>
          </a-element>
          <a-element id="AGD_OPE.1.4C">
            <title>The operational user guidance shall, for each user role, clearly present each
              type of security-relevant event relative to the user-accessible functions that need to
              be performed, including changing the security characteristics of entities under the
              control of the <abbr linkend="TSF"/>.</title>
          </a-element>
          <a-element id="AGD_OPE.1.5C">
            <title>The operational user guidance shall identify all possible modes of operation of
              the <abbr linkend="TOE"/> (including operation following failure or operational
              error), their consequences, and implications for maintaining secure operation.</title>
          </a-element>
          <a-element id="AGD_OPE.1.6C">
            <title>The operational user guidance shall, for each user role, describe the security
              measures to be followed in order to fulfill the security objectives for the
              operational environment as described in the <abbr linkend="ST"/>.</title>
          </a-element>
          <a-element id="AGD_OPE.1.7C">
            <title>The operational user guidance shall be clear and reasonable.</title>
          </a-element>
      </group>
      <group type="eval-action">
        <a-element id="AGD_OPE.1.1E">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            <aactivity>Some of the contents of the operational guidance will be verified by the
              assurance activities in <secref linkend="SFRs"/> and evaluation of the <abbr
                linkend="TOE"/> according to the <cite linkend="bibCEM"/>. The following additional
              information is also required. If cryptographic functions are provided by the 
              <abbr linkend="TOE"/>, the operational guidance shall contain instructions for 
              configuring the cryptographic engine associated with the evaluated configuration of 
              the <abbr linkend="TOE"/>. It shall provide a warning to the administrator that use of 
              other cryptographic engines was not evaluated nor tested during the CC evaluation of 
              the <abbr linkend="TOE"/>. The documentation must describe the process for verifying 
              updates to the <abbr linkend="TOE"/> by verifying a digital signature – this may
              be done by the <abbr linkend="TOE"/> or the underlying platform. The evaluator shall 
              verify that this process includes the following steps: Instructions for obtaining the 
              update itself. This should include instructions for making the update accessible to 
              the <abbr linkend="TOE"/> (e.g., placement in a specific directory). Instructions for 
              initiating the update process, as well as discerning whether the process was 
              successful or unsuccessful. This includes generation of the hash/digital signature. 
              The <abbr linkend="TOE"/> will likely contain security functionality that does not 
              fall in the scope of evaluation under this PP. The operational guidance shall make it 
              clear to an administrator which security functionality is covered by the evaluation 
              activities.</aactivity>
        </a-element>
      </group>
    </a-component>
    <a-component id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">
      <group type="dev-action">          <a-element id="AGD_PRE.1.1D">
        <title>The developer shall provide the <abbr linkend="TOE"/>, including its preparative
        procedures.</title>
        <note role="application">As with the operational guidance, the developer should look to
        the assurance activities to determine the required content with respect to preparative
        procedures.</note>
      </a-element>
      </group>
      <group type="con-pres">          <a-element id="AGD_PRE.1.1C">
        <title>The preparative procedures shall describe all the steps necessary for secure
        acceptance of the delivered <abbr linkend="TOE"/> in accordance with the developer's
        delivery procedures.</title>
      </a-element>
      <a-element id="AGD_PRE.1.2C">
        <title>The preparative procedures shall describe all the steps necessary for secure
        installation of the <abbr linkend="TOE"/> and for the secure preparation of the
        operational environment in accordance with the security objectives for the operational
        environment as described in the <abbr linkend="ST"/>.</title>
      </a-element>
      </group>
      <group type="eval-action">          <a-element id="AGD_PRE.1.1E">
        <title>The evaluator shall confirm that the information provided meets all requirements
        for content and presentation of evidence.</title>
      </a-element>
      <a-element id="AGD_PRE.1.2E">
        <title>The evaluator shall apply the preparative procedures to confirm that the <abbr
        linkend="TOE"/> can be prepared securely for operation.</title>
        <aactivity>As indicated in the introduction above, there are significant expectations
        with respect to the documentation—especially when configuring the operational
        environment to support <abbr linkend="TOE"/> functional requirements. The evaluator 
        shall check to ensure that the guidance provided for the <abbr linkend="TOE"/> 
        adequately addresses all platforms claimed for the <abbr linkend="TOE"/> in the 
	<abbr linkend="ST"/>.
        </aactivity>
      </a-element>
      </group>
    </a-component>
  </subsection>
      <subsection id="alc" title="Class ALC: Life-cycle Support">
        At the assurance level provided for TOEs conformant to this PP, life-cycle support is limited
        to end-user-visible aspects of the life-cycle, rather than an examination of the TOE vendor’s
        development and configuration management process. This is not meant to diminish the
        critical role that a developer’s practices play in contributing to the overall trustworthiness of a
        product; rather, it is a reflection on the information to be made available for evaluation at this
        assurance level.
        <a-component id="alc_cmc.1" name="Labeling of the TOE (ALC_CMC.1)">This component is
          targeted at identifying the <abbr linkend="TOE"/> such that it can be distinguished from
          other products or versions from the same vendor and can be easily specified when being
          procured by an end user. 
	  <group type="dev-action">
            <a-element id="alc_cmc.1.1d">
              <title>The developer shall provide the <abbr linkend="TOE"/> and a reference for the
              <abbr linkend="TOE"/>.</title>
            </a-element>
	  </group>
	  <group type="con-pres">          <a-element id="alc_cmc.1.1c">
            <title>The <abbr linkend="TOE"/> shall be labeled with a unique reference.</title>
            <note role="application">Unique reference information includes:
			  <h:ul>
			    <h:li>Application Name</h:li>
			    <h:li>Application Version</h:li>
			    <h:li>Application Description</h:li>
			    <h:li>Platform on which Application Runs</h:li>
			    <h:li>Software Identification (SWID) tags, if available</h:li>
			   </h:ul>
            </note>
          </a-element>
	  </group>
	  <group type="eval-action">
	    <a-element id="alc_cmc.1.1e">
              <title>The evaluator shall confirm that the information provided meets all
              requirements for content and presentation of evidence.</title>
              <aactivity>The evaluator shall check the <abbr linkend="ST"/> to ensure that it contains an identifier
              (such as a product name/version number) that specifically identifies the version that
              meets the requirements of the <abbr linkend="ST"/>. Further, the evaluator shall check the AGD guidance
              and <abbr linkend="TOE"/> samples received for testing to ensure that the version
              number is consistent with that in the <abbr linkend="ST"/>. If the vendor maintains a web site
              advertising the <abbr linkend="TOE"/>, the evaluator shall examine the information on 
              the web site to ensure that the information in the <abbr linkend="ST"/> is sufficient to distinguish the
              product.</aactivity>
            </a-element>
	  </group>
        </a-component>
        <a-component id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">Given the scope of the <abbr
            linkend="TOE"/> and its associated evaluation evidence requirements, this component’s
          assurance activities are covered by the assurance activities listed for ALC_CMC.1.
	  <group type="dev-action">
            <a-element id="alc_cms.1.1d">
            <title>The developer shall provide a configuration list for the <abbr linkend="TOE"
              />.</title>
          </a-element>
	  </group>
	  <group type="con-pres">
            <a-element id="alc_cms.1.1c">
            <title>The configuration list shall include the following: the <abbr linkend="TOE"/>
              itself; and the evaluation evidence required by the SARs.</title>
          </a-element>
          <a-element id="alc_cms.1.2c">
            <title>The configuration list shall uniquely identify the configuration items.</title>
          </a-element>
	  </group>
	  <group type="eval-action">
            <a-element id="alc_cms.1.1e">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            <aactivity>The "evaluation evidence required by the SARs" in this PP is limited to the
              information in the <abbr linkend="ST"/> coupled with the guidance provided to administrators and users
              under the AGD requirements. By ensuring that the <abbr linkend="TOE"/> is specifically
              identified and that this identification is consistent in the <abbr linkend="ST"/> and in the AGD
              guidance (as done in the assurance activity for ALC_CMC.1), the evaluator implicitly
              confirms the information required by this component. Life-cycle support is targeted
              aspects of the developer’s life-cycle and instructions to providers of applications
              for the developer’s devices, rather than an in-depth examination of the <abbr
                linkend="TSF"/> manufacturer’s development and configuration management process.
              This is not meant to diminish the critical role that a developer’s practices play in
              contributing to the overall trustworthiness of a product; rather, it’s a reflection on
              the information to be made available for evaluation. <h:br/> The evaluator shall ensure
              that the developer has identified (in guidance documentation for application
              developers concerning the targeted platform) one or more development environments
              appropriate for use in developing applications for the developer’s platform. For each
              of these development environments, the developer shall provide information on how to
              configure the environment to ensure that buffer overflow protection mechanisms in the
              environment(s) are invoked (e.g., compiler flags). The evaluator shall ensure that
              this documentation also includes an indication of whether such protections are on by
              default, or have to be specifically enabled. The evaluator shall ensure that the 
              <abbr linkend="TSF"/> is uniquely identified (with respect to other products from the 
              <abbr linkend="TSF"/> vendor), and that documentation provided by the developer in 
              association with the requirements in the <abbr linkend="ST"/> is associated with the 
              <abbr linkend="TSF"/> using this unique identification.</aactivity>
          </a-element>
	  </group>
        </a-component>
        <a-component id="alc_tsu_ext.1" name="Timely Security Updates">
          This component requires the TOE developer, in conjunction with any other necessary parties,
          to provide information as to how the end-user devices are updated to address security issues
          in a timely manner. The documentation describes the process of providing updates to the
          public from the time a security flaw is reported/discovered, to the time an update is released.
          This description includes the parties involved (e.g., the developer, carriers(s)) and the steps
          that are performed (e.g., developer testing, carrier testing), including worst case time periods,
          before an update is made available to the public.
<group type="dev-action">          <a-element id="alc_tsu_ext.1.1d">
            <title>The developer shall provide a description in the TSS of how timely
              security updates are made to the <abbr linkend="TOE"/>.</title>
            <note>
              Application developers must support updates to their products for purposes of
              fixing security vulnerabilities.
            </note>
          </a-element>
          <a-element id="alc_tsu_ext.1.2d">
            <title>
              The developer shall provide a description in the TSS of how users are notified when 
              updates change security properties or the configuration of the product.
            </title>
          </a-element>
    </group>
    <group type="con-pres">          <a-element id="alc_tsu_ext.1.1c">
            <title>The description shall include the process for creating and deploying
              security updates for the <abbr linkend="TOE"/> software.</title>
          </a-element>
          <a-element id="alc_tsu_ext.1.2c">
            <title>The description shall express the time window as the length of time, 
              in days, between public disclosure of a vulnerability and the public availability
              of security updates to the <abbr linkend="TOE"/>.</title>
          </a-element>
          <a-element id="alc_tsu_ext.1.3c">
            <title>The description shall include the mechanisms publicly available for
              reporting security issues pertaining to the <abbr linkend="TOE"/>.</title>
            <note>
              The reporting mechanism could include web sites, email addresses, as
              well as a means to protect the sensitive nature of the report (e.g., public keys that could be
              used to encrypt the details of a proof-of-concept exploit).
            </note>
          </a-element>
      </group>
<group type="eval-action">          <a-element id="alc_tsu_ext.1.1e">
            <title>The evaluator <h:i>shall confirm</h:i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
            <aactivity>
              The evaluator shall verify that the TSS contains a description of the timely security update
              process used by the developer to create and deploy security updates. The evaluator shall
              verify that this description addresses the entire application. The evaluator shall also
              verify that, in addition to the TOE developer’s process, any
              third-party processes are also addressed in the description. The evaluator shall
              also verify that each mechanism for deployment of security updates is described.
              <h:br/>
              The evaluator shall verify that, for each deployment mechanism described for the update
              process, the TSS lists a time between public disclosure of a vulnerability and public
              availability of the security update to the TOE patching this vulnerability, to include any third-party
              or carrier delays in deployment. The evaluator shall verify that this time is expressed in
              a number or range of days.
              <h:br/>
              The evaluator shall verify that this description includes the publicly available mechanisms
              (including either an email address or website) for reporting security issues related to the TOE.
              The evaluator shall verify that the description of this mechanism includes a method for
              protecting the report either using a public key for encrypting email or a trusted channel for a
              website.
            </aactivity>
          </a-element>
          </group>
        </a-component>
      </subsection>
      <subsection id="ate" title="Class ATE: Tests">Testing is specified for functional aspects of
        the system as well as aspects that take advantage of design or implementation weaknesses.
        The former is done through the ATE_IND family, while the latter is through the AVA_VAN
        family. At the assurance level specified in this PP, testing is based on advertised
        functionality and interfaces with dependency on the availability of design information. One
        of the primary outputs of the evaluation process is the test report as specified in the
        following requirements. <a-component id="ate_ind.1"
          name="Independent Testing – Conformance (ATE_IND.1)"> Testing is performed to confirm the
          functionality described in the <abbr linkend="TSS"/> as well as the administrative
          (including configuration and operational) documentation provided. The focus of the testing
          is to confirm that the requirements specified in <secref linkend="SFRs"/> being met,
          although some additional testing is specified for SARs in <secref linkend="SARs"/>. The
          Assurance Activities identify the additional testing activities associated with these
          components. The evaluator produces a test report documenting the plan for and results of
          testing, as well as coverage arguments focused on the platform/<abbr linkend="TOE"/>
          combinations that are claiming conformance to this PP. Given the scope of the 
          <abbr linkend="TOE"/> and its associated evaluation evidence requirements, this 
          component’s assurance activities are covered by the assurance activities listed for 
          ALC_CMC.1. 
	  <group type="dev-action">
            <a-element id="ate_ind.1.1d">
              <title>The developer shall provide the <abbr linkend="TOE"/> for testing.</title>
            </a-element>
	  </group>
	  <group type="con-pres"> 
            <a-element id="ate_ind.1.1c">
            <title>The <abbr linkend="TOE"/> shall be suitable for testing.</title>
          </a-element>
	  </group>
	  <group type="eval-action">
            <a-element id="ate_ind.1.1e">
              <title>The evaluator <h:i>shall confirm</h:i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
            </a-element>
            <a-element id="ate_ind.1.2e">
              <title>The evaluator shall test a subset of the <abbr linkend="TSF"/> to confirm
              that the <abbr linkend="TSF"/> operates as specified.</title>
            <note role="application">The evaluator shall test the application on the most current
              fully patched version of the platform.</note>
            <aactivity>The evaluator shall prepare a test plan and report documenting the testing
              aspects of the system, including any application crashes during testing. The evaluator
              shall determine the root cause of any application crashes and include that information
              in the report. The test plan covers all of the testing actions contained in
              the <cite linkend="bibCEM"/> and the body of this PP’s Assurance Activities. 
              <h:br/>
              While it
              is not necessary to have one test case per test listed in an Assurance Activity, the
              evaluator must document in the test plan that each applicable testing requirement in
              the <abbr linkend="ST"/> is covered. The test plan identifies the platforms to be tested, and for those
              platforms not included in the test plan but included in the <abbr linkend="ST"/>, the test plan provides
              a justification for not testing the platforms. This justification must address the
              differences between the tested platforms and the untested platforms, and make an
              argument that the differences do not affect the testing to be performed. It is not
              sufficient to merely assert that the differences have no affect; rationale must be
              provided. If all platforms claimed in the <abbr linkend="ST"/> are tested, then no rationale is
              necessary. The test plan describes the composition of each platform to be tested, and
              any setup that is necessary beyond what is contained in the AGD documentation. It
              should be noted that the evaluator is expected to follow the AGD documentation for
              installation and setup of each platform either as part of a test or as a standard
              pre-test condition. This may include special test drivers or tools. For each driver or
              tool, an argument (not just an assertion) should be provided that the driver or tool
              will not adversely affect the performance of the functionality by the <abbr
                linkend="TOE"/> and its platform. 
              <h:br/>
              This also includes the configuration of the
              cryptographic engine to be used. The cryptographic algorithms implemented by this
              engine are those specified by this PP and used by the cryptographic protocols being
              evaluated (IPsec, TLS, SSH). The test plan identifies high-level test objectives
              as well as the test procedures to be followed to achieve those objectives. These
              procedures include expected results. 
              <h:br/>
              The test report (which could just be an annotated
              version of the test plan) details the activities that took place when the test
              procedures were executed, and includes the actual results of the tests. This shall be
              a cumulative account, so if there was a test run that resulted in a failure; a fix
              installed; and then a successful re-run of the test, the report would show a “fail”
              and “pass” result (and the supporting details), and not just the “pass”
              result.</aactivity>
          </a-element>
	  </group>
        </a-component>
      </subsection>
      <subsection id="ava" title="Class AVA: Vulnerability Assessment">For the current generation of
        this protection profile, the evaluation lab is expected to survey open sources to discover
        what vulnerabilities have been discovered in these types of products. In most cases, these
        vulnerabilities will require sophistication beyond that of a basic attacker. Until
        penetration tools are created and uniformly distributed to the evaluation labs, the
        evaluator will not be expected to test for these vulnerabilities in the <abbr linkend="TOE"
        />. The labs will be expected to comment on the likelihood of these vulnerabilities given
        the documentation provided by the vendor. This information will be used in the development
        of penetration testing tools and for the development of future protection profiles.
          <a-component id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">
	    <group type="dev-action">
	      <a-element id="ava_van.1.1d">
            <title>The developer shall provide the <abbr linkend="TOE"/> for testing.</title>
          </a-element>
	</group>
	<group type="con-pres">
      <a-element id="ava_van.1.1c">
            <title>The <abbr linkend="TOE"/> shall be suitable for testing.</title>
            <note role="application">Suitability for testing means not being obfuscated or
              packaged in such a way as to disrupt either static or dynamic analysis by the
			  evaluator.</note>
          </a-element>
      </group>
      <group type="eval-action">
	<a-element id="ava_van.1.1e">
            <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
          </a-element>
          <a-element id="ava_van.1.2e">
            <title>The evaluator shall perform a search of public domain sources to identify
              potential vulnerabilities in the <abbr linkend="TOE"/>.</title>
            <note role="application">Public domain sources include the Common Vulnerabilities 
			and Exposures (CVE) dictionary for publicly known vulnerabilities.  Public domain
			sources also include sites which provide free checking of files for viruses.</note>
			<!-- their Usage statement does not permit us to mention VirusTotal by name without permission -->
          </a-element>
          <a-element id="ava_van.1.3e">
            <title>The evaluator shall conduct penetration testing, based on the identified
              potential vulnerabilities, to determine that the <abbr linkend="TOE"/> is resistant to
              attacks performed by an attacker possessing Basic attack potential.</title>
            <aactivity>The evaluator shall generate a report to document their
              findings with respect to this requirement. This report could physically be part of the
              overall test report mentioned in ATE_IND, or a separate document. The evaluator
              performs a search of public information to find vulnerabilities that have been found
              in similar applications with a particular focus on network protocols the application
              uses and document formats it parses. 
	          The evaluator shall also run a virus scanner with the most current virus 
	          definitions against the application files and verify that no files are flagged as malicious.
              The evaluator documents the sources consulted and
              the vulnerabilities found in the report. 
              <h:br/>
              For each vulnerability found, the evaluator
              either provides a rationale with respect to its non-applicability, or the evaluator
              formulates a test (using the guidelines provided in ATE_IND) to confirm the
              vulnerability, if suitable. Suitability is determined by assessing the attack vector
              needed to take advantage of the vulnerability. If exploiting the vulnerability
              requires expert skills and an electron microscope, for instance, then a test would not
              be suitable and an appropriate justification would be formulated.</aactivity>
          </a-element>
      </group>
        </a-component>
      </subsection>
    </section>
  </chapter>

  <appendix title="Optional Requirements" id="optional" >
      As indicated in <secref linkend="ccl"/>, the baseline requirements (those that must be
      performed by the <abbr linkend="TOE"/>) are contained in the body of this PP.
      Additionally, there are three other types of requirements specified in 
	  <appref linkend="optional"/>, <appref linkend="sel-based"/>, and
	  <appref linkend="objective"/>.
      The first type (in this Appendix) are requirements that can be included in the <abbr linkend="ST"/>,
	  but are not required in order for a TOE to claim conformance to this PP. The second type 
	  (in <appref linkend="sel-based"/>)
      are requirements based on selections in the body of the PP: if certain selections are made,
      then additional requirements in that appendix must be included. The third type (in
      <appref linkend="objective"/> are components that are not required in
	  order to conform to this PP, but will be
      included in the baseline requirements in future versions of this PP, so adoption by
      vendors is encouraged. Note that the ST author is responsible for ensuring that
      requirements that may be associated with those in 
	  <appref linkend="optional"/>, <appref linkend="sel-based"/>, and
	  <appref linkend="objective"/>
      but are not listed (e.g., FMT-type requirements) are also included in the ST.
  </appendix>

  <appendix title="Selection-Based Requirements" id="sel-based" >
      As indicated in the introduction to this PP, the baseline requirements (those that must be
      performed by the TOE or its underlying platform) are contained in the body of this PP. There
      are additional requirements based on selections in the body of the PP: if certain selections are
      made, then additional requirements below will need to be included.
  </appendix>

  <appendix title="Objective Requirements" id="objective">
      This Annex includes requirements that specify security functionality which also addresses
      threats. The requirements are not currently mandated in the body of this PP as they describe
      security functionality not yet widely available in commercial technology. However, these
      requirements may be included in the ST such that the TOE is still conformant to this PP, and
      it is expected that they be included as soon as possible.
  </appendix>

  <appendix title="Entropy Documentation and Assessment" id="entropyappendix"> 
  This appendix describes the required supplementary information for the entropy
  source used by the TOE.
  <h:br/>
  The documentation of the entropy source should be detailed enough that, after
  reading, the evaluator will thoroughly understand the entropy source and why
  it can be relied upon to provide sufficient entropy. This documentation should
  include multiple detailed sections: design description, entropy justification,
  operating conditions, and health testing. This documentation is not required to
  be part of the TSS. 
   
<section id="entropydesign" title="Design Description">
  Documentation shall include the design of the entropy source as a whole,
  including the interaction of all entropy source components. Any information
  that can be shared regarding the design should also be included for any
  third-party entropy sources that are included in the product. 
  <h:br/>
  The documentation will describe the operation of the entropy source to
  include, how entropy is produced, and how unprocessed (raw) data can be
  obtained from within the entropy source for testing purposes. The documentation
  should walk through the entropy source design indicating where the entropy
  comes from, where the entropy output is passed next, any post-processing
  of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally,
  how it is output from the entropy source. Any conditions placed on the
  process (e.g., blocking) should also be described in the entropy source
  design. Diagrams and examples are encouraged. 
  <h:br/>
  This design must also include a description of the content of the
  security boundary of the entropy source and a description of how
  the security boundary ensures that an adversary outside the boundary
  cannot affect the entropy rate.
  <h:br/>
  If implemented, the design description shall include a description
  of how third-party applications can add entropy to the RBG. A
  description of any RBG state saving between power-off and
  power-on shall be included.
</section>

<section id="entropyjustification" title="Entropy Justification">
  There should be a technical argument for where the unpredictability in
  the source comes from and why there is confidence in the entropy source
  delivering sufficient entropy for the uses made of the RBG output
  (by this particular TOE). This argument will include a description of
  the expected min-entropy rate (i.e. the minimum entropy (in bits) per
  bit or byte of source data) and explain that sufficient entropy is
  going into the TOE randomizer seeding process. This discussion will
  be part of a justification for why the entropy source can be relied
  upon to produce bits with entropy.
  <h:br/>
  The amount of information necessary to justify the expected
  min-entropy rate depends on the type of entropy source included in the
  product.
  <h:br/>
  For developer provided entropy sources, in order to justify the
  min-entropy rate, it is expected that a large number of raw source
  bits will be collected, statistical tests will be performed, and the
  min-entropy rate determined from the statistical tests. While no
  particular statistical tests are required at this time, it is expected
  that some testing is necessary in order to determine the amount of
  min-entropy in each output.
  <h:br/>
  For third party provided entropy sources, in which the TOE vendor
  has limited access to the design and raw entropy data of the source, the
  documentation will indicate an estimate of the amount of min-entropy
  obtained from this third-party source.  It is acceptable for the vendor
  to “assume” an amount of min-entropy, however, this assumption must be
  clearly stated in the documentation provided.  In particular, the
  min-entropy estimate must be specified and the assumption included
  in the ST.
  <h:br/>
  Regardless of type of entropy source, the justification will also
  include how the DRBG is initialized with the entropy stated in the ST,
  for example by verifying that the min-entropy rate is multiplied by the
  amount of source data used to seed the DRBG or that the rate of entropy
  expected based on the amount of source data is explicitly stated and
  compared to the statistical rate. If the amount of source data used to
  seed the DRBG is not clear or the calculated rate is not explicitly
  related to the seed, the documentation will not be considered complete.
  <h:br/>
  The entropy justification shall not include any data added from
  any third-party application or from any state saving between restarts.
</section>

<section id="entropyoperatingconditions" title="Operating Conditions">
  The entropy rate may be affected by conditions outside the control
  of the entropy source itself.  For example, voltage, frequency,
  temperature, and elapsed time after power-on are just a few of the
  factors that may affect the operation of the entropy source.
  As such, documentation will also include the range of operating conditions
  under which the entropy source is expected to generate random data.
  It will clearly describe the measures that have been taken in the
  system design to ensure the entropy source continues to operate
  under those conditions. Similarly, documentation shall describe
  the conditions under which the entropy source is known to malfunction
  or become inconsistent. Methods used to detect failure or degradation
  of the source shall be included.
</section>

<section id="entropyhealthtesting" title="Health Testing">
  More specifically, all entropy source health tests and their rationale
  will be documented. This will include a description of the health tests,
  the rate and conditions under which each health test is performed
  (e.g., at startup, continuously, or on-demand), the expected results
  for each health test, and rationale indicating why each test is
  believed to be appropriate for detecting one or more failures in the
  entropy source.
</section>
  
  </appendix>

  <appendix title="References" id="biblio">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation - <h:ul>
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R4.pdf">Part
                1: Introduction and General Model</h:a>, CCMB-2012-09-001, Version 3.1 Revision 4,
              September 2012.</h:li>
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R4.pdf">Part
                2: Security Functional Components</h:a>, CCMB-2012-09-002, Version 3.1 Revision 4,
              September 2012.</h:li>
            <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part
                3: Security Assurance Components</h:a>, CCMB-2012-09-003, Version 3.1 Revision 4,
              September 2012.</h:li>
          </h:ul></description>
      </entry>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>
          <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CEMV3.1R4.pdf">Common
            Evaluation Methodology for Information Technology Security - Evaluation Methodology</h:a>,
          CCMB-2012-09-004, Version 3.1, Revision 4, September 2012. </description>
      </entry>
      <entry id="bibCESG">
        <tag>CESG</tag>
        <description>CESG - <h:a
            href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End
            User Devices Security and Configuration Guidance</h:a></description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <h:a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</h:a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf"
            >Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
    </bibliography>
  </appendix>

  <appendix title="Acronyms" id="acronyms">
    <acronyms>
      <entry>
        <term>ADB</term>
        <description>Android Debug Bridge</description>
      </entry>
      <entry>
        <term>AES</term>
        <description>Advanced Encryption Standard</description>
      </entry>
      <entry>
        <term>ANSI</term>
        <description>American National Standards Institute</description>
      </entry>
       <entry>
        <term>API</term>
        <description>Application Programming Interface</description>
      </entry>
       <entry>
        <term>APK</term>
        <description>Android Application Package</description>
      </entry>
       <entry>
        <term>APPX</term>
         <description>Windows Universal Application Package</description>
      </entry>
       <entry>
        <term>API</term>
        <description>Application Programming Interface</description>
      </entry>
      <entry>
        <term>ASLR</term>
        <description>Address Space Layout Randomization</description>
      </entry>
       <entry>
        <term>BAR</term>
         <description>Blackberry Application Package</description>
      </entry>
       <entry>
        <term>BIOS</term>
        <description>Basic Input/Output System</description>
      </entry>
      <entry>
        <term>CDSA</term>
        <description>Common Data Security Architecture</description>
      </entry>
      <entry>
        <term>CESG</term>
        <description>Communications-Electronics Security Group</description>
      </entry>
      <entry>
        <term>CMC</term>
        <description>Certificate Management over CMS</description>
      </entry>
      <entry>
        <term>CMS</term>
        <description>Cryptographic Message Syntax</description>
      </entry>
      <entry>
        <term>CN</term>
        <description>Common Names</description>
      </entry>
      <entry>
        <term>CRL</term>
        <description>Certificate Revocation List</description>
      </entry>
      <entry>
        <term>CSA</term>
        <description>Computer Security Act</description>
      </entry>
      <entry>
        <term>DEP</term>
        <description>Data Execution Prevention</description>
      </entry>
      <entry>
        <term>DES</term>
        <description>Data Encryption Standard</description>
      </entry>
      <entry>
        <term>DHE</term>
        <description>Diffie-Hellman Ephemeral</description>
      </entry>
      <entry>
        <term>DMG</term>
        <description>Apple Disk Image</description>
      </entry>
      <entry>
        <term>DNS</term>
        <description>Domain Name System</description>
      </entry>
      <entry>
        <term>DPAPI</term>
        <description>Data Protection Application Programming Interface</description>
      </entry>
      <entry>
        <term>DRBG</term>
        <description>Deterministic Random Bit Generator</description>
      </entry>
      <entry>
        <term>DSS</term>
        <description>Digital Signature Standard</description>
      </entry>
     <entry>
        <term>DT</term>
        <description>Date/Time Vector</description>
      </entry>
      <entry>
        <term>DTLS</term>
        <description>Datagram Transport Layer Security</description>
      </entry>
      <entry>
        <term>EAP</term>
        <description>Extensible Authentication Protocol</description>
      </entry>
      <entry>
        <term>ECDHE</term>
        <description>Elliptic Curve Diffie-Hellman Ephemeral</description>
      </entry>
      <entry>
        <term>ECDSA</term>
        <description>Elliptic Curve Digital Signature Algorithm</description>
      </entry>
      <entry>
        <term>EMET</term>
        <description>Enhanced Mitigation Experience Toolkit</description>
      </entry>
      <entry>
        <term>EST</term>
        <description>Enrollment over Secure Transport</description>
      </entry>
      <entry>
        <term>FIPS</term>
        <description>Federal Information Processing Standards</description>
      </entry>
      <entry>
        <term>DSS</term>
        <description>Digital Signature Standard</description>
      </entry>
      <entry>
        <term>GPS</term>
        <description>Global Positioning System</description>
      </entry>
      <entry>
        <term>HMAC</term>
        <description>Hash-based Message Authentication Code</description>
      </entry>
      <entry>
        <term>HTTP</term>
        <description>Hypertext Transfer Protocol</description>
      </entry>
      <entry>
        <term>HTTPS</term>
        <description>Hypertext Transfer Protocol Secure</description>
      </entry>
      <entry>
        <term>DSS</term>
        <description>Digital Signature Standard</description>
      </entry>
      <entry>
        <term>IANA</term>
        <description>Internet Assigned Number Authority</description>
      </entry>
      <entry>
        <term>IEC</term>
        <description>International Electrotechnical Commission</description>
      </entry>
      <entry>
        <term>IETF</term>
        <description>Internet Engineering Task Force</description>
      </entry>
      <entry>
        <term>IP</term>
        <description>Internet Protocol</description>
      </entry>
      <entry>
        <term>IPA</term>
        <description>iOS Package archive</description>
      </entry>
      <entry>
        <term>IR</term>
        <description>Intermediate Integer</description>
      </entry>
      <entry>
        <term>ISO</term>
        <description>International Organization for Standardization</description>
      </entry>
      <entry>
        <term>IT</term>
        <description>Information Technology</description>
      </entry>
      <entry>
        <term>ITSEF</term>
        <description>Information Technology Security Evaluation Facility</description>
      </entry>
      <entry>
        <term>JNI</term>
        <description>Java Native Interface</description>
      </entry>
      <entry>
        <term>LDAP</term>
        <description>Lightweight Directory Access Protocol</description>
      </entry>
      <entry>
        <term>MIME</term>
        <description>Multi-purpose Internet Mail Extensions</description>
      </entry>
      <entry>
        <term>MPKG</term>
        <description>Meta Package</description>
      </entry>
      <entry>
        <term>MSI</term>
        <description>Microsoft Installer</description>
      </entry>
      <entry>
        <term>NFC</term>
        <description>Near Field Communication</description>
      </entry>
      <entry>
        <term>NIAP</term>
        <description>National Information Assurance Partnership</description>
      </entry>
      <entry>
        <term>NIST</term>
        <description>National Institute of Standards and Technology</description>
      </entry>
      <entry>
        <term>OCSP</term>
        <description>Online Certificate Status Protocol</description>
      </entry>
      <entry>
        <term>OID</term>
        <description>Object Identifier</description>
      </entry>
      <entry>
        <term>OMB</term>
        <description>Office of Management and Budget</description>
      </entry>
      <entry>
        <term>OS</term>
        <description>Operating System</description>
      </entry>
      <entry>
        <term>PDF</term>
        <description>Portable Document Format</description>
      </entry>
      <entry>
        <term>PID</term>
        <description>Process Identifier</description>
      </entry>
      <entry>
        <term>PII</term>
        <description>Personally Identifiable Information</description>
      </entry>
      <entry>
        <term>PKG</term>
        <description>Package file</description>
      </entry>
      <entry>
        <term>PKI</term>
        <description>Public Key Infrastructure</description>
      </entry>
      <entry>
        <term>PP</term>
        <description>Protection Profile</description>
      </entry>
      <entry>
        <term>IT</term>
        <description>Information Technology</description>
      </entry>
      <entry>
        <term>RBG</term>
        <description>Random Bit Generator</description>
      </entry>
      <entry>
        <term>RFC</term>
        <description>Request for Comment</description>
      </entry>
      <entry>
        <term>RNG</term>
        <description>Random Number Generator</description>
      </entry>
      <entry>
        <term>RNGVS</term>
        <description>Random Number Generator Validation System</description>
      </entry>
      <entry>
        <term>SAN</term>
        <description>Subject Alternative Name</description>
      </entry>
      <entry>
        <term>SAR</term>
        <description>Security Assurance Requirement</description>
      </entry>
      <entry>
        <term>SE</term>
        <description>Security Enhancements</description>
      </entry>
      <entry>
        <term>SFR</term>
        <description>Security Functional Requirement</description>
      </entry>
      <entry>
        <term>SHA</term>
        <description>Secure Hash Algorithm</description>
      </entry>
      <entry>
        <term>S/MIME</term>
        <description>Secure/Multi-purpose Internet Mail Extensions</description>
      </entry>
      <entry>
        <term>SIP</term>
        <description>Session Initiation Protocol</description>
      </entry>
      <entry>
        <term>SP</term>
        <description>Special Publication</description>
      </entry>
      <entry>
        <term>SSH</term>
        <description>Secure Shell</description>
      </entry>
      <entry>
        <term>SWID</term>
        <description>Software Identification</description>
      </entry>
      <entry>
        <term>TLS</term>
        <description>Transport Layer Security</description>
      </entry>
      <entry>
        <term>UI</term>
        <description>User Interface</description>
      </entry>
      <entry>
        <term>URI</term>
        <description>Uniform Resource Identifier</description>
      </entry>
      <entry>
        <term>URL</term>
        <description>Uniform Resource Locator</description>
      </entry>
      <entry>
        <term>USB</term>
        <description>Universal Serial Bus</description>
      </entry>
      <entry>
        <term>XCCDF</term>
        <description>eXtensible Configuration Checklist Description Format</description>
      </entry>
      <entry>
        <term>XOR</term>
        <description>Exclusive Or</description>
      </entry>
    </acronyms>
  </appendix>
</PP>
