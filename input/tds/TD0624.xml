<?xml version="1.0" encoding="utf-8"?>
<technical-decisions  xmlns:h="http://www.w3.org/1999/xhtml" 
		      xmlns="https://niap-ccevs.org/cc/v1">
  <bunch>
    <applies-to max-inclusive="1.4" name="Protection Profile for Application Software"/>

    <decision id='0624'>
    	<notes> Addition of DataStore for Storing and Setting Configuration Options</notes>

        <change xpath=".//f-element[@id='fel-config-store']" mode="replace">
			<f-element id="fel-config-store">
				<title>The application shall
				<selectables>
					<selectable>invoke the mechanisms recommended by the platform vendor for storing and setting configuration options</selectable>
					<selectable>implement functionality to encrypt and store configuration options as defined by FDP_PRT_EXT.1 in the PP-Module for File Encryption</selectable>
				</selectables>
				</title>
				<note role="application"> 
					<h:p>Configuration options that are stored remotely are not subject to this requirement. 
					Sensitive Data is generally not considered part of configuration options
					and should be stored according to FDP_DAR_EXT.1 or FCS_STO_EXT.1.</h:p>
					If â€œ<h:i>implement functionality to encrypt and store configuration options as defined by FDP_PRT_EXT.1
					in the PP-Module for File Encryption</h:i>" is selected, the TSF must claim conformance to a 
					PP-Configuration that includes the PP-Module for File Encryption.
				</note>
				<aactivity>
					<TSS>
						<h:p>The evaluator shall review the TSS to identify the application's configuration options
						(e.g. settings) and determine whether these are stored and set using the mechanisms
						supported by the platform or implemented by the application in accordance with the PP-Module for File Encryption. 
						At a minimum the TSS shall list settings related to any SFRs and any settings that are mandated in the 
						operational guidance in response to an SFR.</h:p>
						<h:p>
						Conditional: If "implement functionality to encrypt and store configuration options as defined by FDP_PRT_EXT.1
						in the PP-Module for File Encryption" is selected, the evaluator shall ensure that the TSS identifies those options, 
						as well as indicates where the encrypted representation of these options is stored.</h:p>
					</TSS>
					<Guidance><h:p>None.</h:p></Guidance>
					<Tests>
						If "invoke the mechanisms recommended by the platform vendor for storing and setting configuration options" is chosen,
						the method of testing varies per platform as follows: 
	                    <h:div><depends ref="android"/>
							The evaluator shall run the application and make security-related changes to its configuration.
							The evaluator shall check that at least one file exists at location
							<h:span style="path">/data/data/<h:i>package</h:i>/shared_prefs/</h:span> (for SharedPreferences )
							and/or  <h:span style="path">/data/data/package/files/datastore</h:span> (for DataStore),
							where the <h:i>package</h:i> is the Java package
							of the application. For SharedPreferences the evaluator shall examine the XML file to make sure it reflects the 
							changes made to the configuration to verify that the application used SharedPreferences and/or PreferenceActivity 
							to store the configuration data. For DataStore the evaluator shall use a protocol buffer analyzer to examine the 
							file to make sure it reflects the changes made to the configuration to verify that the application used DataStore 
							to store the configuration data.
						</h:div>
						<h:div><depends ref="windows"/>The evaluator shall determine and verify that Windows
							Universal Applications use either the Windows.Storage namespace, Windows.UI.ApplicationSettings namespace,
							or the IsolatedStorageSettings namespace for storing application specific settings.
							For .NET applications, the evaluator shall determine and verify that the application 
							uses one of the locations listed in <h:a href='https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/'>
							https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/</h:a> for storing application specific settings.
							For Classic Desktop applications, the evaluator shall run the application while 
							monitoring it with the SysInternals tool <h:span class="util">ProcMon</h:span> and 
							make changes to its configuration. 
							The evaluator shall verify that <h:span class="util">ProcMon</h:span> logs show corresponding changes to the
							the Windows Registry or C:\ProgramData\ directory.
						</h:div>
						<h:div><depends ref="ios"/>The evaluator shall verify that the app uses the
							<h:code>user defaults system</h:code> or <h:code>key-value store</h:code> for storing all
							settings.</h:div>
						<h:div><depends ref="linux"/> 
							The evaluator shall run the application while monitoring it with the utility <h:span class="util">strace</h:span>.
							The evaluator shall make security-related changes to its configuration.
							The evaluator shall verify that <h:span class="util">strace</h:span> logs corresponding changes to configuration 
							files that reside in /etc (for system-specific configuration), 
							in the user's home directory (for user-specific configuration), or /var/lib/ (for configurations 
							controlled by UI and not intended to be directly modified by an administrator).
						</h:div>
						<h:div><depends ref="Solaris"/>
							The evaluator shall run the application while monitoring it with the utility 
							<h:span class="util">dtrace</h:span>.
							The evaluator shall make security-related changes to its configuration.
							The evaluator shall verify that <h:span class="util">dtrace</h:span> logs corresponding changes to 
							configuration 
							files that reside in /etc (for system-specific configuration) or 
							in the user's home directory(for user-specific configuration).
						</h:div>
						<h:div><depends ref="mac"/>
							The evaluator shall verify that the application stores and retrieves settings
							using the <h:code>NSUserDefaults</h:code> class.
						</h:div>
						If "implement functionality to encrypt and store configuration options as defined by 
						FDP_PRT_EXT.1 in the PP-Module for File Encryption" is selected, for all configuration 
						options listed in the TSS as being stored and protected using encryption, the evaluator 
						shall examine the contents of the configuration option storage (identified in the TSS) to determine 
						that the options have been encrypted.
					</Tests>
				</aactivity>
			</f-element>
	</change>
    </decision>
  </bunch>
</technical-decisions>